declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets pointer movement over a view.
   * https://developer.apple.com/documentation/uikit/uihovergesturerecognizer
   */
  interface UIHoverGestureRecognizer extends UIGestureRecognizer {
    //
    alloc():UIHoverGestureRecognizer;
    //
    init():UIHoverGestureRecognizer;
  }
}

declare const UIHoverGestureRecognizer: cocoascript.UIHoverGestureRecognizer;
declare namespace cocoascript {
  /**
   * An interaction object that makes it possible to show a tooltip when hovering a pointer over a view or control.
   * https://developer.apple.com/documentation/uikit/uitooltipinteraction
   */
  interface UIToolTipInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitooltipinteraction/3795600-init
    init():UIToolTipInteraction;
    // https://developer.apple.com/documentation/uikit/uitooltipinteraction/3795601-initwithdefaulttooltip
    initWithDefaultToolTip(defaultToolTip: string | cocoascript.NSString):UIToolTipInteraction;
    // https://developer.apple.com/documentation/uikit/uitooltipinteraction/3795599-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitooltipinteraction/3795597-defaulttooltip
    defaultToolTip(): string | cocoascript.NSString;
    setDefaultToolTip(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitooltipinteraction/3795598-delegate
    delegate(): UIToolTipInteractionDelegate;
    setDelegate(value: UIToolTipInteractionDelegate): void;
    //
    alloc():UIToolTipInteraction;
    //
    init():UIToolTipInteraction;
  }
}

declare const UIToolTipInteraction: cocoascript.UIToolTipInteraction;
declare namespace cocoascript {
  /**
   * An interface that provides tooltip settings to an interaction.
   * https://developer.apple.com/documentation/uikit/uitooltipinteractiondelegate
   */
  interface UIToolTipInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitooltipinteractiondelegate/3858113-tooltipinteraction
    toolTipInteraction_configurationAtPoint(interaction: UIToolTipInteraction, point: CGPoint):UIToolTipConfiguration;
  }
}
declare namespace cocoascript {
  /**
   * A representation of the current device.
   * https://developer.apple.com/documentation/uikit/uidevice
   */
  interface UIDevice extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidevice/1620014-currentdevice
    currentDevice(): UIDevice;
    setCurrentDevice(value: UIDevice): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620036-multitaskingsupported
    multitaskingSupported(): boolean;
    setMultitaskingSupported(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620015-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620054-systemname
    systemName(): string | cocoascript.NSString;
    setSystemName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620043-systemversion
    systemVersion(): string | cocoascript.NSString;
    setSystemVersion(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620044-model
    model(): string | cocoascript.NSString;
    setModel(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620029-localizedmodel
    localizedModel(): string | cocoascript.NSString;
    setLocalizedModel(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620037-userinterfaceidiom
    userInterfaceIdiom(): UIUserInterfaceIdiom;
    setUserInterfaceIdiom(value: UIUserInterfaceIdiom): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor
    identifierForVendor(): NSUUID;
    setIdentifierForVendor(value: NSUUID): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620053-orientation
    orientation(): UIDeviceOrientation;
    setOrientation(value: UIDeviceOrientation): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620055-generatesdeviceorientationnotifi
    generatesDeviceOrientationNotifications(): boolean;
    setGeneratesDeviceOrientationNotifications(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620041-begingeneratingdeviceorientation
    beginGeneratingDeviceOrientationNotifications():void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620033-endgeneratingdeviceorientationno
    endGeneratingDeviceOrientationNotifications():void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620042-batterylevel
    batteryLevel(): number;
    setBatteryLevel(value: number): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620045-batterymonitoringenabled
    batteryMonitoringEnabled(): boolean;
    setBatteryMonitoringEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620051-batterystate
    batteryState(): UIDeviceBatteryState;
    setBatteryState(value: UIDeviceBatteryState): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620017-proximitymonitoringenabled
    proximityMonitoringEnabled(): boolean;
    setProximityMonitoringEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620058-proximitystate
    proximityState(): boolean;
    setProximityState(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidevice/1620050-playinputclick
    playInputClick():void;
    //
    alloc():UIDevice;
    //
    init():UIDevice;
  }
}

declare const UIDevice: cocoascript.UIDevice;
// https://developer.apple.com/documentation/uikit/1620016-ui_user_interface_idiom
declare const UI_USER_INTERFACE_IDIOM: void;
declare namespace cocoascript {
  /**
   * An object from a data set type stored in an asset catalog.
   * https://developer.apple.com/documentation/uikit/nsdataasset
   */
  interface NSDataAsset extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdataasset/1403439-initwithname
    initWithName(name: NSDataAssetName):NSDataAsset;
    // https://developer.apple.com/documentation/uikit/nsdataasset/1403436-initwithname
    initWithName_bundle(name: NSDataAssetName, bundle: NSBundle):NSDataAsset;
    // https://developer.apple.com/documentation/uikit/nsdataasset/1403437-data
    data(): NSData;
    setData(value: NSData): void;
    // https://developer.apple.com/documentation/uikit/nsdataasset/1403435-name
    name(): NSDataAssetName;
    setName(value: NSDataAssetName): void;
    // https://developer.apple.com/documentation/uikit/nsdataasset/1403434-typeidentifier
    typeIdentifier(): string | cocoascript.NSString;
    setTypeIdentifier(value: string | cocoascript.NSString): void;
    //
    alloc():NSDataAsset;
    //
    init():NSDataAsset;
  }
}

declare const NSDataAsset: cocoascript.NSDataAsset;
declare namespace cocoascript {
  /**
   * The relationship between two user interface objects that must be satisfied by the constraint-based layout system.
   * https://developer.apple.com/documentation/uikit/nslayoutconstraint
   */
  interface NSLayoutConstraint extends NSObject {
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526944-constraintswithvisualformat
    constraintsWithVisualFormat_options_metrics_views(format: string | cocoascript.NSString, opts: NSLayoutFormatOptions, metrics: NSLayoutConstraint, views: NSLayoutConstraint):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526954-constraintwithitem
    constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant(view1: NSLayoutConstraint, attr1: NSLayoutAttribute, relation: NSLayoutRelation, view2: NSLayoutConstraint, attr2: NSLayoutAttribute, multiplier: CGFloat, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1527000-active
    active(): boolean;
    setActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526955-activateconstraints
    activateConstraints(constraints: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526066-deactivateconstraints
    deactivateConstraints(constraints: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526860-firstitem
    firstItem(): id;
    setFirstItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1525204-firstattribute
    firstAttribute(): NSLayoutAttribute;
    setFirstAttribute(value: NSLayoutAttribute): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526549-relation
    relation(): NSLayoutRelation;
    setRelation(value: NSLayoutRelation): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526868-seconditem
    secondItem(): id;
    setSecondItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526941-secondattribute
    secondAttribute(): NSLayoutAttribute;
    setSecondAttribute(value: NSLayoutAttribute): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526920-multiplier
    multiplier(): CGFloat;
    setMultiplier(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526928-constant
    constant(): CGFloat;
    setConstant(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1644261-firstanchor
    firstAnchor(): NSLayoutAnchor;
    setFirstAnchor(value: NSLayoutAnchor): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1644260-secondanchor
    secondAnchor(): NSLayoutAnchor;
    setSecondAnchor(value: NSLayoutAnchor): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526946-priority
    priority(): UILayoutPriority;
    setPriority(value: UILayoutPriority): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526879-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nslayoutconstraint/1525647-shouldbearchived
    shouldBeArchived(): boolean;
    setShouldBeArchived(value: boolean): void;
    //
    alloc():NSLayoutConstraint;
    //
    init():NSLayoutConstraint;
  }
}

declare const NSLayoutConstraint: cocoascript.NSLayoutConstraint;
declare namespace cocoascript {
  /**
   * A factory class for creating size-based layout constraint objects using a fluent API.
   * https://developer.apple.com/documentation/uikit/nslayoutdimension
   */
  interface NSLayoutDimension extends NSLayoutAnchor {
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500951-constraintequaltoanchor
    constraintEqualToAnchor_multiplier(anchor: NSLayoutDimension, m: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500934-constraintequaltoanchor
    constraintEqualToAnchor_multiplier_constant(anchor: NSLayoutDimension, m: CGFloat, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500941-constraintequaltoconstant
    constraintEqualToConstant(c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500961-constraintgreaterthanorequaltoan
    constraintGreaterThanOrEqualToAnchor_multiplier(anchor: NSLayoutDimension, m: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500965-constraintgreaterthanorequaltoan
    constraintGreaterThanOrEqualToAnchor_multiplier_constant(anchor: NSLayoutDimension, m: CGFloat, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500939-constraintgreaterthanorequaltoco
    constraintGreaterThanOrEqualToConstant(c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500943-constraintlessthanorequaltoancho
    constraintLessThanOrEqualToAnchor_multiplier(anchor: NSLayoutDimension, m: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500957-constraintlessthanorequaltoancho
    constraintLessThanOrEqualToAnchor_multiplier_constant(anchor: NSLayoutDimension, m: CGFloat, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutdimension/1500963-constraintlessthanorequaltoconst
    constraintLessThanOrEqualToConstant(c: CGFloat):NSLayoutConstraint;
    //
    alloc():NSLayoutDimension;
    //
    init():NSLayoutDimension;
  }
}

declare const NSLayoutDimension: cocoascript.NSLayoutDimension;
declare namespace cocoascript {
  /**
   * A factory class for creating layout constraint objects using a fluent API.
   * https://developer.apple.com/documentation/uikit/nslayoutanchor
   */
  interface NSLayoutAnchor extends NSObject {
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500946-constraintequaltoanchor
    constraintEqualToAnchor(anchor: AnchorType):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500937-constraintequaltoanchor
    constraintEqualToAnchor_constant(anchor: AnchorType, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500936-constraintgreaterthanorequaltoan
    constraintGreaterThanOrEqualToAnchor(anchor: AnchorType):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500948-constraintgreaterthanorequaltoan
    constraintGreaterThanOrEqualToAnchor_constant(anchor: AnchorType, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500953-constraintlessthanorequaltoancho
    constraintLessThanOrEqualToAnchor(anchor: AnchorType):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutanchor/1500959-constraintlessthanorequaltoancho
    constraintLessThanOrEqualToAnchor_constant(anchor: AnchorType, c: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/appkit/nslayoutanchor/2870023-constraintsaffectinglayout
    constraintsAffectingLayout(): NSLayoutConstraint;
    setConstraintsAffectingLayout(value: NSLayoutConstraint): void;
    // https://developer.apple.com/documentation/appkit/nslayoutanchor/2870024-hasambiguouslayout
    hasAmbiguousLayout(): boolean;
    setHasAmbiguousLayout(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nslayoutanchor/2870022-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/appkit/nslayoutanchor/2870025-item
    item(): id;
    setItem(value: id): void;
    //
    alloc():NSLayoutAnchor;
    //
    init():NSLayoutAnchor;
  }
}

declare const NSLayoutAnchor: cocoascript.NSLayoutAnchor;
declare namespace cocoascript {
  /**
   * A factory class for creating horizontal layout constraint objects using a fluent API.
   * https://developer.apple.com/documentation/uikit/nslayoutxaxisanchor
   */
  interface NSLayoutXAxisAnchor extends NSLayoutAnchor {
    // https://developer.apple.com/documentation/uikit/nslayoutxaxisanchor/2866112-constraintequaltosystemspacingaf
    constraintEqualToSystemSpacingAfterAnchor_multiplier(anchor: NSLayoutXAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutxaxisanchor/2865871-constraintgreaterthanorequaltosy
    constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier(anchor: NSLayoutXAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutxaxisanchor/2866018-constraintlessthanorequaltosyste
    constraintLessThanOrEqualToSystemSpacingAfterAnchor_multiplier(anchor: NSLayoutXAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutxaxisanchor/2866024-anchorwithoffsettoanchor
    anchorWithOffsetToAnchor(otherAnchor: NSLayoutXAxisAnchor):NSLayoutDimension;
    //
    alloc():NSLayoutXAxisAnchor;
    //
    init():NSLayoutXAxisAnchor;
  }
}

declare const NSLayoutXAxisAnchor: cocoascript.NSLayoutXAxisAnchor;
declare namespace cocoascript {
  /**
   * A factory class for creating vertical layout constraint objects using a fluent API.
   * https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor
   */
  interface NSLayoutYAxisAnchor extends NSLayoutAnchor {
    // https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor/2866022-constraintequaltosystemspacingbe
    constraintEqualToSystemSpacingBelowAnchor_multiplier(anchor: NSLayoutYAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor/2866086-constraintgreaterthanorequaltosy
    constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier(anchor: NSLayoutYAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor/2865829-constraintlessthanorequaltosyste
    constraintLessThanOrEqualToSystemSpacingBelowAnchor_multiplier(anchor: NSLayoutYAxisAnchor, multiplier: CGFloat):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor/2865935-anchorwithoffsettoanchor
    anchorWithOffsetToAnchor(otherAnchor: NSLayoutYAxisAnchor):NSLayoutDimension;
    //
    alloc():NSLayoutYAxisAnchor;
    //
    init():NSLayoutYAxisAnchor;
  }
}

declare const NSLayoutYAxisAnchor: cocoascript.NSLayoutYAxisAnchor;
declare namespace cocoascript {
  /**
   * An object that manages metrics for drawing attributed strings.
   * https://developer.apple.com/documentation/uikit/nsstringdrawingcontext
   */
  interface NSStringDrawingContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsstringdrawingcontext/1534020-minimumscalefactor
    minimumScaleFactor(): CGFloat;
    setMinimumScaleFactor(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsstringdrawingcontext/1531498-actualscalefactor
    actualScaleFactor(): CGFloat;
    setActualScaleFactor(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsstringdrawingcontext/1530525-totalbounds
    totalBounds(): CGRect;
    setTotalBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nsstringdrawingcontext/1624043-minimumtrackingadjustment
    minimumTrackingAdjustment(): CGFloat;
    setMinimumTrackingAdjustment(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsstringdrawingcontext/1624042-actualtrackingadjustment
    actualTrackingAdjustment(): CGFloat;
    setActualTrackingAdjustment(value: CGFloat): void;
    //
    alloc():NSStringDrawingContext;
    //
    init():NSStringDrawingContext;
  }
}

declare const NSStringDrawingContext: cocoascript.NSStringDrawingContext;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsstringdrawingoptions
  type NSStringDrawingOptions = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An object you use to specify attributes to create and style a drop shadow during drawing operations.
   * https://developer.apple.com/documentation/uikit/nsshadow
   */
  interface NSShadow extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsshadow/1429853-init
    init():NSShadow;
    // https://developer.apple.com/documentation/uikit/nsshadow/1623903-initwithcoder
    initWithCoder(coder: NSCoder):NSShadow;
    // https://developer.apple.com/documentation/uikit/nsshadow/1429851-shadowoffset
    shadowOffset(): CGSize;
    setShadowOffset(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/nsshadow/1429846-shadowblurradius
    shadowBlurRadius(): CGFloat;
    setShadowBlurRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsshadow/1429855-shadowcolor
    shadowColor(): id;
    setShadowColor(value: id): void;
    // https://developer.apple.com/documentation/appkit/nsshadow/1429857-set
    set():void;
    //
    alloc():NSShadow;
    //
    init():NSShadow;
  }
}

declare const NSShadow: cocoascript.NSShadow;
declare namespace cocoascript {
  /**
   * A concrete subclass of the text content manager that provides support for attributed strings that you use as a backing store.
   * https://developer.apple.com/documentation/uikit/nstextcontentstorage
   */
  interface NSTextContentStorage extends NSTextContentManager {
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3809934-attributedstring
    attributedString(): NSAttributedString;
    setAttributedString(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3809935-attributedstringfortextelement
    attributedStringForTextElement(textElement: NSTextElement):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3809937-textelementforattributedstring
    textElementForAttributedString(attributedString: NSAttributedString):NSTextElement;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3809936-delegate
    delegate(): NSTextContentStorageDelegate;
    setDelegate(value: NSTextContentStorageDelegate): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3852570-adjustedrangefromrange
    adjustedRangeFromRange_forEditingTextSelection(textRange: NSTextRange, forEditingTextSelection: boolean):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3852571-locationfromlocation
    locationFromLocation_withOffset(location: NSTextLocation, offset: NSInteger):NSTextLocation;
    // https://developer.apple.com/documentation/uikit/nstextcontentstorage/3852572-offsetfromlocation
    offsetFromLocation_toLocation(from: NSTextLocation, to: NSTextLocation):NSInteger;
    //
    alloc():NSTextContentStorage;
    //
    init():NSTextContentStorage;
  }
}

declare const NSTextContentStorage: cocoascript.NSTextContentStorage;
declare namespace cocoascript {
  /**
   * The primary class that you use to manage text layout and presentation for custom text displays.
   * https://developer.apple.com/documentation/uikit/nstextlayoutmanager
   */
  interface NSTextLayoutManager extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809996-init
    init():NSTextLayoutManager;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809997-initwithcoder
    initWithCoder(coder: NSCoder):NSTextLayoutManager;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810000-layoutqueue
    layoutQueue(): NSOperationQueue;
    setLayoutQueue(value: NSOperationQueue): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810005-renderingattributesvalidator
    renderingAttributesValidator(): NSTextLayoutFragment;
    setRenderingAttributesValidator(value: NSTextLayoutFragment): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810018-usesfontleading
    usesFontLeading(): boolean;
    setUsesFontLeading(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810019-useshyphenation
    usesHyphenation(): boolean;
    setUsesHyphenation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810001-limitslayoutforsuspiciouscontent
    limitsLayoutForSuspiciousContents(): boolean;
    setLimitsLayoutForSuspiciousContents(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809990-delegate
    delegate(): NSTextLayoutManagerDelegate;
    setDelegate(value: NSTextLayoutManagerDelegate): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810011-textcontentmanager
    textContentManager(): NSTextContentManager;
    setTextContentManager(value: NSTextContentManager): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810010-textcontainer
    textContainer(): NSTextContainer;
    setTextContainer(value: NSTextContainer): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810014-textselectionnavigation
    textSelectionNavigation(): NSTextSelectionNavigation;
    setTextSelectionNavigation(value: NSTextSelectionNavigation): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810015-textselections
    textSelections(): NSTextSelection;
    setTextSelections(value: NSTextSelection): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810017-usageboundsfortextcontainer
    usageBoundsForTextContainer(): CGRect;
    setUsageBoundsForTextContainer(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809995-enumeratetextsegmentsinrange
    enumerateTextSegmentsInRange_type_options_usingBlock(textRange: NSTextRange, type: NSTextLayoutManagerSegmentType, options: NSTextLayoutManagerSegmentOptions, block: NSTextContainer):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810008-replacetextcontentmanager
    replaceTextContentManager(textContentManager: NSTextContentManager):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810006-replacecontentsinrange
    replaceContentsInRange_withAttributedString(range: NSTextRange, attributedString: NSAttributedString):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810007-replacecontentsinrange
    replaceContentsInRange_withTextElements(range: NSTextRange, textElements: NSTextElement):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810002-linkrenderingattributes
    linkRenderingAttributes(): id;
    setLinkRenderingAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809989-addrenderingattribute
    addRenderingAttribute_value_forTextRange(renderingAttribute: NSAttributedStringKey, value: NSTextLayoutManager, textRange: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809993-enumeraterenderingattributesfrom
    enumerateRenderingAttributesFromLocation_reverse_usingBlock(location: NSTextLocation, reverse: boolean, block: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810004-renderingattributesforlink
    renderingAttributesForLink_atLocation(link: NSTextLayoutManager, location: NSTextLocation):NSTextLayoutManager;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809999-invalidaterenderingattributesfor
    invalidateRenderingAttributesForTextRange(textRange: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810003-removerenderingattribute
    removeRenderingAttribute_forTextRange(renderingAttribute: NSAttributedStringKey, textRange: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810009-setrenderingattributes
    setRenderingAttributes_forTextRange(renderingAttributes: NSTextLayoutManager, textRange: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810016-textviewportlayoutcontroller
    textViewportLayoutController(): NSTextViewportLayoutController;
    setTextViewportLayoutController(value: NSTextViewportLayoutController): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809998-invalidatelayoutforrange
    invalidateLayoutForRange(range: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810012-textlayoutfragmentforlocation
    textLayoutFragmentForLocation(location: NSTextLocation):NSTextLayoutFragment;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3810013-textlayoutfragmentforposition
    textLayoutFragmentForPosition(position: CGPoint):NSTextLayoutFragment;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809991-ensurelayoutforbounds
    ensureLayoutForBounds(bounds: CGRect):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809992-ensurelayoutforrange
    ensureLayoutForRange(range: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanager/3809994-enumeratetextlayoutfragmentsfrom
    enumerateTextLayoutFragmentsFromLocation_options_usingBlock(location: NSTextLocation, options: NSTextLayoutFragmentEnumerationOptions, block: NSTextLayoutFragment):NSTextLocation;
    //
    alloc():NSTextLayoutManager;
    //
    init():NSTextLayoutManager;
  }
}

declare const NSTextLayoutManager: cocoascript.NSTextLayoutManager;
declare namespace cocoascript {
  /**
   * A region where text layout occurs.
   * https://developer.apple.com/documentation/uikit/nstextcontainer
   */
  interface NSTextContainer extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444529-initwithsize
    initWithSize(size: CGSize):NSTextContainer;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444573-initwithcoder
    initWithCoder(coder: NSCoder):NSTextContainer;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444517-layoutmanager
    layoutManager(): NSLayoutManager;
    setLayoutManager(value: NSLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/3809914-textlayoutmanager
    textLayoutManager(): NSTextLayoutManager;
    setTextLayoutManager(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444545-replacelayoutmanager
    replaceLayoutManager(newLayoutManager: NSLayoutManager):void;
    // https://developer.apple.com/documentation/appkit/nstextcontainer/1444537-textview
    textView(): NSTextView;
    setTextView(value: NSTextView): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444553-size
    size(): CGSize;
    setSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444569-exclusionpaths
    exclusionPaths(): UIBezierPath;
    setExclusionPaths(value: UIBezierPath): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444519-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444563-widthtrackstextview
    widthTracksTextView(): boolean;
    setWidthTracksTextView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444559-heighttrackstextview
    heightTracksTextView(): boolean;
    setHeightTracksTextView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444531-maximumnumberoflines
    maximumNumberOfLines(): NSUInteger;
    setMaximumNumberOfLines(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444527-linefragmentpadding
    lineFragmentPadding(): CGFloat;
    setLineFragmentPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444555-linefragmentrectforproposedrect
    lineFragmentRectForProposedRect_atIndex_writingDirection_remainingRect(proposedRect: CGRect, characterIndex: NSUInteger, baseWritingDirection: NSWritingDirection, remainingRect: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/nstextcontainer/1444525-simplerectangulartextcontainer
    simpleRectangularTextContainer(): boolean;
    setSimpleRectangularTextContainer(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nstextcontainer/1444543-initwithcontainersize
    initWithContainerSize(aContainerSize: NSSize):NSTextContainer;
    // https://developer.apple.com/documentation/appkit/nstextcontainer/1444571-linefragmentrectforproposedrect
    lineFragmentRectForProposedRect_sweepDirection_movementDirection_remainingRect(proposedRect: NSRect, sweepDirection: NSLineSweepDirection, movementDirection: NSLineMovementDirection, remainingRect: NSRectPointer):NSRect;
    // https://developer.apple.com/documentation/appkit/nstextcontainer/1444567-containspoint
    containsPoint(point: NSPoint):boolean;
    // https://developer.apple.com/documentation/appkit/nstextcontainer/1444551-containersize
    containerSize(): NSSize;
    setContainerSize(value: NSSize): void;
    //
    alloc():NSTextContainer;
    //
    init():NSTextContainer;
  }
}

declare const NSTextContainer: cocoascript.NSTextContainer;
declare namespace cocoascript {
  /**
   * The fundamental storage mechanism of TextKit that contains the text managed by the system.
   * https://developer.apple.com/documentation/uikit/nstextstorage
   */
  interface NSTextStorage extends NSMutableAttributedString {
    // https://developer.apple.com/documentation/uikit/nstextstorage/1532704-delegate
    delegate(): NSTextStorageDelegate;
    setDelegate(value: NSTextStorageDelegate): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1527938-layoutmanagers
    layoutManagers(): NSLayoutManager;
    setLayoutManagers(value: NSLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1533459-addlayoutmanager
    addLayoutManager(aLayoutManager: NSLayoutManager):void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1528755-removelayoutmanager
    removeLayoutManager(aLayoutManager: NSLayoutManager):void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1529793-edited
    edited_range_changeInLength(editedMask: NSTextStorageEditActions, editedRange: NSRange, delta: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1525980-processediting
    processEditing():void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1534025-invalidateattributesinrange
    invalidateAttributesInRange(range: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1533947-ensureattributesarefixedinrange
    ensureAttributesAreFixedInRange(range: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1532043-fixesattributeslazily
    fixesAttributesLazily(): boolean;
    setFixesAttributesLazily(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1525323-editedmask
    editedMask(): NSTextStorageEditActions;
    setEditedMask(value: NSTextStorageEditActions): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1524379-editedrange
    editedRange(): NSRange;
    setEditedRange(value: NSRange): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/1528400-changeinlength
    changeInLength(): NSInteger;
    setChangeInLength(value: NSInteger): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1532095-attributeruns
    attributeRuns(): NSTextStorage;
    setAttributeRuns(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1525943-paragraphs
    paragraphs(): NSTextStorage;
    setParagraphs(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1524565-words
    words(): NSTextStorage;
    setWords(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1535788-characters
    characters(): NSTextStorage;
    setCharacters(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1535365-font
    font(): NSFont;
    setFont(value: NSFont): void;
    // https://developer.apple.com/documentation/appkit/nstextstorage/1527175-foregroundcolor
    foregroundColor(): NSColor;
    setForegroundColor(value: NSColor): void;
    // https://developer.apple.com/documentation/uikit/nstextstorage/3824756-textstorageobserver
    textStorageObserver(): NSTextStorageObserving;
    setTextStorageObserver(value: NSTextStorageObserving): void;
    //
    alloc():NSTextStorage;
    //
    init():NSTextStorage;
  }
}

declare const NSTextStorage: cocoascript.NSTextStorage;
declare namespace cocoascript {
  /**
   * An abstract class that defines the interface and a default implementation for managing the text document contents.
   * https://developer.apple.com/documentation/uikit/nstextcontentmanager
   */
  interface NSTextContentManager extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809919-init
    init():NSTextContentManager;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809920-initwithcoder
    initWithCoder(coder: NSCoder):NSTextContentManager;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3852565-automaticallysynchronizestobacki
    automaticallySynchronizesToBackingStore(): boolean;
    setAutomaticallySynchronizesToBackingStore(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809918-haseditingtransaction
    hasEditingTransaction(): boolean;
    setHasEditingTransaction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809921-performeditingtransactionusingbl
    performEditingTransactionUsingBlock(transaction: void):void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809923-recordeditactioninrange
    recordEditActionInRange_newTextRange(originalTextRange: NSTextRange, newTextRange: NSTextRange):void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809922-primarytextlayoutmanager
    primaryTextLayoutManager(): NSTextLayoutManager;
    setPrimaryTextLayoutManager(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809929-textlayoutmanagers
    textLayoutManagers(): NSTextLayoutManager;
    setTextLayoutManagers(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3852564-automaticallysynchronizestextlay
    automaticallySynchronizesTextLayoutManagers(): boolean;
    setAutomaticallySynchronizesTextLayoutManagers(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809916-addtextlayoutmanager
    addTextLayoutManager(textLayoutManager: NSTextLayoutManager):void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809924-removetextlayoutmanager
    removeTextLayoutManager(textLayoutManager: NSTextLayoutManager):void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809925-synchronizetextlayoutmanagers
    synchronizeTextLayoutManagers(completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809917-delegate
    delegate(): NSTextContentManagerDelegate;
    setDelegate(value: NSTextContentManagerDelegate): void;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanager/3809928-textelementsforrange
    textElementsForRange(range: NSTextRange):NSTextElement;
    //
    alloc():NSTextContentManager;
    //
    init():NSTextContentManager;
  }
}

declare const NSTextContentManager: cocoascript.NSTextContentManager;
declare namespace cocoascript {
  /**
   * A class that represents the layout fragment typically corresponding to a rendering surface such as layer or view subclass.
   * https://developer.apple.com/documentation/uikit/nstextlayoutfragment
   */
  interface NSTextLayoutFragment extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3852574-bottommargin
    bottomMargin(): CGFloat;
    setBottomMargin(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3852575-leadingpadding
    leadingPadding(): CGFloat;
    setLeadingPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3852576-topmargin
    topMargin(): CGFloat;
    setTopMargin(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3852577-trailingpadding
    trailingPadding(): CGFloat;
    setTrailingPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809965-initwithcoder
    initWithCoder(coder: NSCoder):NSTextLayoutFragment;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809966-initwithtextelement
    initWithTextElement_range(textElement: NSTextElement, rangeInElement: NSTextRange):NSTextLayoutFragment;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809975-textlayoutmanager
    textLayoutManager(): NSTextLayoutManager;
    setTextLayoutManager(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809969-layoutqueue
    layoutQueue(): NSOperationQueue;
    setLayoutQueue(value: NSOperationQueue): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809968-layoutfragmentframe
    layoutFragmentFrame(): CGRect;
    setLayoutFragmentFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809971-renderingsurfacebounds
    renderingSurfaceBounds(): CGRect;
    setRenderingSurfaceBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3824748-drawatpoint
    drawAtPoint_inContext(point: CGPoint, context: CGContextRef):void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809967-invalidatelayout
    invalidateLayout():void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809973-textattachmentviewproviders
    textAttachmentViewProviders(): NSTextAttachmentViewProvider;
    setTextAttachmentViewProviders(value: NSTextAttachmentViewProvider): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809964-framefortextattachmentatlocation
    frameForTextAttachmentAtLocation(location: NSTextLocation):CGRect;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809972-state
    state(): NSTextLayoutFragmentState;
    setState(value: NSTextLayoutFragmentState): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809970-rangeinelement
    rangeInElement(): NSTextRange;
    setRangeInElement(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809974-textelement
    textElement(): NSTextElement;
    setTextElement(value: NSTextElement): void;
    // https://developer.apple.com/documentation/uikit/nstextlayoutfragment/3809976-textlinefragments
    textLineFragments(): NSTextLineFragment;
    setTextLineFragments(value: NSTextLineFragment): void;
    //
    alloc():NSTextLayoutFragment;
    //
    init():NSTextLayoutFragment;
  }
}

declare const NSTextLayoutFragment: cocoascript.NSTextLayoutFragment;
declare namespace cocoascript {
  /**
   * Manages the layout process inside the viewport interacting with its delegate.
   * https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller
   */
  interface NSTextViewportLayoutController extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824769-initwithtextlayoutmanager
    initWithTextLayoutManager(textLayoutManager: NSTextLayoutManager):NSTextViewportLayoutController;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824772-textlayoutmanager
    textLayoutManager(): NSTextLayoutManager;
    setTextLayoutManager(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824768-delegate
    delegate(): NSTextViewportLayoutControllerDelegate;
    setDelegate(value: NSTextViewportLayoutControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824773-viewportbounds
    viewportBounds(): CGRect;
    setViewportBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824774-viewportrange
    viewportRange(): NSTextRange;
    setViewportRange(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3852589-adjustviewportbyverticaloffset
    adjustViewportByVerticalOffset(verticalOffset: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3824770-layoutviewport
    layoutViewport():void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontroller/3852590-relocateviewporttotextlocation
    relocateViewportToTextLocation(textLocation: NSTextLocation):CGFloat;
    //
    alloc():NSTextViewportLayoutController;
    //
    init():NSTextViewportLayoutController;
  }
}

declare const NSTextViewportLayoutController: cocoascript.NSTextViewportLayoutController;
declare namespace cocoascript {
  /**
   * An object that coordinates the layout and display of text characters.
   * https://developer.apple.com/documentation/uikit/nslayoutmanager
   */
  interface NSLayoutManager extends NSObject {
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402975-init
    init():NSLayoutManager;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403043-initwithcoder
    initWithCoder(coder: NSCoder):NSLayoutManager;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402920-delegate
    delegate(): NSLayoutManagerDelegate;
    setDelegate(value: NSLayoutManagerDelegate): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403015-textstorage
    textStorage(): NSTextStorage;
    setTextStorage(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403227-replacetextstorage
    replaceTextStorage(newTextStorage: NSTextStorage):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403197-allowsnoncontiguouslayout
    allowsNonContiguousLayout(): boolean;
    setAllowsNonContiguousLayout(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403207-hasnoncontiguouslayout
    hasNonContiguousLayout(): boolean;
    setHasNonContiguousLayout(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403254-showsinvisiblecharacters
    showsInvisibleCharacters(): boolean;
    setShowsInvisibleCharacters(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402912-showscontrolcharacters
    showsControlCharacters(): boolean;
    setShowsControlCharacters(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403156-usesfontleading
    usesFontLeading(): boolean;
    setUsesFontLeading(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402952-backgroundlayoutenabled
    backgroundLayoutEnabled(): boolean;
    setBackgroundLayoutEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/3021179-limitslayoutforsuspiciouscontent
    limitsLayoutForSuspiciousContents(): boolean;
    setLimitsLayoutForSuspiciousContents(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/3180380-usesdefaulthyphenation
    usesDefaultHyphenation(): boolean;
    setUsesDefaultHyphenation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403144-textcontainers
    textContainers(): NSTextContainer;
    setTextContainers(value: NSTextContainer): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402946-addtextcontainer
    addTextContainer(container: NSTextContainer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403010-inserttextcontainer
    insertTextContainer_atIndex(container: NSTextContainer, index: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403017-removetextcontaineratindex
    removeTextContainerAtIndex(index: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403241-settextcontainer
    setTextContainer_forGlyphRange(container: NSTextContainer, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403091-textcontainerchangedgeometry
    textContainerChangedGeometry(container: NSTextContainer):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403229-textcontainerchangedtextview
    textContainerChangedTextView(container: NSTextContainer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403110-textcontainerforglyphatindex
    textContainerForGlyphAtIndex_effectiveRange(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer):NSTextContainer;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403055-textcontainerforglyphatindex
    textContainerForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer, flag: boolean):NSTextContainer;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402980-usedrectfortextcontainer
    usedRectForTextContainer(container: NSTextContainer):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402924-invalidatedisplayforcharacterran
    invalidateDisplayForCharacterRange(charRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403118-invalidatedisplayforglyphrange
    invalidateDisplayForGlyphRange(glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403171-invalidateglyphsforcharacterrang
    invalidateGlyphsForCharacterRange_changeInLength_actualCharacterRange(charRange: NSRange, delta: NSInteger, actualCharRange: NSRangePointer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403248-invalidatelayoutforcharacterrang
    invalidateLayoutForCharacterRange_actualCharacterRange(charRange: NSRange, actualCharRange: NSRangePointer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403065-processeditingfortextstorage
    processEditingForTextStorage_edited_range_changeInLength_invalidatedRange(textStorage: NSTextStorage, editMask: NSTextStorageEditActions, newCharRange: NSRange, delta: NSInteger, invalidatedCharRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403189-ensureglyphsforcharacterrange
    ensureGlyphsForCharacterRange(charRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403219-ensureglyphsforglyphrange
    ensureGlyphsForGlyphRange(glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402962-ensurelayoutforboundingrect
    ensureLayoutForBoundingRect_inTextContainer(bounds: CGRect, container: NSTextContainer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402986-ensurelayoutforcharacterrange
    ensureLayoutForCharacterRange(charRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402939-ensurelayoutforglyphrange
    ensureLayoutForGlyphRange(glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402967-ensurelayoutfortextcontainer
    ensureLayoutForTextContainer(container: NSTextContainer):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403069-glyphgenerator
    glyphGenerator(): NSGlyphGenerator;
    setGlyphGenerator(value: NSGlyphGenerator): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403104-getglyphsinrange
    getGlyphsInRange_glyphs_properties_characterIndexes_bidiLevels(glyphRange: NSRange, glyphBuffer: CGGlyph, props: NSGlyphProperty, charIndexBuffer: NSUInteger, bidiLevelBuffer: string):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403039-cgglyphatindex
    CGGlyphAtIndex(glyphIndex: NSUInteger):CGGlyph;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403132-cgglyphatindex
    CGGlyphAtIndex_isValidIndex(glyphIndex: NSUInteger, isValidIndex: boolean):CGGlyph;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403030-setglyphs
    setGlyphs_properties_characterIndexes_font_forGlyphRange(glyphs: CGGlyph, props: NSGlyphProperty, charIndexes: NSUInteger, aFont: UIFont, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402944-characterindexforglyphatindex
    characterIndexForGlyphAtIndex(glyphIndex: NSUInteger):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403001-glyphindexforcharacteratindex
    glyphIndexForCharacterAtIndex(charIndex: NSUInteger):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402950-isvalidglyphindex
    isValidGlyphIndex(glyphIndex: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402937-numberofglyphs
    numberOfGlyphs(): NSUInteger;
    setNumberOfGlyphs(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403014-propertyforglyphatindex
    propertyForGlyphAtIndex(glyphIndex: NSUInteger):NSGlyphProperty;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403047-setattachmentsize
    setAttachmentSize_forGlyphRange(attachmentSize: CGSize, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402964-setdrawsoutsidelinefragment
    setDrawsOutsideLineFragment_forGlyphAtIndex(flag: boolean, glyphIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403071-setextralinefragmentrect
    setExtraLineFragmentRect_usedRect_textContainer(fragmentRect: CGRect, usedRect: CGRect, container: NSTextContainer):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402935-setlinefragmentrect
    setLineFragmentRect_forGlyphRange_usedRect(fragmentRect: CGRect, glyphRange: NSRange, usedRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402982-setlocation
    setLocation_forStartOfGlyphRange(location: CGPoint, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403078-setnotshownattribute
    setNotShownAttribute_forGlyphAtIndex(flag: boolean, glyphIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403099-attachmentsizeforglyphatindex
    attachmentSizeForGlyphAtIndex(glyphIndex: NSUInteger):CGSize;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403003-drawsoutsidelinefragmentforglyph
    drawsOutsideLineFragmentForGlyphAtIndex(glyphIndex: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403175-extralinefragmentrect
    extraLineFragmentRect(): CGRect;
    setExtraLineFragmentRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403165-extralinefragmenttextcontainer
    extraLineFragmentTextContainer(): NSTextContainer;
    setExtraLineFragmentTextContainer(value: NSTextContainer): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402988-extralinefragmentusedrect
    extraLineFragmentUsedRect(): CGRect;
    setExtraLineFragmentUsedRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403067-firstunlaidcharacterindex
    firstUnlaidCharacterIndex():NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403245-firstunlaidglyphindex
    firstUnlaidGlyphIndex():NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403187-getfirstunlaidcharacterindex
    getFirstUnlaidCharacterIndex_glyphIndex(charIndex: NSUInteger, glyphIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403140-linefragmentrectforglyphatindex
    lineFragmentRectForGlyphAtIndex_effectiveRange(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403116-linefragmentrectforglyphatindex
    lineFragmentRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer, flag: boolean):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403193-linefragmentusedrectforglyphatin
    lineFragmentUsedRectForGlyphAtIndex_effectiveRange(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403035-linefragmentusedrectforglyphatin
    lineFragmentUsedRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout(glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer, flag: boolean):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403239-locationforglyphatindex
    locationForGlyphAtIndex(glyphIndex: NSUInteger):CGPoint;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402931-notshownattributeforglyphatindex
    notShownAttributeForGlyphAtIndex(glyphIndex: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403203-truncatedglyphrangeinlinefragmen
    truncatedGlyphRangeInLineFragmentForGlyphAtIndex(glyphIndex: NSUInteger):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403255-boundingrectforglyphrange
    boundingRectForGlyphRange_inTextContainer(glyphRange: NSRange, container: NSTextContainer):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403028-characterindexforpoint
    characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints(point: CGPoint, container: NSTextContainer, partialFraction: CGFloat):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403225-characterrangeforglyphrange
    characterRangeForGlyphRange_actualGlyphRange(glyphRange: NSRange, actualGlyphRange: NSRangePointer):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403021-enumerateenclosingrectsforglyphr
    enumerateEnclosingRectsForGlyphRange_withinSelectedGlyphRange_inTextContainer_usingBlock(glyphRange: NSRange, selectedRange: NSRange, textContainer: NSTextContainer, block: boolean):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403160-enumeratelinefragmentsforglyphra
    enumerateLineFragmentsForGlyphRange_usingBlock(glyphRange: NSRange, block: boolean):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403097-fractionofdistancethroughglyphfo
    fractionOfDistanceThroughGlyphForPoint_inTextContainer(point: CGPoint, container: NSTextContainer):CGFloat;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403012-getlinefragmentinsertionpointsfo
    getLineFragmentInsertionPointsForCharacterAtIndex_alternatePositions_inDisplayOrder_positions_characterIndexes(charIndex: NSUInteger, aFlag: boolean, dFlag: boolean, positions: CGFloat, charIndexes: NSUInteger):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403112-glyphindexforpoint
    glyphIndexForPoint_inTextContainer(point: CGPoint, container: NSTextContainer):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402933-glyphindexforpoint
    glyphIndexForPoint_inTextContainer_fractionOfDistanceThroughGlyph(point: CGPoint, container: NSTextContainer, partialFraction: CGFloat):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403053-glyphrangeforboundingrect
    glyphRangeForBoundingRect_inTextContainer(bounds: CGRect, container: NSTextContainer):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403183-glyphrangeforboundingrectwithout
    glyphRangeForBoundingRectWithoutAdditionalLayout_inTextContainer(bounds: CGRect, container: NSTextContainer):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403041-glyphrangefortextcontainer
    glyphRangeForTextContainer(container: NSTextContainer):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402999-glyphrangeforcharacterrange
    glyphRangeForCharacterRange_actualCharacterRange(charRange: NSRange, actualCharRange: NSRangePointer):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403152-rangeofnominallyspacedglyphscont
    rangeOfNominallySpacedGlyphsContainingIndex(glyphIndex: NSUInteger):NSRange;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1402949-drawbackgroundforglyphrange
    drawBackgroundForGlyphRange_atPoint(glyphsToShow: NSRange, origin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403158-drawglyphsforglyphrange
    drawGlyphsForGlyphRange_atPoint(glyphsToShow: NSRange, origin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403169-drawstrikethroughforglyphrange
    drawStrikethroughForGlyphRange_strikethroughType_baselineOffset_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange: NSRange, strikethroughVal: NSUnderlineStyle, baselineOffset: CGFloat, lineRect: CGRect, lineGlyphRange: NSRange, containerOrigin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403079-drawunderlineforglyphrange
    drawUnderlineForGlyphRange_underlineType_baselineOffset_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange: NSRange, underlineVal: NSUnderlineStyle, baselineOffset: CGFloat, lineRect: CGRect, lineGlyphRange: NSRange, containerOrigin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403161-fillbackgroundrectarray
    fillBackgroundRectArray_count_forCharacterRange_color(rectArray: CGRect, rectCount: NSUInteger, charRange: NSRange, color: UIColor):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/3180379-showcgglyphs
    showCGGlyphs_positions_count_font_textMatrix_attributes_inContext(glyphs: CGGlyph, positions: CGPoint, glyphCount: NSInteger, font: UIFont, textMatrix: CGAffineTransform, attributes: NSLayoutManager, CGContext: CGContextRef):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403009-strikethroughglyphrange
    strikethroughGlyphRange_strikethroughType_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange: NSRange, strikethroughVal: NSUnderlineStyle, lineRect: CGRect, lineGlyphRange: NSRange, containerOrigin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanager/1403114-underlineglyphrange
    underlineGlyphRange_underlineType_lineFragmentRect_lineFragmentGlyphRange_containerOrigin(glyphRange: NSRange, underlineVal: NSUnderlineStyle, lineRect: CGRect, lineGlyphRange: NSRange, containerOrigin: CGPoint):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402929-setlayoutrect
    setLayoutRect_forTextBlock_glyphRange(rect: NSRect, block: NSTextBlock, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403201-layoutrectfortextblock
    layoutRectForTextBlock_glyphRange(block: NSTextBlock, glyphRange: NSRange):NSRect;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402991-setboundsrect
    setBoundsRect_forTextBlock_glyphRange(rect: NSRect, block: NSTextBlock, glyphRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403138-boundsrectfortextblock
    boundsRectForTextBlock_glyphRange(block: NSTextBlock, glyphRange: NSRange):NSRect;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403102-layoutrectfortextblock
    layoutRectForTextBlock_atIndex_effectiveRange(block: NSTextBlock, glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer):NSRect;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402956-boundsrectfortextblock
    boundsRectForTextBlock_atIndex_effectiveRange(block: NSTextBlock, glyphIndex: NSUInteger, effectiveGlyphRange: NSRangePointer):NSRect;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403045-defaultattachmentscaling
    defaultAttachmentScaling(): NSImageScaling;
    setDefaultAttachmentScaling(value: NSImageScaling): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402965-showattachmentcell
    showAttachmentCell_inRect_characterIndex(cell: NSCell, rect: NSRect, attachmentIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403130-ruleraccessoryviewfortextview
    rulerAccessoryViewForTextView_paragraphStyle_ruler_enabled(view: NSTextView, style: NSParagraphStyle, ruler: NSRulerView, isEnabled: boolean):NSView;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403163-rulermarkersfortextview
    rulerMarkersForTextView_paragraphStyle_ruler(view: NSTextView, style: NSParagraphStyle, ruler: NSRulerView):NSRulerMarker;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403026-layoutmanagerownsfirstresponderi
    layoutManagerOwnsFirstResponderInWindow(window: NSWindow):boolean;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402995-firsttextview
    firstTextView(): NSTextView;
    setFirstTextView(value: NSTextView): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403089-textviewforbeginningofselection
    textViewForBeginningOfSelection(): NSTextView;
    setTextViewForBeginningOfSelection(value: NSTextView): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403205-typesetter
    typesetter(): NSTypesetter;
    setTypesetter(value: NSTypesetter): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403199-typesetterbehavior
    typesetterBehavior(): NSTypesetterBehavior;
    setTypesetterBehavior(value: NSTypesetterBehavior): void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403007-defaultlineheightforfont
    defaultLineHeightForFont(theFont: NSFont):CGFloat;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403058-defaultbaselineoffsetforfont
    defaultBaselineOffsetForFont(theFont: NSFont):CGFloat;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403250-addtemporaryattributes
    addTemporaryAttributes_forCharacterRange(attrs: NSLayoutManager, charRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403005-addtemporaryattribute
    addTemporaryAttribute_value_forCharacterRange(attrName: NSAttributedStringKey, value: NSLayoutManager, charRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403037-settemporaryattributes
    setTemporaryAttributes_forCharacterRange(attrs: NSLayoutManager, charRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403087-removetemporaryattribute
    removeTemporaryAttribute_forCharacterRange(attrName: NSAttributedStringKey, charRange: NSRange):void;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1402969-temporaryattribute
    temporaryAttribute_atCharacterIndex_effectiveRange(attrName: NSAttributedStringKey, location: NSUInteger, range: NSRangePointer):NSLayoutManager;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403223-temporaryattribute
    temporaryAttribute_atCharacterIndex_longestEffectiveRange_inRange(attrName: NSAttributedStringKey, location: NSUInteger, range: NSRangePointer, rangeLimit: NSRange):NSLayoutManager;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403033-temporaryattributesatcharacterin
    temporaryAttributesAtCharacterIndex_effectiveRange(charIndex: NSUInteger, effectiveCharRange: NSRangePointer):NSLayoutManager;
    // https://developer.apple.com/documentation/appkit/nslayoutmanager/1403060-temporaryattributesatcharacterin
    temporaryAttributesAtCharacterIndex_longestEffectiveRange_inRange(location: NSUInteger, range: NSRangePointer, rangeLimit: NSRange):NSLayoutManager;
    //
    alloc():NSLayoutManager;
    //
    init():NSLayoutManager;
  }
}

declare const NSLayoutManager: cocoascript.NSLayoutManager;
declare namespace cocoascript {
  /**
   * A set of methods that define the orientation of text for an object.
   * https://developer.apple.com/documentation/uikit/nstextlayoutorientationprovider
   */
  interface NSTextLayoutOrientationProvider {
    // https://developer.apple.com/documentation/uikit/nstextlayoutorientationprovider/1402990-layoutorientation
    layoutOrientation(): NSTextLayoutOrientation;
    setLayoutOrientation(value: NSTextLayoutOrientation): void;
  }
}
declare namespace cocoascript {
  /**
   * An abstract base class that represents the smallest units of text layout such as paragraphs or attachments.
   * https://developer.apple.com/documentation/uikit/nstextelement
   */
  interface NSTextElement extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextelement/3809955-initwithtextcontentmanager
    initWithTextContentManager(textContentManager: NSTextContentManager):NSTextElement;
    // https://developer.apple.com/documentation/uikit/nstextelement/3809956-textcontentmanager
    textContentManager(): NSTextContentManager;
    setTextContentManager(value: NSTextContentManager): void;
    // https://developer.apple.com/documentation/uikit/nstextelement/3809954-elementrange
    elementRange(): NSTextRange;
    setElementRange(value: NSTextRange): void;
    //
    alloc():NSTextElement;
    //
    init():NSTextElement;
  }
}

declare const NSTextElement: cocoascript.NSTextElement;
declare namespace cocoascript {
  /**
   * A protocol the text content manager and its concrete subclasses conform to which defines the interface for interacting with custom content types of a text document.
   * https://developer.apple.com/documentation/uikit/nstextelementprovider
   */
  interface NSTextElementProvider extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809944-documentrange
    documentRange(): NSTextRange;
    setDocumentRange(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809945-enumeratetextelementsfromlocatio
    enumerateTextElementsFromLocation_options_usingBlock(textLocation: NSTextLocation, options: NSTextContentManagerEnumerationOptions, block: NSTextElement):NSTextLocation;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809946-locationfromlocation
    locationFromLocation_withOffset(location: NSTextLocation, offset: NSInteger):NSTextLocation;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809948-replacecontentsinrange
    replaceContentsInRange_withTextElements(range: NSTextRange, textElements: NSTextElement):void;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3852573-adjustedrangefromrange
    adjustedRangeFromRange_forEditingTextSelection(textRange: NSTextRange, forEditingTextSelection: boolean):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809947-offsetfromlocation
    offsetFromLocation_toLocation(from: NSTextLocation, to: NSTextLocation):NSInteger;
    // https://developer.apple.com/documentation/uikit/nstextelementprovider/3809949-synchronizetobackingstore
    synchronizeToBackingStore(completionHandler: NSError):void;
  }
}
declare namespace cocoascript {
  /**
   * A class that represents a line fragment as a single textual layout and rendering unit inside a text layout fragment.
   * https://developer.apple.com/documentation/uikit/nstextlinefragment
   */
  interface NSTextLineFragment extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810042-initwithattributedstring
    initWithAttributedString_range(attributedString: NSAttributedString, range: NSRange):NSTextLineFragment;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810043-initwithcoder
    initWithCoder(aDecoder: NSCoder):NSTextLineFragment;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810044-initwithstring
    initWithString_attributes_range(string: string | cocoascript.NSString, attributes: NSTextLineFragment, range: NSRange):NSTextLineFragment;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810037-attributedstring
    attributedString(): NSAttributedString;
    setAttributedString(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810039-characterrange
    characterRange(): NSRange;
    setCharacterRange(value: NSRange): void;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810041-glyphorigin
    glyphOrigin(): CGPoint;
    setGlyphOrigin(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810046-typographicbounds
    typographicBounds(): CGRect;
    setTypographicBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3852578-characterindexforpoint
    characterIndexForPoint(point: CGPoint):NSInteger;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3852579-fractionofdistancethroughglyphfo
    fractionOfDistanceThroughGlyphForPoint(point: CGPoint):CGFloat;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3810045-locationforcharacteratindex
    locationForCharacterAtIndex(index: NSInteger):CGPoint;
    // https://developer.apple.com/documentation/uikit/nstextlinefragment/3824754-drawatpoint
    drawAtPoint_inContext(point: CGPoint, context: CGContextRef):void;
    //
    alloc():NSTextLineFragment;
    //
    init():NSTextLineFragment;
  }
}

declare const NSTextLineFragment: cocoascript.NSTextLineFragment;
declare namespace cocoascript {
  /**
   * A class that represents a single paragraph backed by an attributed string as the contents.
   * https://developer.apple.com/documentation/uikit/nstextparagraph
   */
  interface NSTextParagraph extends NSTextElement {
    // https://developer.apple.com/documentation/uikit/nstextparagraph/3809959-initwithattributedstring
    initWithAttributedString(attributedString: NSAttributedString):NSTextParagraph;
    // https://developer.apple.com/documentation/uikit/nstextparagraph/3809958-attributedstring
    attributedString(): NSAttributedString;
    setAttributedString(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/nstextparagraph/3809960-paragraphcontentrange
    paragraphContentRange(): NSTextRange;
    setParagraphContentRange(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextparagraph/3809961-paragraphseparatorrange
    paragraphSeparatorRange(): NSTextRange;
    setParagraphSeparatorRange(value: NSTextRange): void;
    //
    alloc():NSTextParagraph;
    //
    init():NSTextParagraph;
  }
}

declare const NSTextParagraph: cocoascript.NSTextParagraph;
declare namespace cocoascript {
  /**
   * A class that represents a contiguous range between two locations inside document contents.
   * https://developer.apple.com/documentation/uikit/nstextrange
   */
  interface NSTextRange extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextrange/3801808-initwithlocation
    initWithLocation(location: NSTextLocation):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801809-initwithlocation
    initWithLocation_endLocation(location: NSTextLocation, endLocation: NSTextLocation):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801807-endlocation
    endLocation(): NSTextLocation;
    setEndLocation(value: NSTextLocation): void;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801806-empty
    empty(): boolean;
    setEmpty(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801812-location
    location(): NSTextLocation;
    setLocation(value: NSTextLocation): void;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801814-textrangebyintersectingwithtextr
    textRangeByIntersectingWithTextRange(textRange: NSTextRange):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801810-intersectswithtextrange
    intersectsWithTextRange(textRange: NSTextRange):boolean;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801811-isequaltotextrange
    isEqualToTextRange(textRange: NSTextRange):boolean;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801813-textrangebyformingunionwithtextr
    textRangeByFormingUnionWithTextRange(textRange: NSTextRange):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801804-containslocation
    containsLocation(location: NSTextLocation):boolean;
    // https://developer.apple.com/documentation/uikit/nstextrange/3801805-containsrange
    containsRange(textRange: NSTextRange):boolean;
    //
    alloc():NSTextRange;
    //
    init():NSTextRange;
  }
}

declare const NSTextRange: cocoascript.NSTextRange;
declare namespace cocoascript {
  /**
   * A class that represents a single logical selection context that corresponds to an insertion point.
   * https://developer.apple.com/documentation/uikit/nstextselection
   */
  interface NSTextSelection extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextselection/3801820-initwithlocation
    initWithLocation_affinity(location: NSTextLocation, affinity: NSTextSelectionAffinity):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801821-initwithrange
    initWithRange_affinity_granularity(range: NSTextRange, affinity: NSTextSelectionAffinity, granularity: NSTextSelectionGranularity):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801822-initwithranges
    initWithRanges_affinity_granularity(textRanges: NSTextRange, affinity: NSTextSelectionAffinity, granularity: NSTextSelectionGranularity):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801819-initwithcoder
    initWithCoder(coder: NSCoder):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801816-affinity
    affinity(): NSTextSelectionAffinity;
    setAffinity(value: NSTextSelectionAffinity): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801817-anchorpositionoffset
    anchorPositionOffset(): CGFloat;
    setAnchorPositionOffset(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801818-granularity
    granularity(): NSTextSelectionGranularity;
    setGranularity(value: NSTextSelectionGranularity): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801823-logical
    logical(): boolean;
    setLogical(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801827-transient
    transient(): boolean;
    setTransient(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801824-secondaryselectionlocation
    secondarySelectionLocation(): NSTextLocation;
    setSecondarySelectionLocation(value: NSTextLocation): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801825-textranges
    textRanges(): NSTextRange;
    setTextRanges(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801828-typingattributes
    typingAttributes(): id;
    setTypingAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/nstextselection/3801826-textselectionwithtextranges
    textSelectionWithTextRanges(textRanges: NSTextRange):NSTextSelection;
    //
    alloc():NSTextSelection;
    //
    init():NSTextSelection;
  }
}

declare const NSTextSelection: cocoascript.NSTextSelection;
declare namespace cocoascript {
  /**
   * An interface used to expose methods for obtaining results from actions performed on text selections.
   * https://developer.apple.com/documentation/uikit/nstextselectionnavigation
   */
  interface NSTextSelectionNavigation extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801854-initwithdatasource
    initWithDataSource(dataSource: NSTextSelectionDataSource):NSTextSelectionNavigation;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801850-allowsnoncontiguousranges
    allowsNonContiguousRanges(): boolean;
    setAllowsNonContiguousRanges(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801856-rotatescoordinatesystemforlayout
    rotatesCoordinateSystemForLayoutOrientation(): boolean;
    setRotatesCoordinateSystemForLayoutOrientation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801858-textselectionforselectiongranula
    textSelectionForSelectionGranularity_enclosingPoint_inContainerAtLocation(selectionGranularity: NSTextSelectionGranularity, point: CGPoint, location: NSTextLocation):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801857-textselectiondatasource
    textSelectionDataSource(): NSTextSelectionDataSource;
    setTextSelectionDataSource(value: NSTextSelectionDataSource): void;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801868-textselectionforselectiongranula
    textSelectionForSelectionGranularity_enclosingTextSelection(selectionGranularity: NSTextSelectionGranularity, textSelection: NSTextSelection):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801869-textselectionsinteractingatpoint
    textSelectionsInteractingAtPoint_inContainerAtLocation_anchors_modifiers_selecting_bounds(point: CGPoint, containerLocation: NSTextLocation, anchors: NSTextSelection, modifiers: NSTextSelectionNavigationModifier, selecting: boolean, bounds: CGRect):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801852-destinationselectionfortextselec
    destinationSelectionForTextSelection_direction_destination_extending_confined(textSelection: NSTextSelection, direction: NSTextSelectionNavigationDirection, destination: NSTextSelectionNavigationDestination, extending: boolean, confined: boolean):NSTextSelection;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801853-flushlayoutcache
    flushLayoutCache():void;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3852581-resolvedinsertionlocationfortext
    resolvedInsertionLocationForTextSelection_writingDirection(textSelection: NSTextSelection, writingDirection: NSTextSelectionNavigationWritingDirection):NSTextLocation;
    // https://developer.apple.com/documentation/uikit/nstextselectionnavigation/3801851-deletionrangesfortextselection
    deletionRangesForTextSelection_direction_destination_allowsDecomposition(textSelection: NSTextSelection, direction: NSTextSelectionNavigationDirection, destination: NSTextSelectionNavigationDestination, allowsDecomposition: boolean):NSTextRange;
    //
    alloc():NSTextSelectionNavigation;
    //
    init():NSTextSelectionNavigation;
  }
}

declare const NSTextSelectionNavigation: cocoascript.NSTextSelectionNavigation;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutfragmentstate
  type NSTextLayoutFragmentState = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * The paragraph or ruler attributes for an attributed string.
   * https://developer.apple.com/documentation/uikit/nsparagraphstyle
   */
  interface NSParagraphStyle extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1532681-defaultparagraphstyle
    defaultParagraphStyle(): NSParagraphStyle;
    setDefaultParagraphStyle(value: NSParagraphStyle): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1532321-alignment
    alignment(): NSTextAlignment;
    setAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1527764-firstlineheadindent
    firstLineHeadIndent(): CGFloat;
    setFirstLineHeadIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1530760-headindent
    headIndent(): CGFloat;
    setHeadIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1525556-tailindent
    tailIndent(): CGFloat;
    setTailIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1528614-lineheightmultiple
    lineHeightMultiple(): CGFloat;
    setLineHeightMultiple(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1533343-maximumlineheight
    maximumLineHeight(): CGFloat;
    setMaximumLineHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1535639-minimumlineheight
    minimumLineHeight(): CGFloat;
    setMinimumLineHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1524635-linespacing
    lineSpacing(): CGFloat;
    setLineSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1530912-paragraphspacing
    paragraphSpacing(): CGFloat;
    setParagraphSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1533011-paragraphspacingbefore
    paragraphSpacingBefore(): CGFloat;
    setParagraphSpacingBefore(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1532841-tabstops
    tabStops(): NSTextTab;
    setTabStops(value: NSTextTab): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1535614-defaulttabinterval
    defaultTabInterval(): CGFloat;
    setDefaultTabInterval(value: CGFloat): void;
    // https://developer.apple.com/documentation/appkit/nsparagraphstyle/1528053-textblocks
    textBlocks(): NSTextBlock;
    setTextBlocks(value: NSTextBlock): void;
    // https://developer.apple.com/documentation/appkit/nsparagraphstyle/1534193-textlists
    textLists(): NSTextList;
    setTextLists(value: NSTextList): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1529937-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/3667463-linebreakstrategy
    lineBreakStrategy(): NSLineBreakStrategy;
    setLineBreakStrategy(value: NSLineBreakStrategy): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1529275-hyphenationfactor
    hyphenationFactor(): number;
    setHyphenationFactor(value: number): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/3809913-usesdefaulthyphenation
    usesDefaultHyphenation(): boolean;
    setUsesDefaultHyphenation(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nsparagraphstyle/1529278-tighteningfactorfortruncation
    tighteningFactorForTruncation(): number;
    setTighteningFactorForTruncation(value: number): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1528994-allowsdefaulttighteningfortrunca
    allowsDefaultTighteningForTruncation(): boolean;
    setAllowsDefaultTighteningForTruncation(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nsparagraphstyle/1535869-headerlevel
    headerLevel(): NSInteger;
    setHeaderLevel(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1535327-defaultwritingdirectionforlangua
    defaultWritingDirectionForLanguage(languageName: string | cocoascript.NSString):NSWritingDirection;
    // https://developer.apple.com/documentation/uikit/nsparagraphstyle/1527354-basewritingdirection
    baseWritingDirection(): NSWritingDirection;
    setBaseWritingDirection(value: NSWritingDirection): void;
    //
    alloc():NSParagraphStyle;
    //
    init():NSParagraphStyle;
  }
}

declare const NSParagraphStyle: cocoascript.NSParagraphStyle;
declare namespace cocoascript {
  /**
   * An object for changing the values of the subattributes in a paragraph style attribute.
   * https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle
   */
  interface NSMutableParagraphStyle extends NSParagraphStyle {
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1533980-setparagraphstyle
    setParagraphStyle(obj: NSParagraphStyle):void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1534368-alignment
    alignment(): NSTextAlignment;
    setAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1528392-firstlineheadindent
    firstLineHeadIndent(): CGFloat;
    setFirstLineHeadIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1525135-headindent
    headIndent(): CGFloat;
    setHeadIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1531666-tailindent
    tailIndent(): CGFloat;
    setTailIndent(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1524596-lineheightmultiple
    lineHeightMultiple(): CGFloat;
    setLineHeightMultiple(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1524351-maximumlineheight
    maximumLineHeight(): CGFloat;
    setMaximumLineHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1531118-minimumlineheight
    minimumLineHeight(): CGFloat;
    setMinimumLineHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1528742-linespacing
    lineSpacing(): CGFloat;
    setLineSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1532528-paragraphspacing
    paragraphSpacing(): CGFloat;
    setParagraphSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1527729-paragraphspacingbefore
    paragraphSpacingBefore(): CGFloat;
    setParagraphSpacingBefore(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1534601-basewritingdirection
    baseWritingDirection(): NSWritingDirection;
    setBaseWritingDirection(value: NSWritingDirection): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1525051-addtabstop
    addTabStop(anObject: NSTextTab):void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1535084-removetabstop
    removeTabStop(anObject: NSTextTab):void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1531988-tabstops
    tabStops(): NSTextTab;
    setTabStops(value: NSTextTab): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1529861-defaulttabinterval
    defaultTabInterval(): CGFloat;
    setDefaultTabInterval(value: CGFloat): void;
    // https://developer.apple.com/documentation/appkit/nsmutableparagraphstyle/1535855-textblocks
    textBlocks(): NSTextBlock;
    setTextBlocks(value: NSTextBlock): void;
    // https://developer.apple.com/documentation/appkit/nsmutableparagraphstyle/1524648-textlists
    textLists(): NSTextList;
    setTextLists(value: NSTextList): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1535126-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/3667462-linebreakstrategy
    lineBreakStrategy(): NSLineBreakStrategy;
    setLineBreakStrategy(value: NSLineBreakStrategy): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1535553-hyphenationfactor
    hyphenationFactor(): number;
    setHyphenationFactor(value: number): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/3809912-usesdefaulthyphenation
    usesDefaultHyphenation(): boolean;
    setUsesDefaultHyphenation(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nsmutableparagraphstyle/1531383-tighteningfactorfortruncation
    tighteningFactorForTruncation(): number;
    setTighteningFactorForTruncation(value: number): void;
    // https://developer.apple.com/documentation/uikit/nsmutableparagraphstyle/1534136-allowsdefaulttighteningfortrunca
    allowsDefaultTighteningForTruncation(): boolean;
    setAllowsDefaultTighteningForTruncation(value: boolean): void;
    // https://developer.apple.com/documentation/appkit/nsmutableparagraphstyle/1533962-headerlevel
    headerLevel(): NSInteger;
    setHeaderLevel(value: NSInteger): void;
    //
    alloc():NSMutableParagraphStyle;
    //
    init():NSMutableParagraphStyle;
  }
}

declare const NSMutableParagraphStyle: cocoascript.NSMutableParagraphStyle;
declare namespace cocoascript {
  /**
   * A tab in a paragraph.
   * https://developer.apple.com/documentation/uikit/nstexttab
   */
  interface NSTextTab extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstexttab/1526080-initwithtextalignment
    initWithTextAlignment_location_options(alignment: NSTextAlignment, loc: CGFloat, options: NSTextTab):NSTextTab;
    // https://developer.apple.com/documentation/uikit/nstexttab/1527968-location
    location(): CGFloat;
    setLocation(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nstexttab/1527212-alignment
    alignment(): NSTextAlignment;
    setAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/nstexttab/1534965-options
    options(): id;
    setOptions(value: id): void;
    // https://developer.apple.com/documentation/uikit/nstexttab/1535107-columnterminatorsforlocale
    columnTerminatorsForLocale(aLocale: NSLocale):NSCharacterSet;
    // https://developer.apple.com/documentation/appkit/nstexttab/1526556-initwithtype
    initWithType_location(type: NSTextTabType, loc: CGFloat):NSTextTab;
    // https://developer.apple.com/documentation/appkit/nstexttab/1527842-tabstoptype
    tabStopType(): NSTextTabType;
    setTabStopType(value: NSTextTabType): void;
    //
    alloc():NSTextTab;
    //
    init():NSTextTab;
  }
}

declare const NSTextTab: cocoascript.NSTextTab;
declare namespace cocoascript {
  /**
   * The values for the attachment characteristics of attributed strings and related objects.
   * https://developer.apple.com/documentation/uikit/nstextattachment
   */
  interface NSTextAttachment extends NSObject {
    // https://developer.apple.com/documentation/appkit/nstextattachment/1508373-initwithfilewrapper
    initWithFileWrapper(fileWrapper: NSFileWrapper):NSTextAttachment;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508374-initwithdata
    initWithData_ofType(contentData: NSData, uti: string | cocoascript.NSString):NSTextAttachment;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3327290-textattachmentwithimage
    textAttachmentWithImage(image: UIImage):NSTextAttachment;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508394-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508401-contents
    contents(): NSData;
    setContents(value: NSData): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508416-filetype
    fileType(): string | cocoascript.NSString;
    setFileType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508378-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/1508398-filewrapper
    fileWrapper(): NSFileWrapper;
    setFileWrapper(value: NSFileWrapper): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3857584-allowstextattachmentview
    allowsTextAttachmentView(): boolean;
    setAllowsTextAttachmentView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3857588-usestextattachmentview
    usesTextAttachmentView(): boolean;
    setUsesTextAttachmentView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3857585-linelayoutpadding
    lineLayoutPadding(): CGFloat;
    setLineLayoutPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/appkit/nstextattachment/1508413-attachmentcell
    attachmentCell(): NSTextAttachmentCell;
    setAttachmentCell(value: NSTextAttachmentCell): void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3857586-registertextattachmentviewprovid
    registerTextAttachmentViewProviderClass_forFileType(textAttachmentViewProviderClass: Class, fileType: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/nstextattachment/3857587-textattachmentviewproviderclassf
    textAttachmentViewProviderClassForFileType(fileType: string | cocoascript.NSString):Class;
    //
    alloc():NSTextAttachment;
    //
    init():NSTextAttachment;
  }
}

declare const NSTextAttachment: cocoascript.NSTextAttachment;
declare namespace cocoascript {
  /**
   * A container object that associates a text attachment at a particular document location with a view object.
   * https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider
   */
  interface NSTextAttachmentViewProvider extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857595-initwithtextattachment
    initWithTextAttachment_parentView_textLayoutManager_location(textAttachment: NSTextAttachment, parentView: UIView, textLayoutManager: NSTextLayoutManager, location: NSTextLocation):NSTextAttachmentViewProvider;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857597-location
    location(): NSTextLocation;
    setLocation(value: NSTextLocation): void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857598-textattachment
    textAttachment(): NSTextAttachment;
    setTextAttachment(value: NSTextAttachment): void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857599-textlayoutmanager
    textLayoutManager(): NSTextLayoutManager;
    setTextLayoutManager(value: NSTextLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857600-trackstextattachmentviewbounds
    tracksTextAttachmentViewBounds(): boolean;
    setTracksTextAttachmentViewBounds(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857601-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857596-loadview
    loadView():void;
    // https://developer.apple.com/documentation/uikit/nstextattachmentviewprovider/3857594-attachmentboundsforattributes
    attachmentBoundsForAttributes_location_textContainer_proposedLineFragment_position(attributes: NSTextAttachmentViewProvider, location: NSTextLocation, textContainer: NSTextContainer, proposedLineFragment: CGRect, position: CGPoint):CGRect;
    //
    alloc():NSTextAttachmentViewProvider;
    //
    init():NSTextAttachmentViewProvider;
  }
}

declare const NSTextAttachmentViewProvider: cocoascript.NSTextAttachmentViewProvider;
declare namespace cocoascript {
  /**
   * A set of methods that define the interface to attachment objects from a text layout manager.
   * https://developer.apple.com/documentation/uikit/nstextattachmentlayout
   */
  interface NSTextAttachmentLayout extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextattachmentlayout/3857590-attachmentboundsforattributes
    attachmentBoundsForAttributes_location_textContainer_proposedLineFragment_position(attributes: NSTextAttachmentLayout, location: NSTextLocation, textContainer: NSTextContainer, proposedLineFragment: CGRect, position: CGPoint):CGRect;
    // https://developer.apple.com/documentation/uikit/nstextattachmentlayout/3857591-imageforbounds
    imageForBounds_attributes_location_textContainer(bounds: CGRect, attributes: NSTextAttachmentLayout, location: NSTextLocation, textContainer: NSTextContainer):UIImage;
    // https://developer.apple.com/documentation/uikit/nstextattachmentlayout/3857592-viewproviderforparentview
    viewProviderForParentView_location_textContainer(parentView: UIView, location: NSTextLocation, textContainer: NSTextContainer):NSTextAttachmentViewProvider;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that defines the interface to text attachment objects from a layout manager.
   * https://developer.apple.com/documentation/uikit/nstextattachmentcontainer
   */
  interface NSTextAttachmentContainer extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextattachmentcontainer/1508382-attachmentboundsfortextcontainer
    attachmentBoundsForTextContainer_proposedLineFragment_glyphPosition_characterIndex(textContainer: NSTextContainer, lineFrag: CGRect, position: CGPoint, charIndex: NSUInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/nstextattachmentcontainer/1508386-imageforbounds
    imageForBounds_textContainer_characterIndex(imageBounds: CGRect, textContainer: NSTextContainer, charIndex: NSUInteger):UIImage;
  }
}
// https://developer.apple.com/documentation/uikit/nswritingdirectionattributename
declare const NSWritingDirectionAttributeName: cocoascript.NSAttributedStringKey;
declare namespace cocoascript {
  /**
   * A control that executes your custom code in response to user interactions.
   * https://developer.apple.com/documentation/uikit/uibutton
   */
  interface UIButton extends UIControl {
    // https://developer.apple.com/documentation/uikit/uibutton/3600348-initwithframe
    initWithFrame(frame: CGRect):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3600349-initwithframe
    initWithFrame_primaryAction(frame: CGRect, primaryAction: UIAction):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3600347-initwithcoder
    initWithCoder(coder: NSCoder):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/1624028-buttonwithtype
    buttonWithType(buttonType: UIButtonType):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3600346-buttonwithtype
    buttonWithType_primaryAction(buttonType: UIButtonType, primaryAction: UIAction):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3295916-systembuttonwithimage
    systemButtonWithImage_target_action(image: UIImage, target: UIButton, action: SEL):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3600350-systembuttonwithprimaryaction
    systemButtonWithPrimaryAction(primaryAction: UIAction):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3750767-buttonwithconfiguration
    buttonWithConfiguration_primaryAction(configuration: UIButtonConfiguration, primaryAction: UIAction):UIButton;
    // https://developer.apple.com/documentation/uikit/uibutton/3750768-configuration
    configuration(): UIButtonConfiguration;
    setConfiguration(value: UIButtonConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750766-automaticallyupdatesconfiguratio
    automaticallyUpdatesConfiguration(): boolean;
    setAutomaticallyUpdatesConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750773-setneedsupdateconfiguration
    setNeedsUpdateConfiguration():void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750775-updateconfiguration
    updateConfiguration():void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750769-configurationupdatehandler
    configurationUpdateHandler(): UIButtonConfigurationUpdateHandler;
    setConfigurationUpdateHandler(value: UIButtonConfigurationUpdateHandler): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1623992-titlelabel
    titleLabel(): UILabel;
    setTitleLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624022-titleforstate
    titleForState(state: UIControlState):NSString;
    // https://developer.apple.com/documentation/uikit/uibutton/1624018-settitle
    setTitle_forState(title: string | cocoascript.NSString, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1623991-attributedtitleforstate
    attributedTitleForState(state: UIControlState):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uibutton/1624012-setattributedtitle
    setAttributedTitle_forState(title: NSAttributedString, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624017-titlecolorforstate
    titleColorForState(state: UIControlState):UIColor;
    // https://developer.apple.com/documentation/uikit/uibutton/1623993-settitlecolor
    setTitleColor_forState(color: UIColor, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624009-titleshadowcolorforstate
    titleShadowColorForState(state: UIControlState):UIColor;
    // https://developer.apple.com/documentation/uikit/uibutton/1623994-settitleshadowcolor
    setTitleShadowColor_forState(color: UIColor, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624030-backgroundimageforstate
    backgroundImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uibutton/1624026-imageforstate
    imageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uibutton/1624016-setbackgroundimage
    setBackgroundImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1623997-setimage
    setImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/3295914-preferredsymbolconfigurationfori
    preferredSymbolConfigurationForImageInState(state: UIControlState):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uibutton/3295915-setpreferredsymbolconfiguration
    setPreferredSymbolConfiguration_forImageInState(configuration: UIImageSymbolConfiguration, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624025-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3612050-role
    role(): UIButtonRole;
    setRole(value: UIButtonRole): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3752180-behavioralstyle
    behavioralStyle(): UIBehavioralStyle;
    setBehavioralStyle(value: UIBehavioralStyle): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3752181-preferredbehavioralstyle
    preferredBehavioralStyle(): UIBehavioralStyle;
    setPreferredBehavioralStyle(value: UIBehavioralStyle): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624011-buttontype
    buttonType(): UIButtonType;
    setButtonType(value: UIButtonType): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624032-currenttitle
    currentTitle(): string | cocoascript.NSString;
    setCurrentTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624002-currentattributedtitle
    currentAttributedTitle(): NSAttributedString;
    setCurrentAttributedTitle(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624006-currenttitlecolor
    currentTitleColor(): UIColor;
    setCurrentTitleColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624019-currenttitleshadowcolor
    currentTitleShadowColor(): UIColor;
    setCurrentTitleShadowColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1623998-currentimage
    currentImage(): UIImage;
    setCurrentImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624035-currentbackgroundimage
    currentBackgroundImage(): UIImage;
    setCurrentBackgroundImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3295913-currentpreferredsymbolconfigurat
    currentPreferredSymbolConfiguration(): UIImageSymbolConfiguration;
    setCurrentPreferredSymbolConfiguration(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uibutton/1624033-imageview
    imageView(): UIImageView;
    setImageView(value: UIImageView): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750774-subtitlelabel
    subtitleLabel(): UILabel;
    setSubtitleLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3538957-pointerinteractionenabled
    pointerInteractionEnabled(): boolean;
    setPointerInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750771-hovered
    hovered(): boolean;
    setHovered(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3538958-pointerstyleprovider
    pointerStyleProvider(): UIButtonPointerStyleProvider;
    setPointerStyleProvider(value: UIButtonPointerStyleProvider): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3601189-menu
    menu(): UIMenu;
    setMenu(value: UIMenu): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3750770-held
    held(): boolean;
    setHeld(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibutton/3752184-changesselectionasprimaryaction
    changesSelectionAsPrimaryAction(): boolean;
    setChangesSelectionAsPrimaryAction(value: boolean): void;
    //
    alloc():UIButton;
    //
    init():UIButton;
  }
}

declare const UIButton: cocoascript.UIButton;
declare namespace cocoascript {
  /**
   * A control that offers a binary choice, such as on/off.
   * https://developer.apple.com/documentation/uikit/uiswitch
   */
  interface UISwitch extends UIControl {
    // https://developer.apple.com/documentation/uikit/uiswitch/1623682-initwithframe
    initWithFrame(frame: CGRect):UISwitch;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623685-initwithcoder
    initWithCoder(coder: NSCoder):UISwitch;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623690-on
    on(): boolean;
    setOn(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623686-seton
    setOn_animated(on: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiswitch/3621874-preferredstyle
    preferredStyle(): UISwitchStyle;
    setPreferredStyle(value: UISwitchStyle): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/3621875-style
    style(): UISwitchStyle;
    setStyle(value: UISwitchStyle): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/3621876-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623687-ontintcolor
    onTintColor(): UIColor;
    setOnTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623684-thumbtintcolor
    thumbTintColor(): UIColor;
    setThumbTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623689-onimage
    onImage(): UIImage;
    setOnImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiswitch/1623683-offimage
    offImage(): UIImage;
    setOffImage(value: UIImage): void;
    //
    alloc():UISwitch;
    //
    init():UISwitch;
  }
}

declare const UISwitch: cocoascript.UISwitch;
declare namespace cocoascript {
  /**
   * A control that displays a horizontal series of dots, each of which corresponds to a page in the app’s document or other data-model entity.
   * https://developer.apple.com/documentation/uikit/uipagecontrol
   */
  interface UIPageControl extends UIControl {
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621234-currentpage
    currentPage(): NSInteger;
    setCurrentPage(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621232-numberofpages
    numberOfPages(): NSInteger;
    setNumberOfPages(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621238-hidesforsinglepage
    hidesForSinglePage(): boolean;
    setHidesForSinglePage(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621239-pageindicatortintcolor
    pageIndicatorTintColor(): UIColor;
    setPageIndicatorTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621233-currentpageindicatortintcolor
    currentPageIndicatorTintColor(): UIColor;
    setCurrentPageIndicatorTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621230-deferscurrentpagedisplay
    defersCurrentPageDisplay(): boolean;
    setDefersCurrentPageDisplay(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621235-updatecurrentpagedisplay
    updateCurrentPageDisplay():void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/1621237-sizefornumberofpages
    sizeForNumberOfPages(pageCount: NSInteger):CGSize;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577676-backgroundstyle
    backgroundStyle(): UIPageControlBackgroundStyle;
    setBackgroundStyle(value: UIPageControlBackgroundStyle): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577675-allowscontinuousinteraction
    allowsContinuousInteraction(): boolean;
    setAllowsContinuousInteraction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577678-interactionstate
    interactionState(): UIPageControlInteractionState;
    setInteractionState(value: UIPageControlInteractionState): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577679-preferredindicatorimage
    preferredIndicatorImage(): UIImage;
    setPreferredIndicatorImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577680-setindicatorimage
    setIndicatorImage_forPage(image: UIImage, page: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uipagecontrol/3577677-indicatorimageforpage
    indicatorImageForPage(page: NSInteger):UIImage;
    //
    alloc():UIPageControl;
    //
    init():UIPageControl;
  }
}

declare const UIPageControl: cocoascript.UIPageControl;
declare namespace cocoascript {
  /**
   * A standard control that can initiate the refreshing of a scroll view’s contents.
   * https://developer.apple.com/documentation/uikit/uirefreshcontrol
   */
  interface UIRefreshControl extends UIControl {
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624846-init
    init():UIRefreshControl;
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624847-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624845-attributedtitle
    attributedTitle(): NSAttributedString;
    setAttributedTitle(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624842-beginrefreshing
    beginRefreshing():void;
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624848-endrefreshing
    endRefreshing():void;
    // https://developer.apple.com/documentation/uikit/uirefreshcontrol/1624844-refreshing
    refreshing(): boolean;
    setRefreshing(value: boolean): void;
    //
    alloc():UIRefreshControl;
    //
    init():UIRefreshControl;
  }
}

declare const UIRefreshControl: cocoascript.UIRefreshControl;
declare namespace cocoascript {
  /**
   * A control for incrementing or decrementing a value.
   * https://developer.apple.com/documentation/uikit/uistepper
   */
  interface UIStepper extends UIControl {
    // https://developer.apple.com/documentation/uikit/uistepper/1624082-continuous
    continuous(): boolean;
    setContinuous(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624079-autorepeat
    autorepeat(): boolean;
    setAutorepeat(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624068-wraps
    wraps(): boolean;
    setWraps(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624078-minimumvalue
    minimumValue(): number;
    setMinimumValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624075-maximumvalue
    maximumValue(): number;
    setMaximumValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624083-stepvalue
    stepValue(): number;
    setStepValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624076-value
    value(): number;
    setValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624069-backgroundimageforstate
    backgroundImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uistepper/1624081-setbackgroundimage
    setBackgroundImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624077-decrementimageforstate
    decrementImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uistepper/1624074-setdecrementimage
    setDecrementImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624072-dividerimageforleftsegmentstate
    dividerImageForLeftSegmentState_rightSegmentState(state: UIControlState, state1: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uistepper/1624071-setdividerimage
    setDividerImage_forLeftSegmentState_rightSegmentState(image: UIImage, leftState: UIControlState, rightState: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uistepper/1624080-incrementimageforstate
    incrementImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uistepper/1624070-setincrementimage
    setIncrementImage_forState(image: UIImage, state: UIControlState):void;
    //
    alloc():UIStepper;
    //
    init():UIStepper;
  }
}

declare const UIStepper: cocoascript.UIStepper;
declare namespace cocoascript {
  /**
   * An object that specifies a key press perform on a hardware keyboard and the resulting action.
   * https://developer.apple.com/documentation/uikit/uikeycommand
   */
  interface UIKeyCommand extends UICommand {
    // https://developer.apple.com/documentation/uikit/uikeycommand/3340171-commandwithtitle
    commandWithTitle_image_action_input_modifierFlags_propertyList(title: string | cocoascript.NSString, image: UIImage, action: SEL, input: string | cocoascript.NSString, modifierFlags: UIKeyModifierFlags, propertyList: UIKeyCommand):UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3340172-commandwithtitle
    commandWithTitle_image_action_input_modifierFlags_propertyList_alternates(title: string | cocoascript.NSString, image: UIImage, action: SEL, input: string | cocoascript.NSString, modifierFlags: UIKeyModifierFlags, propertyList: UIKeyCommand, alternates: UICommandAlternate):UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621131-keycommandwithinput
    keyCommandWithInput_modifierFlags_action(input: string | cocoascript.NSString, modifierFlags: UIKeyModifierFlags, action: SEL):UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621100-init
    init():UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621115-initwithcoder
    initWithCoder(coder: NSCoder):UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621139-keycommandwithinput
    keyCommandWithInput_modifierFlags_action_discoverabilityTitle(input: string | cocoascript.NSString, modifierFlags: UIKeyModifierFlags, action: SEL, discoverabilityTitle: string | cocoascript.NSString):UIKeyCommand;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335197-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335190-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621143-input
    input(): string | cocoascript.NSString;
    setInput(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3175393-action
    action(): SEL;
    setAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621140-modifierflags
    modifierFlags(): UIKeyModifierFlags;
    setModifierFlags(value: UIKeyModifierFlags): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/1621094-discoverabilitytitle
    discoverabilityTitle(): string | cocoascript.NSString;
    setDiscoverabilityTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335189-attributes
    attributes(): UIMenuElementAttributes;
    setAttributes(value: UIMenuElementAttributes): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335196-state
    state(): UIMenuElementState;
    setState(value: UIMenuElementState): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335188-alternates
    alternates(): UICommandAlternate;
    setAlternates(value: UICommandAlternate): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3335195-propertylist
    propertyList(): id;
    setPropertyList(value: id): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3783575-allowsautomaticlocalization
    allowsAutomaticLocalization(): boolean;
    setAllowsAutomaticLocalization(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3783576-allowsautomaticmirroring
    allowsAutomaticMirroring(): boolean;
    setAllowsAutomaticMirroring(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uikeycommand/3780513-wantspriorityoversystembehavior
    wantsPriorityOverSystemBehavior(): boolean;
    setWantsPriorityOverSystemBehavior(value: boolean): void;
    //
    alloc():UIKeyCommand;
    //
    init():UIKeyCommand;
  }
}

declare const UIKeyCommand: cocoascript.UIKeyCommand;
// https://developer.apple.com/documentation/uikit/uicommandtagshare
declare const UICommandTagShare: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * A control for selecting a single value from a continuous range of values.
   * https://developer.apple.com/documentation/uikit/uislider
   */
  interface UISlider extends UIControl {
    // https://developer.apple.com/documentation/uikit/uislider/1621346-value
    value(): number;
    setValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621330-setvalue
    setValue_animated(value: number, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uislider/1621345-minimumvalue
    minimumValue(): number;
    setMinimumValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621341-maximumvalue
    maximumValue(): number;
    setMaximumValue(value: number): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621340-continuous
    continuous(): boolean;
    setContinuous(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uislider/3752182-behavioralstyle
    behavioralStyle(): UIBehavioralStyle;
    setBehavioralStyle(value: UIBehavioralStyle): void;
    // https://developer.apple.com/documentation/uikit/uislider/3752183-preferredbehavioralstyle
    preferredBehavioralStyle(): UIBehavioralStyle;
    setPreferredBehavioralStyle(value: UIBehavioralStyle): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621337-minimumvalueimage
    minimumValueImage(): UIImage;
    setMinimumValueImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621329-maximumvalueimage
    maximumValueImage(): UIImage;
    setMaximumValueImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621348-minimumtracktintcolor
    minimumTrackTintColor(): UIColor;
    setMinimumTrackTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621339-currentminimumtrackimage
    currentMinimumTrackImage(): UIImage;
    setCurrentMinimumTrackImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621328-minimumtrackimageforstate
    minimumTrackImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uislider/1621331-setminimumtrackimage
    setMinimumTrackImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uislider/1621334-maximumtracktintcolor
    maximumTrackTintColor(): UIColor;
    setMaximumTrackTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621343-currentmaximumtrackimage
    currentMaximumTrackImage(): UIImage;
    setCurrentMaximumTrackImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621335-maximumtrackimageforstate
    maximumTrackImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uislider/1621338-setmaximumtrackimage
    setMaximumTrackImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uislider/1621332-thumbtintcolor
    thumbTintColor(): UIColor;
    setThumbTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621347-currentthumbimage
    currentThumbImage(): UIImage;
    setCurrentThumbImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uislider/1621342-thumbimageforstate
    thumbImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uislider/1621336-setthumbimage
    setThumbImage_forState(image: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uislider/1621333-maximumvalueimagerectforbounds
    maximumValueImageRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uislider/1621327-minimumvalueimagerectforbounds
    minimumValueImageRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uislider/1621349-trackrectforbounds
    trackRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uislider/1621344-thumbrectforbounds
    thumbRectForBounds_trackRect_value(bounds: CGRect, rect: CGRect, value: number):CGRect;
    //
    alloc():UISlider;
    //
    init():UISlider;
  }
}

declare const UISlider: cocoascript.UISlider;
declare namespace cocoascript {
  /**
   * An interface for adding and removing menus from a menu system.
   * https://developer.apple.com/documentation/uikit/uimenubuilder
   */
  interface UIMenuBuilder {
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327311-system
    system(): UIMenuSystem;
    setSystem(value: UIMenuSystem): void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327307-menuforidentifier
    menuForIdentifier(identifier: UIMenuIdentifier):UIMenu;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3335198-actionforidentifier
    actionForIdentifier(identifier: UIActionIdentifier):UIAction;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327335-commandforaction
    commandForAction_propertyList(action: SEL, propertyList: UIMenuBuilder):UICommand;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327304-insertchildmenu
    insertChildMenu_atStartOfMenuForIdentifier(childMenu: UIMenu, parentIdentifier: UIMenuIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327303-insertchildmenu
    insertChildMenu_atEndOfMenuForIdentifier(childMenu: UIMenu, parentIdentifier: UIMenuIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327306-insertsiblingmenu
    insertSiblingMenu_beforeMenuForIdentifier(siblingMenu: UIMenu, siblingIdentifier: UIMenuIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327305-insertsiblingmenu
    insertSiblingMenu_afterMenuForIdentifier(siblingMenu: UIMenu, siblingIdentifier: UIMenuIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327309-replacemenuforidentifier
    replaceMenuForIdentifier_withMenu(replacedIdentifier: UIMenuIdentifier, replacementMenu: UIMenu):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327310-replacechildrenofmenuforidentifi
    replaceChildrenOfMenuForIdentifier_fromChildrenBlock(parentIdentifier: UIMenuIdentifier, childrenBlock: UIMenuElement):void;
    // https://developer.apple.com/documentation/uikit/uimenubuilder/3327308-removemenuforidentifier
    removeMenuForIdentifier(removedIdentifier: UIMenuIdentifier):void;
  }
}
declare namespace cocoascript {
  /**
   * A menu element that performs its action in a block.
   * https://developer.apple.com/documentation/uikit/uiaction
   */
  interface UIAction extends UIMenuElement {
    // https://developer.apple.com/documentation/uikit/uiaction/3340167-actionwithtitle
    actionWithTitle_image_identifier_handler(title: string | cocoascript.NSString, image: UIImage, identifier: UIActionIdentifier, handler: UIActionHandler):UIAction;
    // https://developer.apple.com/documentation/uikit/uiaction/3335179-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3335177-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3335176-identifier
    identifier(): UIActionIdentifier;
    setIdentifier(value: UIActionIdentifier): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3335175-discoverabilitytitle
    discoverabilityTitle(): string | cocoascript.NSString;
    setDiscoverabilityTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3335174-attributes
    attributes(): UIMenuElementAttributes;
    setAttributes(value: UIMenuElementAttributes): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3335178-state
    state(): UIMenuElementState;
    setState(value: UIMenuElementState): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3600315-sender
    sender(): id;
    setSender(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiaction/3778552-capturetextfromcameraactionforre
    captureTextFromCameraActionForResponder_identifier(responder: UIKeyInput, identifier: UIActionIdentifier):UIAction;
    // https://developer.apple.com/documentation/uikit/uiaction/3656167-actionwithhandler
    actionWithHandler(handler: UIActionHandler):UIAction;
    //
    alloc():UIAction;
    //
    init():UIAction;
  }
}

declare const UIAction: cocoascript.UIAction;
declare namespace cocoascript {
  /**
   * A container for grouping related menu elements in an app menu or contextual menu.
   * https://developer.apple.com/documentation/uikit/uimenu
   */
  interface UIMenu extends UIMenuElement {
    // https://developer.apple.com/documentation/uikit/uimenu/3327333-menuwithtitle
    menuWithTitle_children(title: string | cocoascript.NSString, children: UIMenuElement):UIMenu;
    // https://developer.apple.com/documentation/uikit/uimenu/3327334-menuwithtitle
    menuWithTitle_image_identifier_options_children(title: string | cocoascript.NSString, image: UIImage, identifier: UIMenuIdentifier, options: UIMenuOptions, children: UIMenuElement):UIMenu;
    // https://developer.apple.com/documentation/uikit/uimenu/3281978-initwithcoder
    initWithCoder(coder: NSCoder):UIMenu;
    // https://developer.apple.com/documentation/uikit/uimenu/3261448-children
    children(): UIMenuElement;
    setChildren(value: UIMenuElement): void;
    // https://developer.apple.com/documentation/uikit/uimenu/3261450-menubyreplacingchildren
    menuByReplacingChildren(newChildren: UIMenuElement):UIMenu;
    // https://developer.apple.com/documentation/uikit/uimenu/3261449-identifier
    identifier(): UIMenuIdentifier;
    setIdentifier(value: UIMenuIdentifier): void;
    // https://developer.apple.com/documentation/uikit/uimenu/3261451-options
    options(): UIMenuOptions;
    setOptions(value: UIMenuOptions): void;
    // https://developer.apple.com/documentation/uikit/uimenu/3750863-selectedelements
    selectedElements(): UIMenuElement;
    setSelectedElements(value: UIMenuElement): void;
    // https://developer.apple.com/documentation/uikit/uimenu/3656168-menuwithchildren
    menuWithChildren(children: UIMenuElement):UIMenu;
    //
    alloc():UIMenu;
    //
    init():UIMenu;
  }
}

declare const UIMenu: cocoascript.UIMenu;
declare namespace cocoascript {
  /**
   * A view that shows that a task is in progress.
   * https://developer.apple.com/documentation/uikit/uiactivityindicatorview
   */
  interface UIActivityIndicatorView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622840-initwithactivityindicatorstyle
    initWithActivityIndicatorStyle(style: UIActivityIndicatorViewStyle):UIActivityIndicatorView;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622841-initwithframe
    initWithFrame(frame: CGRect):UIActivityIndicatorView;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622844-initwithcoder
    initWithCoder(coder: NSCoder):UIActivityIndicatorView;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622835-startanimating
    startAnimating():void;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622842-stopanimating
    stopAnimating():void;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/2097554-animating
    animating(): boolean;
    setAnimating(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622837-hideswhenstopped
    hidesWhenStopped(): boolean;
    setHidesWhenStopped(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622847-activityindicatorviewstyle
    activityIndicatorViewStyle(): UIActivityIndicatorViewStyle;
    setActivityIndicatorViewStyle(value: UIActivityIndicatorViewStyle): void;
    // https://developer.apple.com/documentation/uikit/uiactivityindicatorview/1622836-color
    color(): UIColor;
    setColor(value: UIColor): void;
    //
    alloc():UIActivityIndicatorView;
    //
    init():UIActivityIndicatorView;
  }
}

declare const UIActivityIndicatorView: cocoascript.UIActivityIndicatorView;
declare namespace cocoascript {
  /**
   * An object that displays an alert message to the user.
   * https://developer.apple.com/documentation/uikit/uialertcontroller
   */
  interface UIAlertController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620092-alertcontrollerwithtitle
    alertControllerWithTitle_message_preferredStyle(title: string | cocoascript.NSString, message: string | cocoascript.NSString, preferredStyle: UIAlertControllerStyle):UIAlertController;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620103-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620106-message
    message(): string | cocoascript.NSString;
    setMessage(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620096-preferredstyle
    preferredStyle(): UIAlertControllerStyle;
    setPreferredStyle(value: UIAlertControllerStyle): void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620094-addaction
    addAction(action: UIAlertAction):void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620099-actions
    actions(): UIAlertAction;
    setActions(value: UIAlertAction): void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620102-preferredaction
    preferredAction(): UIAlertAction;
    setPreferredAction(value: UIAlertAction): void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620093-addtextfieldwithconfigurationhan
    addTextFieldWithConfigurationHandler(configurationHandler: UITextField):void;
    // https://developer.apple.com/documentation/uikit/uialertcontroller/1620104-textfields
    textFields(): UITextField;
    setTextFields(value: UITextField): void;
    //
    alloc():UIAlertController;
    //
    init():UIAlertController;
  }
}

declare const UIAlertController: cocoascript.UIAlertController;
declare namespace cocoascript {
  /**
   * A control for the inputting of date and time values.
   * https://developer.apple.com/documentation/uikit/uidatepicker
   */
  interface UIDatePicker extends UIControl {
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615973-calendar
    calendar(): NSCalendar;
    setCalendar(value: NSCalendar): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615975-date
    date(): NSDate;
    setDate(value: NSDate): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615995-locale
    locale(): NSLocale;
    setLocale(value: NSLocale): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615971-setdate
    setDate_animated(date: NSDate, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615976-timezone
    timeZone(): NSTimeZone;
    setTimeZone(value: NSTimeZone): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615997-datepickermode
    datePickerMode(): UIDatePickerMode;
    setDatePickerMode(value: UIDatePickerMode): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/3526123-datepickerstyle
    datePickerStyle(): UIDatePickerStyle;
    setDatePickerStyle(value: UIDatePickerStyle): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/3526124-preferreddatepickerstyle
    preferredDatePickerStyle(): UIDatePickerStyle;
    setPreferredDatePickerStyle(value: UIDatePickerStyle): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615999-maximumdate
    maximumDate(): NSDate;
    setMaximumDate(value: NSDate): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615980-minimumdate
    minimumDate(): NSDate;
    setMinimumDate(value: NSDate): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615998-minuteinterval
    minuteInterval(): NSInteger;
    setMinuteInterval(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/1615986-countdownduration
    countDownDuration(): NSTimeInterval;
    setCountDownDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uidatepicker/3791478-roundstominuteinterval
    roundsToMinuteInterval(): boolean;
    setRoundsToMinuteInterval(value: boolean): void;
    //
    alloc():UIDatePicker;
    //
    init():UIDatePicker;
  }
}

declare const UIDatePicker: cocoascript.UIDatePicker;
declare namespace cocoascript {
  /**
   * A view that uses a spinning-wheel or slot-machine metaphor to show one or more sets of values.
   * https://developer.apple.com/documentation/uikit/uipickerview
   */
  interface UIPickerView extends UIView {
    // https://developer.apple.com/documentation/uikit/uipickerview/1614370-datasource
    dataSource(): UIPickerViewDataSource;
    setDataSource(value: UIPickerViewDataSource): void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614379-delegate
    delegate(): UIPickerViewDelegate;
    setDelegate(value: UIPickerViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614368-numberofcomponents
    numberOfComponents(): NSInteger;
    setNumberOfComponents(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614381-numberofrowsincomponent
    numberOfRowsInComponent(component: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614374-rowsizeforcomponent
    rowSizeForComponent(component: NSInteger):CGSize;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614380-reloadallcomponents
    reloadAllComponents():void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614385-reloadcomponent
    reloadComponent(component: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614382-selectrow
    selectRow_inComponent_animated(row: NSInteger, component: NSInteger, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614369-selectedrowincomponent
    selectedRowInComponent(component: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614372-viewforrow
    viewForRow_forComponent(row: NSInteger, component: NSInteger):UIView;
    // https://developer.apple.com/documentation/uikit/uipickerview/1614373-showsselectionindicator
    showsSelectionIndicator(): boolean;
    setShowsSelectionIndicator(value: boolean): void;
    //
    alloc():UIPickerView;
    //
    init():UIPickerView;
  }
}

declare const UIPickerView: cocoascript.UIPickerView;
declare namespace cocoascript {
  /**
   * A view controller that informs your app about user interaction with the color picker.
   * https://developer.apple.com/documentation/uikit/uicolorpickerviewcontroller
   */
  interface UIColorPickerViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontroller/3600465-init
    init():UIColorPickerViewController;
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontroller/3600464-delegate
    delegate(): UIColorPickerViewControllerDelegate;
    setDelegate(value: UIColorPickerViewControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontroller/3600466-selectedcolor
    selectedColor(): UIColor;
    setSelectedColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontroller/3600467-supportsalpha
    supportsAlpha(): boolean;
    setSupportsAlpha(value: boolean): void;
    //
    alloc():UIColorPickerViewController;
    //
    init():UIColorPickerViewController;
  }
}

declare const UIColorPickerViewController: cocoascript.UIColorPickerViewController;
declare namespace cocoascript {
  /**
   * A control that displays a color picker.
   * https://developer.apple.com/documentation/uikit/uicolorwell
   */
  interface UIColorWell extends UIControl {
    // https://developer.apple.com/documentation/uikit/uicolorwell/3600472-selectedcolor
    selectedColor(): UIColor;
    setSelectedColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicolorwell/3600473-supportsalpha
    supportsAlpha(): boolean;
    setSupportsAlpha(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicolorwell/3600474-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    //
    alloc():UIColorWell;
    //
    init():UIColorWell;
  }
}

declare const UIColorWell: cocoascript.UIColorWell;
declare namespace cocoascript {
  /**
   * A view controller that manages the interface for selecting a font that the system provides or the user installs.
   * https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller
   */
  interface UIFontPickerViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller/3238098-initwithconfiguration
    initWithConfiguration(configuration: UIFontPickerViewControllerConfiguration):UIFontPickerViewController;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller/3238096-configuration
    configuration(): UIFontPickerViewControllerConfiguration;
    setConfiguration(value: UIFontPickerViewControllerConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller/3238097-delegate
    delegate(): UIFontPickerViewControllerDelegate;
    setDelegate(value: UIFontPickerViewControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller/3238099-selectedfontdescriptor
    selectedFontDescriptor(): UIFontDescriptor;
    setSelectedFontDescriptor(value: UIFontDescriptor): void;
    //
    alloc():UIFontPickerViewController;
    //
    init():UIFontPickerViewController;
  }
}

declare const UIFontPickerViewController: cocoascript.UIFontPickerViewController;
declare namespace cocoascript {
  /**
   * A view controller that manages the system interfaces for taking pictures, recording movies, and choosing items from the user's media library.
   * https://developer.apple.com/documentation/uikit/uiimagepickercontroller
   */
  interface UIImagePickerController extends UINavigationController {
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619145-delegate
    delegate(): UIImagePickerControllerDelegate;
    setDelegate(value: UIImagePickerControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619169-availablemediatypesforsourcetype
    availableMediaTypesForSourceType(sourceType: UIImagePickerControllerSourceType):NSString;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619144-issourcetypeavailable
    isSourceTypeAvailable(sourceType: UIImagePickerControllerSourceType):boolean;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619167-sourcetype
    sourceType(): UIImagePickerControllerSourceType;
    setSourceType(value: UIImagePickerControllerSourceType): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619173-mediatypes
    mediaTypes(): string | cocoascript.NSString;
    setMediaTypes(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619137-allowsediting
    allowsEditing(): boolean;
    setAllowsEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619115-allowsimageediting
    allowsImageEditing(): boolean;
    setAllowsImageEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619154-videoquality
    videoQuality(): UIImagePickerControllerQualityType;
    setVideoQuality(value: UIImagePickerControllerQualityType): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619146-videomaximumduration
    videoMaximumDuration(): NSTimeInterval;
    setVideoMaximumDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619129-showscameracontrols
    showsCameraControls(): boolean;
    setShowsCameraControls(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619113-cameraoverlayview
    cameraOverlayView(): UIView;
    setCameraOverlayView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619142-cameraviewtransform
    cameraViewTransform(): CGAffineTransform;
    setCameraViewTransform(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619160-takepicture
    takePicture():void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619123-startvideocapture
    startVideoCapture():boolean;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619140-stopvideocapture
    stopVideoCapture():void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619159-iscameradeviceavailable
    isCameraDeviceAvailable(cameraDevice: UIImagePickerControllerCameraDevice):boolean;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619117-cameradevice
    cameraDevice(): UIImagePickerControllerCameraDevice;
    setCameraDevice(value: UIImagePickerControllerCameraDevice): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619127-availablecapturemodesforcamerade
    availableCaptureModesForCameraDevice(cameraDevice: UIImagePickerControllerCameraDevice):NSNumber;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619141-cameracapturemode
    cameraCaptureMode(): UIImagePickerControllerCameraCaptureMode;
    setCameraCaptureMode(value: UIImagePickerControllerCameraCaptureMode): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619118-isflashavailableforcameradevice
    isFlashAvailableForCameraDevice(cameraDevice: UIImagePickerControllerCameraDevice):boolean;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619124-cameraflashmode
    cameraFlashMode(): UIImagePickerControllerCameraFlashMode;
    setCameraFlashMode(value: UIImagePickerControllerCameraFlashMode): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2897484-imageexportpreset
    imageExportPreset(): UIImagePickerControllerImageURLExportPreset;
    setImageExportPreset(value: UIImagePickerControllerImageURLExportPreset): void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontroller/2890964-videoexportpreset
    videoExportPreset(): string | cocoascript.NSString;
    setVideoExportPreset(value: string | cocoascript.NSString): void;
    //
    alloc():UIImagePickerController;
    //
    init():UIImagePickerController;
  }
}

declare const UIImagePickerController: cocoascript.UIImagePickerController;
declare namespace cocoascript {
  /**
   * An object that displays a single image or a sequence of animated images in your interface.
   * https://developer.apple.com/documentation/uikit/uiimageview
   */
  interface UIImageView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiimageview/1621062-initwithimage
    initWithImage(image: UIImage):UIImageView;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621064-initwithimage
    initWithImage_highlightedImage(image: UIImage, highlightedImage: UIImage):UIImageView;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621069-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621066-highlightedimage
    highlightedImage(): UIImage;
    setHighlightedImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621068-animationimages
    animationImages(): UIImage;
    setAnimationImages(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621065-highlightedanimationimages
    highlightedAnimationImages(): UIImage;
    setHighlightedAnimationImages(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621058-animationduration
    animationDuration(): NSTimeInterval;
    setAnimationDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621070-animationrepeatcount
    animationRepeatCount(): NSInteger;
    setAnimationRepeatCount(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621061-startanimating
    startAnimating():void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621057-stopanimating
    stopAnimating():void;
    // https://developer.apple.com/documentation/uikit/uiimageview/2097534-animating
    animating(): boolean;
    setAnimating(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/3295948-preferredsymbolconfiguration
    preferredSymbolConfiguration(): UIImageSymbolConfiguration;
    setPreferredSymbolConfiguration(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621063-userinteractionenabled
    userInteractionEnabled(): boolean;
    setUserInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621060-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1621059-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1627692-adjustsimagewhenancestorfocused
    adjustsImageWhenAncestorFocused(): boolean;
    setAdjustsImageWhenAncestorFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/1627691-focusedframeguide
    focusedFrameGuide(): UILayoutGuide;
    setFocusedFrameGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/2920037-masksfocuseffecttocontents
    masksFocusEffectToContents(): boolean;
    setMasksFocusEffectToContents(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimageview/2882128-overlaycontentview
    overlayContentView(): UIView;
    setOverlayContentView(value: UIView): void;
    //
    alloc():UIImageView;
    //
    init():UIImageView;
  }
}

declare const UIImageView: cocoascript.UIImageView;
declare namespace cocoascript {
  /**
   * A view that depicts the progress of a task over time.
   * https://developer.apple.com/documentation/uikit/uiprogressview
   */
  interface UIProgressView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619833-initwithprogressviewstyle
    initWithProgressViewStyle(style: UIProgressViewStyle):UIProgressView;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619842-initwithframe
    initWithFrame(frame: CGRect):UIProgressView;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619839-initwithcoder
    initWithCoder(coder: NSCoder):UIProgressView;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619844-progress
    progress(): number;
    setProgress(value: number): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619846-setprogress
    setProgress_animated(progress: number, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619840-observedprogress
    observedProgress(): NSProgress;
    setObservedProgress(value: NSProgress): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619845-progressviewstyle
    progressViewStyle(): UIProgressViewStyle;
    setProgressViewStyle(value: UIProgressViewStyle): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619836-progresstintcolor
    progressTintColor(): UIColor;
    setProgressTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619837-progressimage
    progressImage(): UIImage;
    setProgressImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619841-tracktintcolor
    trackTintColor(): UIColor;
    setTrackTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiprogressview/1619843-trackimage
    trackImage(): UIImage;
    setTrackImage(value: UIImage): void;
    //
    alloc():UIProgressView;
    //
    init():UIProgressView;
  }
}

declare const UIProgressView: cocoascript.UIProgressView;
declare namespace cocoascript {
  /**
   * A specialized view for receiving search-related information from the user.
   * https://developer.apple.com/documentation/uikit/uisearchbar
   */
  interface UISearchBar extends UIView {
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624304-init
    init():UISearchBar;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624324-initwithcoder
    initWithCoder(coder: NSCoder):UISearchBar;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624269-initwithframe
    initWithFrame(frame: CGRect):UISearchBar;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624291-delegate
    delegate(): UISearchBarDelegate;
    setDelegate(value: UISearchBarDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624322-placeholder
    placeholder(): string | cocoascript.NSString;
    setPlaceholder(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624326-prompt
    prompt(): string | cocoascript.NSString;
    setPrompt(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624282-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/3175433-searchtextfield
    searchTextField(): UISearchTextField;
    setSearchTextField(value: UISearchTextField): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624295-bartintcolor
    barTintColor(): UIColor;
    setBarTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624281-searchbarstyle
    searchBarStyle(): UISearchBarStyle;
    setSearchBarStyle(value: UISearchBarStyle): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624286-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624321-translucent
    translucent(): boolean;
    setTranslucent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624270-barstyle
    barStyle(): UIBarStyle;
    setBarStyle(value: UIBarStyle): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624275-inputassistantitem
    inputAssistantItem(): UITextInputAssistantItem;
    setInputAssistantItem(value: UITextInputAssistantItem): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624298-showsbookmarkbutton
    showsBookmarkButton(): boolean;
    setShowsBookmarkButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624283-showscancelbutton
    showsCancelButton(): boolean;
    setShowsCancelButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624293-setshowscancelbutton
    setShowsCancelButton_animated(showsCancelButton: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624273-showssearchresultsbutton
    showsSearchResultsButton(): boolean;
    setShowsSearchResultsButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624285-searchresultsbuttonselected
    searchResultsButtonSelected(): boolean;
    setSearchResultsButtonSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624276-backgroundimage
    backgroundImage(): UIImage;
    setBackgroundImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624274-backgroundimageforbarposition
    backgroundImageForBarPosition_barMetrics(barPosition: UIBarPosition, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624325-setbackgroundimage
    setBackgroundImage_forBarPosition_barMetrics(backgroundImage: UIImage, barPosition: UIBarPosition, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624296-imageforsearchbaricon
    imageForSearchBarIcon_state(icon: UISearchBarIcon, state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624330-setimage
    setImage_forSearchBarIcon_state(iconImage: UIImage, icon: UISearchBarIcon, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624323-positionadjustmentforsearchbaric
    positionAdjustmentForSearchBarIcon(icon: UISearchBarIcon):UIOffset;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624278-setpositionadjustment
    setPositionAdjustment_forSearchBarIcon(adjustment: UIOffset, icon: UISearchBarIcon):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624279-inputaccessoryview
    inputAccessoryView(): UIView;
    setInputAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624288-searchfieldbackgroundimageforsta
    searchFieldBackgroundImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624307-setsearchfieldbackgroundimage
    setSearchFieldBackgroundImage_forState(backgroundImage: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624320-searchfieldbackgroundpositionadj
    searchFieldBackgroundPositionAdjustment(): UIOffset;
    setSearchFieldBackgroundPositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624297-searchtextpositionadjustment
    searchTextPositionAdjustment(): UIOffset;
    setSearchTextPositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624292-scopebuttontitles
    scopeButtonTitles(): string | cocoascript.NSString;
    setScopeButtonTitles(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624287-selectedscopebuttonindex
    selectedScopeButtonIndex(): NSInteger;
    setSelectedScopeButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624319-showsscopebar
    showsScopeBar(): boolean;
    setShowsScopeBar(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/3152925-setshowsscopebar
    setShowsScopeBar_animated(show: boolean, animate: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624317-scopebarbackgroundimage
    scopeBarBackgroundImage(): UIImage;
    setScopeBarBackgroundImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624311-scopebarbuttonbackgroundimagefor
    scopeBarButtonBackgroundImageForState(state: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624290-setscopebarbuttonbackgroundimage
    setScopeBarButtonBackgroundImage_forState(backgroundImage: UIImage, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624313-scopebarbuttondividerimageforlef
    scopeBarButtonDividerImageForLeftSegmentState_rightSegmentState(leftState: UIControlState, rightState: UIControlState):UIImage;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624308-setscopebarbuttondividerimage
    setScopeBarButtonDividerImage_forLeftSegmentState_rightSegmentState(dividerImage: UIImage, leftState: UIControlState, rightState: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624309-scopebarbuttontitletextattribute
    scopeBarButtonTitleTextAttributesForState(state: UIControlState):UISearchBar;
    // https://developer.apple.com/documentation/uikit/uisearchbar/1624277-setscopebarbuttontitletextattrib
    setScopeBarButtonTitleTextAttributes_forState(attributes: UISearchBar, state: UIControlState):void;
    //
    alloc():UISearchBar;
    //
    init():UISearchBar;
  }
}

declare const UISearchBar: cocoascript.UISearchBar;
declare namespace cocoascript {
  /**
   * A horizontal control that consists of multiple segments, each segment functioning as a discrete button.
   * https://developer.apple.com/documentation/uikit/uisegmentedcontrol
   */
  interface UISegmentedControl extends UIControl {
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618569-initwithitems
    initWithItems(items: NSArray):UISegmentedControl;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600580-initwithframe
    initWithFrame_actions(frame: CGRect, actions: UIAction):UISegmentedControl;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600579-initwithframe
    initWithFrame(frame: CGRect):UISegmentedControl;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600578-initwithcoder
    initWithCoder(coder: NSCoder):UISegmentedControl;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618582-setimage
    setImage_forSegmentAtIndex(image: UIImage, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618579-imageforsegmentatindex
    imageForSegmentAtIndex(segment: NSUInteger):UIImage;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618556-settitle
    setTitle_forSegmentAtIndex(title: string | cocoascript.NSString, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618561-titleforsegmentatindex
    titleForSegmentAtIndex(segment: NSUInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600577-actionforsegmentatindex
    actionForSegmentAtIndex(segment: NSUInteger):UIAction;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600583-setaction
    setAction_forSegmentAtIndex(action: UIAction, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618553-numberofsegments
    numberOfSegments(): NSUInteger;
    setNumberOfSegments(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600582-segmentindexforactionidentifier
    segmentIndexForActionIdentifier(actionIdentifier: UIActionIdentifier):NSInteger;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3600581-insertsegmentwithaction
    insertSegmentWithAction_atIndex_animated(action: UIAction, segment: NSUInteger, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618572-insertsegmentwithimage
    insertSegmentWithImage_atIndex_animated(image: UIImage, segment: NSUInteger, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618588-insertsegmentwithtitle
    insertSegmentWithTitle_atIndex_animated(title: string | cocoascript.NSString, segment: NSUInteger, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618557-removeallsegments
    removeAllSegments():void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618590-removesegmentatindex
    removeSegmentAtIndex_animated(segment: NSUInteger, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618575-selectedsegmentindex
    selectedSegmentIndex(): NSInteger;
    setSelectedSegmentIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618586-momentary
    momentary(): boolean;
    setMomentary(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618567-setenabled
    setEnabled_forSegmentAtIndex(enabled: boolean, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618591-isenabledforsegmentatindex
    isEnabledForSegmentAtIndex(segment: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618574-setcontentoffset
    setContentOffset_forSegmentAtIndex(offset: CGSize, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618580-contentoffsetforsegmentatindex
    contentOffsetForSegmentAtIndex(segment: NSUInteger):CGSize;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618584-setwidth
    setWidth_forSegmentAtIndex(width: CGFloat, segment: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618581-widthforsegmentatindex
    widthForSegmentAtIndex(segment: NSUInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618578-apportionssegmentwidthsbycontent
    apportionsSegmentWidthsByContent(): boolean;
    setApportionsSegmentWidthsByContent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618577-segmentedcontrolstyle
    segmentedControlStyle(): UISegmentedControlStyle;
    setSegmentedControlStyle(value: UISegmentedControlStyle): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/3335209-selectedsegmenttintcolor
    selectedSegmentTintColor(): UIColor;
    setSelectedSegmentTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618583-backgroundimageforstate
    backgroundImageForState_barMetrics(state: UIControlState, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618571-setbackgroundimage
    setBackgroundImage_forState_barMetrics(backgroundImage: UIImage, state: UIControlState, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618593-contentpositionadjustmentforsegm
    contentPositionAdjustmentForSegmentType_barMetrics(leftCenterRightOrAlone: UISegmentedControlSegment, barMetrics: UIBarMetrics):UIOffset;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618555-setcontentpositionadjustment
    setContentPositionAdjustment_forSegmentType_barMetrics(adjustment: UIOffset, leftCenterRightOrAlone: UISegmentedControlSegment, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618565-dividerimageforleftsegmentstate
    dividerImageForLeftSegmentState_rightSegmentState_barMetrics(leftState: UIControlState, rightState: UIControlState, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618558-setdividerimage
    setDividerImage_forLeftSegmentState_rightSegmentState_barMetrics(dividerImage: UIImage, leftState: UIControlState, rightState: UIControlState, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618566-titletextattributesforstate
    titleTextAttributesForState(state: UIControlState):UISegmentedControl;
    // https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618570-settitletextattributes
    setTitleTextAttributes_forState(attributes: UISegmentedControl, state: UIControlState):void;
    //
    alloc():UISegmentedControl;
    //
    init():UISegmentedControl;
  }
}

declare const UISegmentedControl: cocoascript.UISegmentedControl;
declare namespace cocoascript {
  /**
   * A streamlined interface for laying out a collection of views in either a column or a row.
   * https://developer.apple.com/documentation/uikit/uistackview
   */
  interface UIStackView extends UIView {
    // https://developer.apple.com/documentation/uikit/uistackview/1616240-initwitharrangedsubviews
    initWithArrangedSubviews(views: UIView):UIStackView;
    // https://developer.apple.com/documentation/uikit/uistackview/2097542-initwithframe
    initWithFrame(frame: CGRect):UIStackView;
    // https://developer.apple.com/documentation/uikit/uistackview/2097541-initwithcoder
    initWithCoder(coder: NSCoder):UIStackView;
    // https://developer.apple.com/documentation/uikit/uistackview/1616227-addarrangedsubview
    addArrangedSubview(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616232-arrangedsubviews
    arrangedSubviews(): UIView;
    setArrangedSubviews(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616237-insertarrangedsubview
    insertArrangedSubview_atIndex(view: UIView, stackIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616235-removearrangedsubview
    removeArrangedSubview(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616243-alignment
    alignment(): UIStackViewAlignment;
    setAlignment(value: UIStackViewAlignment): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616223-axis
    axis(): UILayoutConstraintAxis;
    setAxis(value: UILayoutConstraintAxis): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616224-baselinerelativearrangement
    baselineRelativeArrangement(): boolean;
    setBaselineRelativeArrangement(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616233-distribution
    distribution(): UIStackViewDistribution;
    setDistribution(value: UIStackViewDistribution): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616220-layoutmarginsrelativearrangement
    layoutMarginsRelativeArrangement(): boolean;
    setLayoutMarginsRelativeArrangement(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistackview/1616225-spacing
    spacing(): CGFloat;
    setSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uistackview/2865827-customspacingafterview
    customSpacingAfterView(arrangedSubview: UIView):CGFloat;
    // https://developer.apple.com/documentation/uikit/uistackview/2866023-setcustomspacing
    setCustomSpacing_afterView(spacing: CGFloat, arrangedSubview: UIView):void;
    //
    alloc():UIStackView;
    //
    init():UIStackView;
  }
}

declare const UIStackView: cocoascript.UIStackView;
declare namespace cocoascript {
  /**
   * An object that displays an editable text area in your interface.
   * https://developer.apple.com/documentation/uikit/uitextfield
   */
  interface UITextField extends UIControl {
    // https://developer.apple.com/documentation/uikit/uitextfield/1619595-delegate
    delegate(): UITextFieldDelegate;
    setDelegate(value: UITextFieldDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619635-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619602-attributedtext
    attributedText(): NSAttributedString;
    setAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619621-placeholder
    placeholder(): string | cocoascript.NSString;
    setPlaceholder(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619610-attributedplaceholder
    attributedPlaceholder(): NSAttributedString;
    setAttributedPlaceholder(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619618-defaulttextattributes
    defaultTextAttributes(): id;
    setDefaultTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619604-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619617-textcolor
    textColor(): UIColor;
    setTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619643-textalignment
    textAlignment(): NSTextAlignment;
    setTextAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619632-typingattributes
    typingAttributes(): id;
    setTypingAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619625-adjustsfontsizetofitwidth
    adjustsFontSizeToFitWidth(): boolean;
    setAdjustsFontSizeToFitWidth(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619605-minimumfontsize
    minimumFontSize(): CGFloat;
    setMinimumFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619608-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619639-clearsonbeginediting
    clearsOnBeginEditing(): boolean;
    setClearsOnBeginEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619631-clearsoninsertion
    clearsOnInsertion(): boolean;
    setClearsOnInsertion(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619628-allowseditingtextattributes
    allowsEditingTextAttributes(): boolean;
    setAllowsEditingTextAttributes(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619624-borderstyle
    borderStyle(): UITextBorderStyle;
    setBorderStyle(value: UITextBorderStyle): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619623-background
    background(): UIImage;
    setBackground(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619611-disabledbackground
    disabledBackground(): UIImage;
    setDisabledBackground(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619622-clearbuttonmode
    clearButtonMode(): UITextFieldViewMode;
    setClearButtonMode(value: UITextFieldViewMode): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619597-leftview
    leftView(): UIView;
    setLeftView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619588-leftviewmode
    leftViewMode(): UITextFieldViewMode;
    setLeftViewMode(value: UITextFieldViewMode): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619596-rightview
    rightView(): UIView;
    setRightView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619607-rightviewmode
    rightViewMode(): UITextFieldViewMode;
    setRightViewMode(value: UITextFieldViewMode): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619636-textrectforbounds
    textRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619587-drawtextinrect
    drawTextInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619615-placeholderrectforbounds
    placeholderRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619637-drawplaceholderinrect
    drawPlaceholderInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619642-borderrectforbounds
    borderRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619589-editingrectforbounds
    editingRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619600-clearbuttonrectforbounds
    clearButtonRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619586-leftviewrectforbounds
    leftViewRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619638-rightviewrectforbounds
    rightViewRectForBounds(bounds: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619620-inputview
    inputView(): UIView;
    setInputView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619627-inputaccessoryview
    inputAccessoryView(): UIView;
    setInputAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/3821028-interactionstate
    interactionState(): id;
    setInteractionState(value: id): void;
    //
    alloc():UITextField;
    //
    init():UITextField;
  }
}

declare const UITextField: cocoascript.UITextField;
// https://developer.apple.com/documentation/uikit/uitextfielddidendeditingreasonkey
declare const UITextFieldDidEndEditingReasonKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An object that coordinates text formatting using the standard Mac font panel.
   * https://developer.apple.com/documentation/uikit/uitextformattingcoordinator
   */
  interface UITextFormattingCoordinator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261466-textformattingcoordinatorforwind
    textFormattingCoordinatorForWindowScene(windowScene: UIWindowScene):UITextFormattingCoordinator;
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261464-initwithwindowscene
    initWithWindowScene(windowScene: UIWindowScene):UITextFormattingCoordinator;
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261463-fontpanelvisible
    fontPanelVisible(): boolean;
    setFontPanelVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261467-togglefontpanel
    toggleFontPanel(sender: UITextFormattingCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261465-setselectedattributes
    setSelectedAttributes_isMultiple(attributes: UITextFormattingCoordinator, flag: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinator/3261462-delegate
    delegate(): UITextFormattingCoordinatorDelegate;
    setDelegate(value: UITextFormattingCoordinatorDelegate): void;
    //
    alloc():UITextFormattingCoordinator;
    //
    init():UITextFormattingCoordinator;
  }
}

declare const UITextFormattingCoordinator: cocoascript.UITextFormattingCoordinator;
declare namespace cocoascript {
  /**
   * A scrollable, multiline text region.
   * https://developer.apple.com/documentation/uikit/uitextview
   */
  interface UITextView extends UIScrollView {
    // https://developer.apple.com/documentation/uikit/uitextview/1618597-initwithframe
    initWithFrame_textContainer(frame: CGRect, textContainer: NSTextContainer):UITextView;
    // https://developer.apple.com/documentation/uikit/uitextview/1618617-initwithcoder
    initWithCoder(coder: NSCoder):UITextView;
    // https://developer.apple.com/documentation/uikit/uitextview/1618631-delegate
    delegate(): UITextViewDelegate;
    setDelegate(value: UITextViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618623-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618626-attributedtext
    attributedText(): NSAttributedString;
    setAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618600-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618601-textcolor
    textColor(): UIColor;
    setTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618607-datadetectortypes
    dataDetectorTypes(): UIDataDetectorTypes;
    setDataDetectorTypes(value: UIDataDetectorTypes): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618618-textalignment
    textAlignment(): NSTextAlignment;
    setTextAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1807137-hastext
    ():void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618629-typingattributes
    typingAttributes(): id;
    setTypingAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618632-linktextattributes
    linkTextAttributes(): id;
    setLinkTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618619-textcontainerinset
    textContainerInset(): UIEdgeInsets;
    setTextContainerInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uitextview/3295975-usesstandardtextscaling
    usesStandardTextScaling(): boolean;
    setUsesStandardTextScaling(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618616-editable
    editable(): boolean;
    setEditable(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618622-allowseditingtextattributes
    allowsEditingTextAttributes(): boolean;
    setAllowsEditingTextAttributes(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618615-selectedrange
    selectedRange(): NSRange;
    setSelectedRange(value: NSRange): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618613-scrollrangetovisible
    scrollRangeToVisible(range: NSRange):void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618605-clearsoninsertion
    clearsOnInsertion(): boolean;
    setClearsOnInsertion(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618627-selectable
    selectable(): boolean;
    setSelectable(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618614-inputview
    inputView(): UIView;
    setInputView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618596-inputaccessoryview
    inputAccessoryView(): UIView;
    setInputAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618602-layoutmanager
    layoutManager(): NSLayoutManager;
    setLayoutManager(value: NSLayoutManager): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618624-textcontainer
    textContainer(): NSTextContainer;
    setTextContainer(value: NSTextContainer): void;
    // https://developer.apple.com/documentation/uikit/uitextview/1618611-textstorage
    textStorage(): NSTextStorage;
    setTextStorage(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/uikit/uitextview/3821029-interactionstate
    interactionState(): id;
    setInteractionState(value: id): void;
    //
    alloc():UITextView;
    //
    init():UITextView;
  }
}

declare const UITextView: cocoascript.UITextView;
declare namespace cocoascript {
  /**
   * A control that displays one or more buttons along the bottom edge of your interface.
   * https://developer.apple.com/documentation/uikit/uitoolbar
   */
  interface UIToolbar extends UIView {
    // https://developer.apple.com/documentation/uikit/uitoolbar/1617992-delegate
    delegate(): UIToolbarDelegate;
    setDelegate(value: UIToolbarDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/1617997-items
    items(): UIBarButtonItem;
    setItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/1617999-setitems
    setItems_animated(items: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/3198081-standardappearance
    standardAppearance(): UIToolbarAppearance;
    setStandardAppearance(value: UIToolbarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/3198080-compactappearance
    compactAppearance(): UIToolbarAppearance;
    setCompactAppearance(value: UIToolbarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/3752214-scrolledgeappearance
    scrollEdgeAppearance(): UIToolbarAppearance;
    setScrollEdgeAppearance(value: UIToolbarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/3752213-compactscrolledgeappearance
    compactScrollEdgeAppearance(): UIToolbarAppearance;
    setCompactScrollEdgeAppearance(value: UIToolbarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitoolbar/1618001-translucent
    translucent(): boolean;
    setTranslucent(value: boolean): void;
    //
    alloc():UIToolbar;
    //
    init():UIToolbar;
  }
}

declare const UIToolbar: cocoascript.UIToolbar;
declare namespace cocoascript {
  /**
   * An initializer for visual effect views and blur and vibrancy effect objects.
   * https://developer.apple.com/documentation/uikit/uivisualeffect
   */
  interface UIVisualEffect extends NSObject {
    //
    alloc():UIVisualEffect;
    //
    init():UIVisualEffect;
  }
}

declare const UIVisualEffect: cocoascript.UIVisualEffect;
declare namespace cocoascript {
  /**
   * An object that manages the content for a rectangular area on the screen.
   * https://developer.apple.com/documentation/uikit/uiview
   */
  interface UIView extends UIResponder {
    // https://developer.apple.com/documentation/uikit/uiview/1622488-initwithframe
    initWithFrame(frame: CGRect):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622477-initwithcoder
    initWithCoder(coder: NSCoder):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622591-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622585-hidden
    hidden(): boolean;
    setHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622417-alpha
    alpha(): CGFloat;
    setAlpha(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622622-opaque
    opaque(): boolean;
    setOpaque(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622467-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622555-tintadjustmentmode
    tintAdjustmentMode(): UIViewTintAdjustmentMode;
    setTintAdjustmentMode(value: UIViewTintAdjustmentMode): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622415-clipstobounds
    clipsToBounds(): boolean;
    setClipsToBounds(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622449-clearscontextbeforedrawing
    clearsContextBeforeDrawing(): boolean;
    setClearsContextBeforeDrawing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622557-maskview
    maskView(): UIView;
    setMaskView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622626-layerclass
    layerClass(): Class;
    setLayerClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622436-layer
    layer(): CALayer;
    setLayer(value: CALayer): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622577-userinteractionenabled
    userInteractionEnabled(): boolean;
    setUserInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622519-multipletouchenabled
    multipleTouchEnabled(): boolean;
    setMultipleTouchEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622453-exclusivetouch
    exclusiveTouch(): boolean;
    setExclusiveTouch(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622621-frame
    frame(): CGRect;
    setFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622580-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622627-center
    center(): CGPoint;
    setCenter(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622459-transform
    transform(): CGAffineTransform;
    setTransform(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/uiview/3043565-transform3d
    transform3D(): CATransform3D;
    setTransform3D(value: CATransform3D): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622474-superview
    superview(): UIView;
    setSuperview(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622614-subviews
    subviews(): UIView;
    setSubviews(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622456-window
    window(): UIWindow;
    setWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622616-addsubview
    addSubview(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622541-bringsubviewtofront
    bringSubviewToFront(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622618-sendsubviewtoback
    sendSubviewToBack(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622421-removefromsuperview
    removeFromSuperview():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622538-insertsubview
    insertSubview_atIndex(view: UIView, index: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622570-insertsubview
    insertSubview_aboveSubview(view: UIView, siblingSubview: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622598-insertsubview
    insertSubview_belowSubview(view: UIView, siblingSubview: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622448-exchangesubviewatindex
    exchangeSubviewAtIndex_withSubviewAtIndex(index1: NSInteger, index2: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622521-isdescendantofview
    isDescendantOfView(view: UIView):boolean;
    // https://developer.apple.com/documentation/uikit/uiview/1622500-didaddsubview
    didAddSubview(subview: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622647-willremovesubview
    willRemoveSubview(subview: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622629-willmovetosuperview
    willMoveToSuperview(newSuperview: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622433-didmovetosuperview
    didMoveToSuperview():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622563-willmovetowindow
    willMoveToWindow(newWindow: UIWindow):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622527-didmovetowindow
    didMoveToWindow():void;
    // https://developer.apple.com/documentation/uikit/uiview/2865930-directionallayoutmargins
    directionalLayoutMargins(): NSDirectionalEdgeInsets;
    setDirectionalLayoutMargins(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622566-layoutmargins
    layoutMargins(): UIEdgeInsets;
    setLayoutMargins(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622653-preservessuperviewlayoutmargins
    preservesSuperviewLayoutMargins(): boolean;
    setPreservesSuperviewLayoutMargins(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622416-layoutmarginsdidchange
    layoutMarginsDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiview/2891103-safeareainsets
    safeAreaInsets(): UIEdgeInsets;
    setSafeAreaInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiview/2891102-safearealayoutguide
    safeAreaLayoutGuide(): UILayoutGuide;
    setSafeAreaLayoutGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiview/2891104-safeareainsetsdidchange
    safeAreaInsetsDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiview/2891101-insetslayoutmarginsfromsafearea
    insetsLayoutMarginsFromSafeArea(): boolean;
    setInsetsLayoutMarginsFromSafeArea(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622464-constraints
    constraints(): NSLayoutConstraint;
    setConstraints(value: NSLayoutConstraint): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622523-addconstraint
    addConstraint(constraint: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622513-addconstraints
    addConstraints(constraints: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622659-removeconstraint
    removeConstraint(constraint: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622593-removeconstraints
    removeConstraints(constraints: NSLayoutConstraint):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622483-bottomanchor
    bottomAnchor(): NSLayoutYAxisAnchor;
    setBottomAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622596-centerxanchor
    centerXAnchor(): NSLayoutXAxisAnchor;
    setCenterXAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622447-centeryanchor
    centerYAnchor(): NSLayoutYAxisAnchor;
    setCenterYAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622508-firstbaselineanchor
    firstBaselineAnchor(): NSLayoutYAxisAnchor;
    setFirstBaselineAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622590-heightanchor
    heightAnchor(): NSLayoutDimension;
    setHeightAnchor(value: NSLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622471-lastbaselineanchor
    lastBaselineAnchor(): NSLayoutYAxisAnchor;
    setLastBaselineAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622520-leadinganchor
    leadingAnchor(): NSLayoutXAxisAnchor;
    setLeadingAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622435-leftanchor
    leftAnchor(): NSLayoutXAxisAnchor;
    setLeftAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622579-rightanchor
    rightAnchor(): NSLayoutXAxisAnchor;
    setRightAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622613-topanchor
    topAnchor(): NSLayoutYAxisAnchor;
    setTopAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622522-trailinganchor
    trailingAnchor(): NSLayoutXAxisAnchor;
    setTrailingAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622605-widthanchor
    widthAnchor(): NSLayoutDimension;
    setWidthAnchor(value: NSLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622414-addlayoutguide
    addLayoutGuide(layoutGuide: UILayoutGuide):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622536-layoutguides
    layoutGuides(): UILayoutGuide;
    setLayoutGuides(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622651-layoutmarginsguide
    layoutMarginsGuide(): UILayoutGuide;
    setLayoutMarginsGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622644-readablecontentguide
    readableContentGuide(): UILayoutGuide;
    setReadableContentGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622506-removelayoutguide
    removeLayoutGuide(layoutGuide: UILayoutGuide):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622624-systemlayoutsizefittingsize
    systemLayoutSizeFittingSize(targetSize: CGSize):CGSize;
    // https://developer.apple.com/documentation/uikit/uiview/1622623-systemlayoutsizefittingsize
    systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority(targetSize: CGSize, horizontalFittingPriority: UILayoutPriority, verticalFittingPriority: UILayoutPriority):CGSize;
    // https://developer.apple.com/documentation/uikit/uiview/1622600-intrinsiccontentsize
    intrinsicContentSize(): CGSize;
    setIntrinsicContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622457-invalidateintrinsiccontentsize
    invalidateIntrinsicContentSize():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622465-contentcompressionresistanceprio
    contentCompressionResistancePriorityForAxis(axis: UILayoutConstraintAxis):UILayoutPriority;
    // https://developer.apple.com/documentation/uikit/uiview/1622526-setcontentcompressionresistancep
    setContentCompressionResistancePriority_forAxis(priority: UILayoutPriority, axis: UILayoutConstraintAxis):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622556-contenthuggingpriorityforaxis
    contentHuggingPriorityForAxis(axis: UILayoutConstraintAxis):UILayoutPriority;
    // https://developer.apple.com/documentation/uikit/uiview/1622485-setcontenthuggingpriority
    setContentHuggingPriority_forAxis(priority: UILayoutPriority, axis: UILayoutConstraintAxis):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622576-alignmentrectforframe
    alignmentRectForFrame(frame: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uiview/1622603-frameforalignmentrect
    frameForAlignmentRect(alignmentRect: CGRect):CGRect;
    // https://developer.apple.com/documentation/uikit/uiview/1622648-alignmentrectinsets
    alignmentRectInsets(): UIEdgeInsets;
    setAlignmentRectInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622439-viewforbaselinelayout
    viewForBaselineLayout():UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622452-viewforfirstbaselinelayout
    viewForFirstBaselineLayout(): UIView;
    setViewForFirstBaselineLayout(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622633-viewforlastbaselinelayout
    viewForLastBaselineLayout(): UIView;
    setViewForLastBaselineLayout(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622567-needsupdateconstraints
    needsUpdateConstraints():boolean;
    // https://developer.apple.com/documentation/uikit/uiview/1622450-setneedsupdateconstraints
    setNeedsUpdateConstraints():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622512-updateconstraints
    updateConstraints():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622595-updateconstraintsifneeded
    updateConstraintsIfNeeded():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622432-constraintsaffectinglayoutforaxi
    constraintsAffectingLayoutForAxis(axis: UILayoutConstraintAxis):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/uiview/1622517-hasambiguouslayout
    hasAmbiguousLayout(): boolean;
    setHasAmbiguousLayout(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622545-exerciseambiguityinlayout
    exerciseAmbiguityInLayout():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622619-contentmode
    contentMode(): UIViewContentMode;
    setContentMode(value: UIViewContentMode): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622511-contentstretch
    contentStretch(): CGRect;
    setContentStretch(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622625-sizethatfits
    sizeThatFits(size: CGSize):CGSize;
    // https://developer.apple.com/documentation/uikit/uiview/1622630-sizetofit
    sizeToFit():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622425-autoresizessubviews
    autoresizesSubviews(): boolean;
    setAutoresizesSubviews(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622559-autoresizingmask
    autoresizingMask(): UIViewAutoresizing;
    setAutoresizingMask(value: UIViewAutoresizing): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622482-layoutsubviews
    layoutSubviews():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622601-setneedslayout
    setNeedsLayout():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622507-layoutifneeded
    layoutIfNeeded():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622549-requiresconstraintbasedlayout
    requiresConstraintBasedLayout(): boolean;
    setRequiresConstraintBasedLayout(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622572-translatesautoresizingmaskintoco
    translatesAutoresizingMaskIntoConstraints(): boolean;
    setTranslatesAutoresizingMaskIntoConstraints(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3238086-overrideuserinterfacestyle
    overrideUserInterfaceStyle(): UIUserInterfaceStyle;
    setOverrideUserInterfaceStyle(value: UIUserInterfaceStyle): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622461-semanticcontentattribute
    semanticContentAttribute(): UISemanticContentAttribute;
    setSemanticContentAttribute(value: UISemanticContentAttribute): void;
    // https://developer.apple.com/documentation/uikit/uiview/1648536-effectiveuserinterfacelayoutdire
    effectiveUserInterfaceLayoutDirection(): UIUserInterfaceLayoutDirection;
    setEffectiveUserInterfaceLayoutDirection(value: UIUserInterfaceLayoutDirection): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622480-userinterfacelayoutdirectionfors
    userInterfaceLayoutDirectionForSemanticContentAttribute(attribute: UISemanticContentAttribute):UIUserInterfaceLayoutDirection;
    // https://developer.apple.com/documentation/uikit/uiview/1648535-userinterfacelayoutdirectionfors
    userInterfaceLayoutDirectionForSemanticContentAttribute_relativeToLayoutDirection(semanticContentAttribute: UISemanticContentAttribute, layoutDirection: UIUserInterfaceLayoutDirection):UIUserInterfaceLayoutDirection;
    // https://developer.apple.com/documentation/uikit/uiview/3752221-keyboardlayoutguide
    keyboardLayoutGuide(): UIKeyboardLayoutGuide;
    setKeyboardLayoutGuide(value: UIKeyboardLayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiview/2891013-addinteraction
    addInteraction(interaction: UIInteraction):void;
    // https://developer.apple.com/documentation/uikit/uiview/2891036-removeinteraction
    removeInteraction(interaction: UIInteraction):void;
    // https://developer.apple.com/documentation/uikit/uiview/2891054-interactions
    interactions(): UIInteraction;
    setInteractions(value: UIInteraction): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622529-drawrect
    drawRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622437-setneedsdisplay
    setNeedsDisplay():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622587-setneedsdisplayinrect
    setNeedsDisplayInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622657-contentscalefactor
    contentScaleFactor(): CGFloat;
    setContentScaleFactor(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622620-tintcolordidchange
    tintColorDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiview/1621835-viewprintformatter
    viewPrintFormatter():UIViewPrintFormatter;
    // https://developer.apple.com/documentation/uikit/uiview/1621844-drawrect
    drawRect_forViewPrintFormatter(rect: CGRect, formatter: UIViewPrintFormatter):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622496-addgesturerecognizer
    addGestureRecognizer(gestureRecognizer: UIGestureRecognizer):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622413-removegesturerecognizer
    removeGestureRecognizer(gestureRecognizer: UIGestureRecognizer):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622542-gesturerecognizers
    gestureRecognizers(): UIGestureRecognizer;
    setGestureRecognizers(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622460-gesturerecognizershouldbegin
    gestureRecognizerShouldBegin(gestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uiview/1622584-canbecomefocused
    canBecomeFocused(): boolean;
    setCanBecomeFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622479-inheritedanimationduration
    inheritedAnimationDuration(): NSTimeInterval;
    setInheritedAnimationDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622565-focused
    focused(): boolean;
    setFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3601233-focusgroupidentifier
    focusGroupIdentifier(): string | cocoascript.NSString;
    setFocusGroupIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622586-addmotioneffect
    addMotionEffect(effect: UIMotionEffect):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622428-motioneffects
    motionEffects(): UIMotionEffect;
    setMotionEffects(value: UIMotionEffect): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622481-removemotioneffect
    removeMotionEffect(effect: UIMotionEffect):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622494-restorationidentifier
    restorationIdentifier(): string | cocoascript.NSString;
    setRestorationIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622516-encoderestorablestatewithcoder
    encodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622638-decoderestorablestatewithcoder
    decodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622531-snapshotviewafterscreenupdates
    snapshotViewAfterScreenUpdates(afterUpdates: boolean):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622597-resizablesnapshotviewfromrect
    resizableSnapshotViewFromRect_afterScreenUpdates_withCapInsets(rect: CGRect, afterUpdates: boolean, capInsets: UIEdgeInsets):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622589-drawviewhierarchyinrect
    drawViewHierarchyInRect_afterScreenUpdates(rect: CGRect, afterUpdates: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uiview/1622493-tag
    tag(): NSInteger;
    setTag(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622429-viewwithtag
    viewWithTag(tag: NSInteger):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622442-convertpoint
    convertPoint_toView(point: CGPoint, view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uiview/1622424-convertpoint
    convertPoint_fromView(point: CGPoint, view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uiview/1622504-convertrect
    convertRect_toView(rect: CGRect, view: UIView):CGRect;
    // https://developer.apple.com/documentation/uikit/uiview/1622498-convertrect
    convertRect_fromView(rect: CGRect, view: UIView):CGRect;
    // https://developer.apple.com/documentation/uikit/uiview/1622469-hittest
    hitTest_withEvent(point: CGPoint, event: UIEvent):UIView;
    // https://developer.apple.com/documentation/uikit/uiview/1622533-pointinside
    pointInside_withEvent(point: CGPoint, event: UIEvent):boolean;
    // https://developer.apple.com/documentation/uikit/uiview/1619630-endediting
    endEditing(force: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uiview/2865843-accessibilityignoresinvertcolors
    accessibilityIgnoresInvertColors(): boolean;
    setAccessibilityIgnoresInvertColors(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3183937-largecontentimage
    largeContentImage(): UIImage;
    setLargeContentImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiview/3183938-largecontentimageinsets
    largeContentImageInsets(): UIEdgeInsets;
    setLargeContentImageInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiview/3183939-largecontenttitle
    largeContentTitle(): string | cocoascript.NSString;
    setLargeContentTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiview/3183940-scaleslargecontentimage
    scalesLargeContentImage(): boolean;
    setScalesLargeContentImage(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3183941-showslargecontentviewer
    showsLargeContentViewer(): boolean;
    setShowsLargeContentViewer(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/1622451-animatewithduration
    animateWithDuration_delay_options_animations_completion(duration: NSTimeInterval, delay: NSTimeInterval, options: UIViewAnimationOptions, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622515-animatewithduration
    animateWithDuration_animations_completion(duration: NSTimeInterval, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622418-animatewithduration
    animateWithDuration_animations(duration: NSTimeInterval, animations: void):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622574-transitionwithview
    transitionWithView_duration_options_animations_completion(view: UIView, duration: NSTimeInterval, options: UIViewAnimationOptions, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622562-transitionfromview
    transitionFromView_toView_duration_options_completion(fromView: UIView, toView: UIView, duration: NSTimeInterval, options: UIViewAnimationOptions, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622552-animatekeyframeswithduration
    animateKeyframesWithDuration_delay_options_animations_completion(duration: NSTimeInterval, delay: NSTimeInterval, options: UIViewKeyframeAnimationOptions, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622554-addkeyframewithrelativestarttime
    addKeyframeWithRelativeStartTime_relativeDuration_animations(frameStartTime: number, frameDuration: number, animations: void):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622635-performsystemanimation
    performSystemAnimation_onViews_options_animations_completion(animation: UISystemAnimation, views: UIView, options: UIViewAnimationOptions, parallelAnimations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622594-animatewithduration
    animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion(duration: NSTimeInterval, delay: NSTimeInterval, dampingRatio: CGFloat, velocity: CGFloat, options: UIViewAnimationOptions, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622484-performwithoutanimation
    performWithoutAnimation(actionsWithoutAnimation: void):void;
    // https://developer.apple.com/documentation/uikit/uiview/3043564-modifyanimationswithrepeatcount
    modifyAnimationsWithRepeatCount_autoreverses_animations(count: CGFloat, autoreverses: boolean, animations: void):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622463-beginanimations
    beginAnimations_context(animationID: string | cocoascript.NSString, context: void):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622664-commitanimations
    commitAnimations():void;
    // https://developer.apple.com/documentation/uikit/uiview/1622466-setanimationstartdate
    setAnimationStartDate(startDate: NSDate):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622420-setanimationsenabled
    setAnimationsEnabled(enabled: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622509-setanimationdelegate
    setAnimationDelegate(delegate: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622649-setanimationwillstartselector
    setAnimationWillStartSelector(selector: SEL):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622539-setanimationdidstopselector
    setAnimationDidStopSelector(selector: SEL):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622617-setanimationduration
    setAnimationDuration(duration: NSTimeInterval):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622472-setanimationdelay
    setAnimationDelay(delay: NSTimeInterval):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622588-setanimationcurve
    setAnimationCurve(curve: UIViewAnimationCurve):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622419-setanimationrepeatcount
    setAnimationRepeatCount(repeatCount: number):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622501-setanimationrepeatautoreverses
    setAnimationRepeatAutoreverses(repeatAutoreverses: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622446-setanimationbeginsfromcurrentsta
    setAnimationBeginsFromCurrentState(fromCurrentState: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622528-setanimationtransition
    setAnimationTransition_forView_cache(transition: UIViewAnimationTransition, view: UIView, cache: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiview/1622571-areanimationsenabled
    areAnimationsEnabled(): boolean;
    setAreAnimationsEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3750922-appliedcontentsizecategorylimits
    appliedContentSizeCategoryLimitsDescription(): string | cocoascript.NSString;
    setAppliedContentSizeCategoryLimitsDescription(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiview/3778578-focuseffect
    focusEffect(): UIFocusEffect;
    setFocusEffect(value: UIFocusEffect): void;
    // https://developer.apple.com/documentation/uikit/uiview/3778579-focusgrouppriority
    focusGroupPriority(): UIFocusGroupPriority;
    setFocusGroupPriority(value: UIFocusGroupPriority): void;
    // https://developer.apple.com/documentation/uikit/uiview/3750923-maximumcontentsizecategory
    maximumContentSizeCategory(): UIContentSizeCategory;
    setMaximumContentSizeCategory(value: UIContentSizeCategory): void;
    // https://developer.apple.com/documentation/uikit/uiview/3750924-minimumcontentsizecategory
    minimumContentSizeCategory(): UIContentSizeCategory;
    setMinimumContentSizeCategory(value: UIContentSizeCategory): void;
    //
    alloc():UIView;
    //
    init():UIView;
  }
}

declare const UIView: cocoascript.UIView;
declare namespace cocoascript {
  /**
   * An object that draws pages of content that are to be printed, with or without the assistance of print formatters.
   * https://developer.apple.com/documentation/uikit/uiprintpagerenderer
   */
  interface UIPrintPageRenderer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621631-numberofpages
    numberOfPages(): NSInteger;
    setNumberOfPages(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621633-paperrect
    paperRect(): CGRect;
    setPaperRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621628-printablerect
    printableRect(): CGRect;
    setPrintableRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621630-headerheight
    headerHeight(): CGFloat;
    setHeaderHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621634-footerheight
    footerHeight(): CGFloat;
    setFooterHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621632-addprintformatter
    addPrintFormatter_startingAtPageAtIndex(formatter: UIPrintFormatter, pageIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621635-printformattersforpageatindex
    printFormattersForPageAtIndex(pageIndex: NSInteger):UIPrintFormatter;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621640-printformatters
    printFormatters(): UIPrintFormatter;
    setPrintFormatters(value: UIPrintFormatter): void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621643-preparefordrawingpages
    prepareForDrawingPages(range: NSRange):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621636-drawpageatindex
    drawPageAtIndex_inRect(pageIndex: NSInteger, printableRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621639-drawheaderforpageatindex
    drawHeaderForPageAtIndex_inRect(pageIndex: NSInteger, headerRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621641-drawcontentforpageatindex
    drawContentForPageAtIndex_inRect(pageIndex: NSInteger, contentRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621644-drawprintformatter
    drawPrintFormatter_forPageAtIndex(printFormatter: UIPrintFormatter, pageIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/1621638-drawfooterforpageatindex
    drawFooterForPageAtIndex_inRect(pageIndex: NSInteger, footerRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiprintpagerenderer/3727328-currentrenderingqualityforreques
    currentRenderingQualityForRequestedRenderingQuality(requestedRenderingQuality: UIPrintRenderingQuality):UIPrintRenderingQuality;
    //
    alloc():UIPrintPageRenderer;
    //
    init():UIPrintPageRenderer;
  }
}

declare const UIPrintPageRenderer: cocoascript.UIPrintPageRenderer;
declare namespace cocoascript {
  /**
   * A set of methods that define the focus behavior for a branch of the view hierarchy.
   * https://developer.apple.com/documentation/uikit/uifocusenvironment
   */
  interface UIFocusEnvironment extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1616837-setneedsfocusupdate
    setNeedsFocusUpdate():void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1616833-updatefocusifneeded
    updateFocusIfNeeded():void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1616831-shouldupdatefocusincontext
    shouldUpdateFocusInContext(context: UIFocusUpdateContext):boolean;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1616841-didupdatefocusincontext
    didUpdateFocusInContext_withAnimationCoordinator(context: UIFocusUpdateContext, coordinator: UIFocusAnimationCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1648972-preferredfocusenvironments
    preferredFocusEnvironments(): UIFocusEnvironment;
    setPreferredFocusEnvironments(value: UIFocusEnvironment): void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/1616830-preferredfocusedview
    preferredFocusedView(): UIView;
    setPreferredFocusedView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/2887504-soundidentifierforfocusupdateinc
    soundIdentifierForFocusUpdateInContext(context: UIFocusUpdateContext):UIFocusSoundIdentifier;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/2976950-parentfocusenvironment
    parentFocusEnvironment(): UIFocusEnvironment;
    setParentFocusEnvironment(value: UIFocusEnvironment): void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/2976949-focusitemcontainer
    focusItemContainer(): UIFocusItemContainer;
    setFocusItemContainer(value: UIFocusItemContainer): void;
    // https://developer.apple.com/documentation/uikit/uifocusenvironment/3601224-focusgroupidentifier
    focusGroupIdentifier(): string | cocoascript.NSString;
    setFocusGroupIdentifier(value: string | cocoascript.NSString): void;
  }
}
declare namespace cocoascript {
  /**
   * Queries and reevaluates the currently focused item.
   * https://developer.apple.com/documentation/uikit/uifocussystem
   */
  interface UIFocusSystem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocussystem/2865788-focussystemforenvironment
    focusSystemForEnvironment(environment: UIFocusEnvironment):UIFocusSystem;
    // https://developer.apple.com/documentation/uikit/uifocussystem/2866087-focuseditem
    focusedItem(): UIFocusItem;
    setFocusedItem(value: UIFocusItem): void;
    // https://developer.apple.com/documentation/uikit/uifocussystem/2866115-requestfocusupdatetoenvironment
    requestFocusUpdateToEnvironment(environment: UIFocusEnvironment):void;
    // https://developer.apple.com/documentation/uikit/uifocussystem/2865914-updatefocusifneeded
    updateFocusIfNeeded():void;
    // https://developer.apple.com/documentation/uikit/uifocussystem/2873786-environment
    environment_containsEnvironment(environment: UIFocusEnvironment, otherEnvironment: UIFocusEnvironment):boolean;
    // https://developer.apple.com/documentation/uikit/uifocussystem/2887479-registerurl
    registerURL_forSoundIdentifier(soundFileURL: NSURL, identifier: UIFocusSoundIdentifier):void;
    //
    alloc():UIFocusSystem;
    //
    init():UIFocusSystem;
  }
}

declare const UIFocusSystem: cocoascript.UIFocusSystem;
// https://developer.apple.com/documentation/uikit/uifocusupdateanimationcoordinatorkey
declare const UIFocusUpdateAnimationCoordinatorKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uifocusupdatecontextkey
declare const UIFocusUpdateContextKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An object that provides information relevant to a specific focus update from one view to another.
   * https://developer.apple.com/documentation/uikit/uifocusupdatecontext
   */
  interface UIFocusUpdateContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusupdatecontext/1616839-previouslyfocusedview
    previouslyFocusedView(): UIView;
    setPreviouslyFocusedView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uifocusupdatecontext/1616843-nextfocusedview
    nextFocusedView(): UIView;
    setNextFocusedView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uifocusupdatecontext/1616834-focusheading
    focusHeading(): UIFocusHeading;
    setFocusHeading(value: UIFocusHeading): void;
    // https://developer.apple.com/documentation/uikit/uifocusupdatecontext/1648962-previouslyfocuseditem
    previouslyFocusedItem(): UIFocusItem;
    setPreviouslyFocusedItem(value: UIFocusItem): void;
    // https://developer.apple.com/documentation/uikit/uifocusupdatecontext/1648967-nextfocuseditem
    nextFocusedItem(): UIFocusItem;
    setNextFocusedItem(value: UIFocusItem): void;
    //
    alloc():UIFocusUpdateContext;
    //
    init():UIFocusUpdateContext;
  }
}

declare const UIFocusUpdateContext: cocoascript.UIFocusUpdateContext;
// https://developer.apple.com/documentation/uikit/uifocusupdateanimationcoordinatorkey
declare const UIFocusUpdateAnimationCoordinatorKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uifocusupdatecontextkey
declare const UIFocusUpdateContextKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An object that can become focused.
   * https://developer.apple.com/documentation/uikit/uifocusitem
   */
  interface UIFocusItem extends UIFocusEnvironment {
    // https://developer.apple.com/documentation/uikit/uifocusitem/1648965-canbecomefocused
    canBecomeFocused(): boolean;
    setCanBecomeFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uifocusitem/2976952-frame
    frame(): CGRect;
    setFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uifocusitem/2976951-didhintfocusmovement
    didHintFocusMovement(hint: UIFocusMovementHint):void;
    // https://developer.apple.com/documentation/uikit/uifocusitem/3778560-focuseffect
    focusEffect(): UIFocusEffect;
    setFocusEffect(value: UIFocusEffect): void;
    // https://developer.apple.com/documentation/uikit/uifocusitem/3778561-focusgrouppriority
    focusGroupPriority(): UIFocusGroupPriority;
    setFocusGroupPriority(value: UIFocusGroupPriority): void;
    // https://developer.apple.com/documentation/uikit/uifocusitem/3778562-istransparentfocusitem
    isTransparentFocusItem(): boolean;
    setIsTransparentFocusItem(value: boolean): void;
  }
}
declare namespace cocoascript {
  /**
   * Provides movement hint information for the focused item.
   * https://developer.apple.com/documentation/uikit/uifocusmovementhint
   */
  interface UIFocusMovementHint extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusmovementhint/3000774-movementdirection
    movementDirection(): CGVector;
    setMovementDirection(value: CGVector): void;
    // https://developer.apple.com/documentation/uikit/uifocusmovementhint/3000773-interactiontransform
    interactionTransform(): CATransform3D;
    setInteractionTransform(value: CATransform3D): void;
    // https://developer.apple.com/documentation/uikit/uifocusmovementhint/2976962-perspectivetransform
    perspectiveTransform(): CATransform3D;
    setPerspectiveTransform(value: CATransform3D): void;
    // https://developer.apple.com/documentation/uikit/uifocusmovementhint/3000775-rotation
    rotation(): CGVector;
    setRotation(value: CGVector): void;
    // https://developer.apple.com/documentation/uikit/uifocusmovementhint/3000776-translation
    translation(): CGVector;
    setTranslation(value: CGVector): void;
    //
    alloc():UIFocusMovementHint;
    //
    init():UIFocusMovementHint;
  }
}

declare const UIFocusMovementHint: cocoascript.UIFocusMovementHint;
declare namespace cocoascript {
  /**
   * The container responsible for providing geometric context to focus items within a given focus environment.
   * https://developer.apple.com/documentation/uikit/uifocusitemcontainer
   */
  interface UIFocusItemContainer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusitemcontainer/2976954-focusitemsinrect
    focusItemsInRect(rect: CGRect):UIFocusItem;
    // https://developer.apple.com/documentation/uikit/uifocusitemcontainer/2998462-coordinatespace
    coordinateSpace(): UICoordinateSpace;
    setCoordinateSpace(value: UICoordinateSpace): void;
  }
}
declare namespace cocoascript {
  /**
   * A type of focus item container that supports automatic scrolling of focusable content.
   * https://developer.apple.com/documentation/uikit/uifocusitemscrollablecontainer
   */
  interface UIFocusItemScrollableContainer extends UIFocusItemContainer {
    // https://developer.apple.com/documentation/uikit/uifocusitemscrollablecontainer/2976956-contentoffset
    contentOffset(): CGPoint;
    setContentOffset(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uifocusitemscrollablecontainer/2976957-contentsize
    contentSize(): CGSize;
    setContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uifocusitemscrollablecontainer/2998463-visiblesize
    visibleSize(): CGSize;
    setVisibleSize(value: CGSize): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifocusgrouppriority
  type UIFocusGroupPriority = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A menu element that performs its action in a selector.
   * https://developer.apple.com/documentation/uikit/uicommand
   */
  interface UICommand extends UIMenuElement {
    // https://developer.apple.com/documentation/uikit/uicommand/3340169-commandwithtitle
    commandWithTitle_image_action_propertyList(title: string | cocoascript.NSString, image: UIImage, action: SEL, propertyList: UICommand):UICommand;
    // https://developer.apple.com/documentation/uikit/uicommand/3340170-commandwithtitle
    commandWithTitle_image_action_propertyList_alternates(title: string | cocoascript.NSString, image: UIImage, action: SEL, propertyList: UICommand, alternates: UICommandAlternate):UICommand;
    // https://developer.apple.com/documentation/uikit/uicommand/3175309-initwithcoder
    initWithCoder(coder: NSCoder):UICommand;
    // https://developer.apple.com/documentation/uikit/uicommand/3175312-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3229869-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3175302-action
    action(): SEL;
    setAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3175308-discoverabilitytitle
    discoverabilityTitle(): string | cocoascript.NSString;
    setDiscoverabilityTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3335180-attributes
    attributes(): UIMenuElementAttributes;
    setAttributes(value: UIMenuElementAttributes): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3229870-state
    state(): UIMenuElementState;
    setState(value: UIMenuElementState): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3175303-alternates
    alternates(): UICommandAlternate;
    setAlternates(value: UICommandAlternate): void;
    // https://developer.apple.com/documentation/uikit/uicommand/3175310-propertylist
    propertyList(): id;
    setPropertyList(value: id): void;
    //
    alloc():UICommand;
    //
    init():UICommand;
  }
}

declare const UICommand: cocoascript.UICommand;
// https://developer.apple.com/documentation/uikit/uicommandtagshare
declare const UICommandTagShare: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An interaction object that you use to display relevant actions for your content.
   * https://developer.apple.com/documentation/uikit/uicontextmenuinteraction
   */
  interface UIContextMenuInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3295926-initwithdelegate
    initWithDelegate(delegate: UIContextMenuInteractionDelegate):UIContextMenuInteraction;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3295925-delegate
    delegate(): UIContextMenuInteractionDelegate;
    setDelegate(value: UIContextMenuInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3295927-locationinview
    locationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3601209-menuappearance
    menuAppearance(): UIContextMenuInteractionAppearance;
    setMenuAppearance(value: UIContextMenuInteractionAppearance): void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3601208-dismissmenu
    dismissMenu():void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteraction/3601210-updatevisiblemenuwithblock
    updateVisibleMenuWithBlock(block: UIMenu):void;
    //
    alloc():UIContextMenuInteraction;
    //
    init():UIContextMenuInteraction;
  }
}

declare const UIContextMenuInteraction: cocoascript.UIContextMenuInteraction;
declare namespace cocoascript {
  /**
   * The methods for providing the set of actions to perform on your content, and for customizing the preview of that content.
   * https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate
   */
  interface UIContextMenuInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3295937-contextmenuinteraction
    contextMenuInteraction_configurationForMenuAtLocation(interaction: UIContextMenuInteraction, location: CGPoint):UIContextMenuConfiguration;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3295939-contextmenuinteraction
    contextMenuInteraction_previewForHighlightingMenuWithConfiguration(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3295938-contextmenuinteraction
    contextMenuInteraction_previewForDismissingMenuWithConfiguration(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3375807-contextmenuinteraction
    contextMenuInteraction_willPerformPreviewActionForMenuWithConfiguration_animator(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionCommitAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3375805-contextmenuinteraction
    contextMenuInteraction_willDisplayMenuForConfiguration_animator(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractiondelegate/3375806-contextmenuinteraction
    contextMenuInteraction_willEndForConfiguration_animator(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
  }
}
declare namespace cocoascript {
  /**
   * An object representing a main or contextual menu system.
   * https://developer.apple.com/documentation/uikit/uimenusystem
   */
  interface UIMenuSystem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uimenusystem/3327314-mainsystem
    mainSystem(): UIMenuSystem;
    setMainSystem(value: UIMenuSystem): void;
    // https://developer.apple.com/documentation/uikit/uimenusystem/3327313-contextsystem
    contextSystem(): UIMenuSystem;
    setContextSystem(value: UIMenuSystem): void;
    // https://developer.apple.com/documentation/uikit/uimenusystem/3327315-setneedsrebuild
    setNeedsRebuild():void;
    // https://developer.apple.com/documentation/uikit/uimenusystem/3327316-setneedsrevalidate
    setNeedsRevalidate():void;
    //
    alloc():UIMenuSystem;
    //
    init():UIMenuSystem;
  }
}

declare const UIMenuSystem: cocoascript.UIMenuSystem;
declare namespace cocoascript {
  /**
   * An object representing a menu, action, or command.
   * https://developer.apple.com/documentation/uikit/uimenuelement
   */
  interface UIMenuElement extends NSObject {
    // https://developer.apple.com/documentation/uikit/uimenuelement/3261458-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimenuelement/3261457-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uimenuelement/3335208-initwithcoder
    initWithCoder(coder: NSCoder):UIMenuElement;
    // https://developer.apple.com/documentation/uikit/uimenuelement/3857606-subtitle
    subtitle(): string | cocoascript.NSString;
    setSubtitle(value: string | cocoascript.NSString): void;
    //
    alloc():UIMenuElement;
    //
    init():UIMenuElement;
  }
}

declare const UIMenuElement: cocoascript.UIMenuElement;
declare namespace cocoascript {
  /**
   * A placeholder menu element that the system replaces with the result of the block’s completion handler.
   * https://developer.apple.com/documentation/uikit/uideferredmenuelement
   */
  interface UIDeferredMenuElement extends UIMenuElement {
    // https://developer.apple.com/documentation/uikit/uideferredmenuelement/3600500-elementwithprovider
    elementWithProvider(elementProvider: UIMenuElement):UIDeferredMenuElement;
    // https://developer.apple.com/documentation/uikit/uideferredmenuelement/3857602-elementwithuncachedprovider
    elementWithUncachedProvider(elementProvider: UIMenuElement):UIDeferredMenuElement;
    //
    alloc():UIDeferredMenuElement;
    //
    init():UIDeferredMenuElement;
  }
}

declare const UIDeferredMenuElement: cocoascript.UIDeferredMenuElement;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimenuelementattributes
  type UIMenuElementAttributes = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimenuelementstate
  type UIMenuElementState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An abstract interface for responding to and handling events.
   * https://developer.apple.com/documentation/uikit/uiresponder
   */
  interface UIResponder extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiresponder/1621099-nextresponder
    nextResponder(): UIResponder;
    setNextResponder(value: UIResponder): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621145-isfirstresponder
    isFirstResponder(): boolean;
    setIsFirstResponder(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621130-canbecomefirstresponder
    canBecomeFirstResponder(): boolean;
    setCanBecomeFirstResponder(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621113-becomefirstresponder
    becomeFirstResponder():boolean;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621125-canresignfirstresponder
    canResignFirstResponder(): boolean;
    setCanResignFirstResponder(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621097-resignfirstresponder
    resignFirstResponder():boolean;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621142-touchesbegan
    touchesBegan_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621107-touchesmoved
    touchesMoved_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621084-touchesended
    touchesEnded_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621116-touchescancelled
    touchesCancelled_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621147-touchesestimatedpropertiesupdate
    touchesEstimatedPropertiesUpdated(touches: UITouch):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621120-motionbegan
    motionBegan_withEvent(motion: UIEventSubtype, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621090-motionended
    motionEnded_withEvent(motion: UIEventSubtype, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621087-motioncancelled
    motionCancelled_withEvent(motion: UIEventSubtype, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621134-pressesbegan
    pressesBegan_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621150-presseschanged
    pressesChanged_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621128-pressesended
    pressesEnded_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621148-pressescancelled
    pressesCancelled_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621118-remotecontrolreceivedwithevent
    remoteControlReceivedWithEvent(event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621092-inputview
    inputView(): UIView;
    setInputView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621117-inputviewcontroller
    inputViewController(): UIInputViewController;
    setInputViewController(value: UIInputViewController): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621119-inputaccessoryview
    inputAccessoryView(): UIView;
    setInputAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621124-inputaccessoryviewcontroller
    inputAccessoryViewController(): UIInputViewController;
    setInputAccessoryViewController(value: UIInputViewController): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621110-reloadinputviews
    reloadInputViews():void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621122-undomanager
    undoManager(): NSUndoManager;
    setUndoManager(value: NSUndoManager): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3327317-buildmenuwithbuilder
    buildMenuWithBuilder(builder: UIMenuBuilder):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3229892-validatecommand
    validateCommand(command: UICommand):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621105-canperformaction
    canPerformAction_withSender(action: SEL, sender: UIResponder):boolean;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621146-targetforaction
    targetForAction_withSender(action: SEL, sender: UIResponder):UIResponder;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621141-keycommands
    keyCommands(): UIKeyCommand;
    setKeyCommands(value: UIKeyCommand): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621133-textinputmode
    textInputMode(): UITextInputMode;
    setTextInputMode(value: UITextInputMode): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621091-textinputcontextidentifier
    textInputContextIdentifier(): string | cocoascript.NSString;
    setTextInputContextIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621138-cleartextinputcontextidentifier
    clearTextInputContextIdentifier(identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621135-inputassistantitem
    inputAssistantItem(): UITextInputAssistantItem;
    setInputAssistantItem(value: UITextInputAssistantItem): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621089-useractivity
    userActivity(): NSUserActivity;
    setUserActivity(value: NSUserActivity): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621111-restoreuseractivitystate
    restoreUserActivityState(activity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/1621095-updateuseractivitystate
    updateUserActivityState(activity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3368158-activityitemsconfiguration
    activityItemsConfiguration(): UIActivityItemsConfigurationReading;
    setActivityItemsConfiguration(value: UIActivityItemsConfigurationReading): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3327318-editinginteractionconfiguration
    editingInteractionConfiguration(): UIEditingInteractionConfiguration;
    setEditingInteractionConfiguration(value: UIEditingInteractionConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3375808-maketouchbar
    makeTouchBar():NSTouchBar;
    // https://developer.apple.com/documentation/uikit/uiresponder/3375809-touchbar
    touchBar(): NSTouchBar;
    setTouchBar(value: NSTouchBar): void;
    // https://developer.apple.com/documentation/uikit/uiresponder/3778577-capturetextfromcamera
    captureTextFromCamera(sender: UIResponder):void;
    //
    alloc():UIResponder;
    //
    init():UIResponder;
  }
}

declare const UIResponder: cocoascript.UIResponder;
// https://developer.apple.com/documentation/uikit/uikeyboardanimationcurveuserinfokey
declare const UIKeyboardAnimationCurveUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardanimationdurationuserinfokey
declare const UIKeyboardAnimationDurationUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardframebeginuserinfokey
declare const UIKeyboardFrameBeginUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardframeenduserinfokey
declare const UIKeyboardFrameEndUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardislocaluserinfokey
declare const UIKeyboardIsLocalUserInfoKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * The centralized point of control and coordination for apps running in iOS.
   * https://developer.apple.com/documentation/uikit/uiapplication
   */
  interface UIApplication extends UIResponder {
    // https://developer.apple.com/documentation/uikit/uiapplication/1622975-sharedapplication
    sharedApplication(): UIApplication;
    setSharedApplication(value: UIApplication): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622936-delegate
    delegate(): UIApplicationDelegate;
    setDelegate(value: UIApplicationDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623078-registerforremotenotifications
    registerForRemoteNotifications():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623093-unregisterforremotenotifications
    unregisterForRemoteNotifications():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623069-registeredforremotenotifications
    registeredForRemoteNotifications(): boolean;
    setRegisteredForRemoteNotifications(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623003-applicationstate
    applicationState(): UIApplicationState;
    setApplicationState(value: UIApplicationState): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197904-supportsmultiplescenes
    supportsMultipleScenes(): boolean;
    setSupportsMultipleScenes(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197899-connectedscenes
    connectedScenes(): UIScene;
    setConnectedScenes(value: UIScene): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197900-opensessions
    openSessions(): UISceneSession;
    setOpenSessions(value: UISceneSession): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197901-requestscenesessionactivation
    requestSceneSessionActivation_userActivity_options_errorHandler(sceneSession: UISceneSession, userActivity: NSUserActivity, options: UISceneActivationRequestOptions, errorHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197902-requestscenesessiondestruction
    requestSceneSessionDestruction_options_errorHandler(sceneSession: UISceneSession, options: UISceneDestructionRequestOptions, errorHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/3197903-requestscenesessionrefresh
    requestSceneSessionRefresh(sceneSession: UISceneSession):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622994-backgroundrefreshstatus
    backgroundRefreshStatus(): UIBackgroundRefreshStatus;
    setBackgroundRefreshStatus(value: UIBackgroundRefreshStatus): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623051-beginbackgroundtaskwithname
    beginBackgroundTaskWithName_expirationHandler(taskName: string | cocoascript.NSString, handler: void):UIBackgroundTaskIdentifier;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtaskwithexpiratio
    beginBackgroundTaskWithExpirationHandler(handler: void):UIBackgroundTaskIdentifier;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622970-endbackgroundtask
    endBackgroundTask(identifier: UIBackgroundTaskIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623029-backgroundtimeremaining
    backgroundTimeRemaining(): NSTimeInterval;
    setBackgroundTimeRemaining(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1648685-openurl
    openURL_options_completionHandler(url: NSURL, options: UIApplication, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622952-canopenurl
    canOpenURL(url: NSURL):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623070-idletimerdisabled
    idleTimerDisabled(): boolean;
    setIdleTimerDisabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623060-extendstaterestoration
    extendStateRestoration():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623081-completestaterestoration
    completeStateRestoration():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623097-ignoresnapshotonnextapplicationl
    ignoreSnapshotOnNextApplicationLaunch():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623027-registerobjectforstaterestoratio
    registerObjectForStateRestoration_restorationIdentifier(object: UIStateRestoring, restorationIdentifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623033-shortcutitems
    shortcutItems(): UIApplicationShortcutItem;
    setShortcutItems(value: UIApplicationShortcutItem): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622925-protecteddataavailable
    protectedDataAvailable(): boolean;
    setProtectedDataAvailable(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623126-beginreceivingremotecontrolevent
    beginReceivingRemoteControlEvents():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623057-endreceivingremotecontrolevents
    endReceivingRemoteControlEvents():void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623025-userinterfacelayoutdirection
    userInterfaceLayoutDirection(): UIUserInterfaceLayoutDirection;
    setUserInterfaceLayoutDirection(value: UIUserInterfaceLayoutDirection): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623043-sendevent
    sendEvent(event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622946-sendaction
    sendAction_to_from_forEvent(action: SEL, target: UIApplication, sender: UIApplication, event: UIEvent):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623127-applicationsupportsshaketoedit
    applicationSupportsShakeToEdit(): boolean;
    setApplicationSupportsShakeToEdit(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1622918-applicationiconbadgenumber
    applicationIconBadgeNumber(): NSInteger;
    setApplicationIconBadgeNumber(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/2806815-supportsalternateicons
    supportsAlternateIcons(): boolean;
    setSupportsAlternateIcons(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/2806808-alternateiconname
    alternateIconName(): string | cocoascript.NSString;
    setAlternateIconName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/2806818-setalternateiconname
    setAlternateIconName_completionHandler(alternateIconName: string | cocoascript.NSString, completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623104-windows
    windows(): UIWindow;
    setWindows(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623048-preferredcontentsizecategory
    preferredContentSizeCategory(): UIContentSizeCategory;
    setPreferredContentSizeCategory(value: UIContentSizeCategory): void;
    // https://developer.apple.com/documentation/uikit/uiapplication/1623091-supportedinterfaceorientationsfo
    supportedInterfaceOrientationsForWindow(window: UIWindow):UIInterfaceOrientationMask;
    //
    alloc():UIApplication;
    //
    init():UIApplication;
  }
}

declare const UIApplication: cocoascript.UIApplication;
// https://developer.apple.com/documentation/uikit/uiapplicationopensettingsurlstring
declare const UIApplicationOpenSettingsURLString: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uicontentsizecategorynewvaluekey
declare const UIContentSizeCategoryNewValueKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * The base class for concrete gesture recognizers.
   * https://developer.apple.com/documentation/uikit/uigesturerecognizer
   */
  interface UIGestureRecognizer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624211-initwithtarget
    initWithTarget_action(target: UIGestureRecognizer, action: SEL):UIGestureRecognizer;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624207-delegate
    delegate(): UIGestureRecognizerDelegate;
    setDelegate(value: UIGestureRecognizerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624230-addtarget
    addTarget_action(target: UIGestureRecognizer, action: SEL):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624226-removetarget
    removeTarget_action(target: UIGestureRecognizer, action: SEL):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624219-locationinview
    locationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624201-locationoftouch
    locationOfTouch_inView(touchIndex: NSUInteger, view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624200-numberoftouches
    numberOfTouches(): NSUInteger;
    setNumberOfTouches(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619998-state
    state(): UIGestureRecognizerState;
    setState(value: UIGestureRecognizerState): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624212-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624220-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/3538974-buttonmask
    buttonMask(): UIEventButtonMask;
    setButtonMask(value: UIEventButtonMask): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/3538975-modifierflags
    modifierFlags(): UIKeyModifierFlags;
    setModifierFlags(value: UIKeyModifierFlags): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624218-cancelstouchesinview
    cancelsTouchesInView(): boolean;
    setCancelsTouchesInView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624234-delaystouchesbegan
    delaysTouchesBegan(): boolean;
    setDelaysTouchesBegan(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624209-delaystouchesended
    delaysTouchesEnded(): boolean;
    setDelaysTouchesEnded(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624203-requiregesturerecognizertofail
    requireGestureRecognizerToFail(otherGestureRecognizer: UIGestureRecognizer):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624231-allowedpresstypes
    allowedPressTypes(): NSNumber;
    setAllowedPressTypes(value: NSNumber): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1624223-allowedtouchtypes
    allowedTouchTypes(): NSNumber;
    setAllowedTouchTypes(value: NSNumber): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1649116-requiresexclusivetouchtype
    requiresExclusiveTouchType(): boolean;
    setRequiresExclusiveTouchType(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620009-touchesbegan
    touchesBegan_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619996-touchesmoved
    touchesMoved_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620005-touchesended
    touchesEnded_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620002-touchescancelled
    touchesCancelled_withEvent(touches: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619997-touchesestimatedpropertiesupdate
    touchesEstimatedPropertiesUpdated(touches: UITouch):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620004-reset
    reset():void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620010-ignoretouch
    ignoreTouch_forEvent(touch: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620003-canbepreventedbygesturerecognize
    canBePreventedByGestureRecognizer(preventingGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620008-canpreventgesturerecognizer
    canPreventGestureRecognizer(preventedGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620006-shouldrequirefailureofgesturerec
    shouldRequireFailureOfGestureRecognizer(otherGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619994-shouldberequiredtofailbygesturer
    shouldBeRequiredToFailByGestureRecognizer(otherGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620007-ignorepress
    ignorePress_forEvent(button: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619995-pressesbegan
    pressesBegan_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620001-presseschanged
    pressesChanged_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620000-pressesended
    pressesEnded_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619999-pressescancelled
    pressesCancelled_withEvent(presses: UIPress, event: UIPressesEvent):void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/2890966-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/3182937-init
    init():UIGestureRecognizer;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/3043559-initwithcoder
    initWithCoder(coder: NSCoder):UIGestureRecognizer;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizer/3538977-shouldreceiveevent
    shouldReceiveEvent(event: UIEvent):boolean;
    //
    alloc():UIGestureRecognizer;
    //
    init():UIGestureRecognizer;
  }
}

declare const UIGestureRecognizer: cocoascript.UIGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets long-press gestures.
   * https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer
   */
  interface UILongPressGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer/1616423-minimumpressduration
    minimumPressDuration(): NSTimeInterval;
    setMinimumPressDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer/1616425-numberoftouchesrequired
    numberOfTouchesRequired(): NSUInteger;
    setNumberOfTouchesRequired(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer/1616424-numberoftapsrequired
    numberOfTapsRequired(): NSUInteger;
    setNumberOfTapsRequired(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer/1616427-allowablemovement
    allowableMovement(): CGFloat;
    setAllowableMovement(value: CGFloat): void;
    //
    alloc():UILongPressGestureRecognizer;
    //
    init():UILongPressGestureRecognizer;
  }
}

declare const UILongPressGestureRecognizer: cocoascript.UILongPressGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets panning gestures.
   * https://developer.apple.com/documentation/uikit/uipangesturerecognizer
   */
  interface UIPanGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/1621208-maximumnumberoftouches
    maximumNumberOfTouches(): NSUInteger;
    setMaximumNumberOfTouches(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/1621210-minimumnumberoftouches
    minimumNumberOfTouches(): NSUInteger;
    setMinimumNumberOfTouches(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/1621207-translationinview
    translationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/1621206-settranslation
    setTranslation_inView(translation: CGPoint, view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/1621209-velocityinview
    velocityInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uipangesturerecognizer/3538978-allowedscrolltypesmask
    allowedScrollTypesMask(): UIScrollTypeMask;
    setAllowedScrollTypesMask(value: UIScrollTypeMask): void;
    //
    alloc():UIPanGestureRecognizer;
    //
    init():UIPanGestureRecognizer;
  }
}

declare const UIPanGestureRecognizer: cocoascript.UIPanGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets pinching gestures involving two touches.
   * https://developer.apple.com/documentation/uikit/uipinchgesturerecognizer
   */
  interface UIPinchGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uipinchgesturerecognizer/1622235-scale
    scale(): CGFloat;
    setScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipinchgesturerecognizer/1622233-velocity
    velocity(): CGFloat;
    setVelocity(value: CGFloat): void;
    //
    alloc():UIPinchGestureRecognizer;
    //
    init():UIPinchGestureRecognizer;
  }
}

declare const UIPinchGestureRecognizer: cocoascript.UIPinchGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets rotation gestures involving two touches.
   * https://developer.apple.com/documentation/uikit/uirotationgesturerecognizer
   */
  interface UIRotationGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uirotationgesturerecognizer/1624337-rotation
    rotation(): CGFloat;
    setRotation(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uirotationgesturerecognizer/1624335-velocity
    velocity(): CGFloat;
    setVelocity(value: CGFloat): void;
    //
    alloc():UIRotationGestureRecognizer;
    //
    init():UIRotationGestureRecognizer;
  }
}

declare const UIRotationGestureRecognizer: cocoascript.UIRotationGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets panning gestures that start near an edge of the screen.
   * https://developer.apple.com/documentation/uikit/uiscreenedgepangesturerecognizer
   */
  interface UIScreenEdgePanGestureRecognizer extends UIPanGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uiscreenedgepangesturerecognizer/1614142-edges
    edges(): UIRectEdge;
    setEdges(value: UIRectEdge): void;
    //
    alloc():UIScreenEdgePanGestureRecognizer;
    //
    init():UIScreenEdgePanGestureRecognizer;
  }
}

declare const UIScreenEdgePanGestureRecognizer: cocoascript.UIScreenEdgePanGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets swiping gestures in one or more directions.
   * https://developer.apple.com/documentation/uikit/uiswipegesturerecognizer
   */
  interface UISwipeGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uiswipegesturerecognizer/1619178-direction
    direction(): UISwipeGestureRecognizerDirection;
    setDirection(value: UISwipeGestureRecognizerDirection): void;
    // https://developer.apple.com/documentation/uikit/uiswipegesturerecognizer/1619182-numberoftouchesrequired
    numberOfTouchesRequired(): NSUInteger;
    setNumberOfTouchesRequired(value: NSUInteger): void;
    //
    alloc():UISwipeGestureRecognizer;
    //
    init():UISwipeGestureRecognizer;
  }
}

declare const UISwipeGestureRecognizer: cocoascript.UISwipeGestureRecognizer;
declare namespace cocoascript {
  /**
   * A discrete gesture recognizer that interprets single or multiple taps.
   * https://developer.apple.com/documentation/uikit/uitapgesturerecognizer
   */
  interface UITapGestureRecognizer extends UIGestureRecognizer {
    // https://developer.apple.com/documentation/uikit/uitapgesturerecognizer/3539032-buttonmaskrequired
    buttonMaskRequired(): UIEventButtonMask;
    setButtonMaskRequired(value: UIEventButtonMask): void;
    // https://developer.apple.com/documentation/uikit/uitapgesturerecognizer/1623581-numberoftapsrequired
    numberOfTapsRequired(): NSUInteger;
    setNumberOfTapsRequired(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uitapgesturerecognizer/1623580-numberoftouchesrequired
    numberOfTouchesRequired(): NSUInteger;
    setNumberOfTouchesRequired(value: NSUInteger): void;
    //
    alloc():UITapGestureRecognizer;
    //
    init():UITapGestureRecognizer;
  }
}

declare const UITapGestureRecognizer: cocoascript.UITapGestureRecognizer;
declare namespace cocoascript {
  /**
   * An object that stores color data and sometimes opacity.
   * https://developer.apple.com/documentation/uikit/uicolor
   */
  interface UIColor extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicolor/1621928-set
    set():void;
    // https://developer.apple.com/documentation/uikit/uicolor/1621926-setfill
    setFill():void;
    // https://developer.apple.com/documentation/uikit/uicolor/1621948-setstroke
    setStroke():void;
    // https://developer.apple.com/documentation/uikit/uicolor/1621954-cgcolor
    CGColor(): CGColorRef;
    setCGColor(value: CGColorRef): void;
    // https://developer.apple.com/documentation/uikit/uicolor/1621943-cgcolor
    CGColor():CGColorRef;
    // https://developer.apple.com/documentation/uikit/uicolor/1621951-cicolor
    CIColor(): CIColor;
    setCIColor(value: CIColor): void;
    // https://developer.apple.com/documentation/uikit/uicolor/1621949-gethue
    getHue_saturation_brightness_alpha(hue: CGFloat, saturation: CGFloat, brightness: CGFloat, alpha: CGFloat):boolean;
    // https://developer.apple.com/documentation/uikit/uicolor/1621919-getred
    getRed_green_blue_alpha(red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat):boolean;
    // https://developer.apple.com/documentation/uikit/uicolor/1621927-getwhite
    getWhite_alpha(white: CGFloat, alpha: CGFloat):boolean;
    // https://developer.apple.com/documentation/uikit/uicolor/3600314-accessibilityname
    accessibilityName(): string | cocoascript.NSString;
    setAccessibilityName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicolor/3238042-resolvedcolorwithtraitcollection
    resolvedColorWithTraitCollection(traitCollection: UITraitCollection):UIColor;
    // https://developer.apple.com/documentation/uikit/uicolor/3852740-systemcyancolor
    systemCyanColor(): UIColor;
    setSystemCyanColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicolor/3852741-systemmintcolor
    systemMintColor(): UIColor;
    setSystemMintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicolor/3750859-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    //
    alloc():UIColor;
    //
    init():UIColor;
  }
}

declare const UIColor: cocoascript.UIColor;
declare namespace cocoascript {
  /**
   * A view that displays one or more lines of informational text.
   * https://developer.apple.com/documentation/uikit/uilabel
   */
  interface UILabel extends UIView {
    // https://developer.apple.com/documentation/uikit/uilabel/1620538-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620542-attributedtext
    attributedText(): NSAttributedString;
    setAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620532-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620531-textcolor
    textColor(): UIColor;
    setTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620541-textalignment
    textAlignment(): NSTextAlignment;
    setTextAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620525-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/uilabel/3667730-linebreakstrategy
    lineBreakStrategy(): NSLineBreakStrategy;
    setLineBreakStrategy(value: NSLineBreakStrategy): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620530-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/2967087-enablesmarqueewhenancestorfocuse
    enablesMarqueeWhenAncestorFocused(): boolean;
    setEnablesMarqueeWhenAncestorFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/3750862-showsexpansiontextwhentruncated
    showsExpansionTextWhenTruncated(): boolean;
    setShowsExpansionTextWhenTruncated(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620546-adjustsfontsizetofitwidth
    adjustsFontSizeToFitWidth(): boolean;
    setAdjustsFontSizeToFitWidth(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620533-allowsdefaulttighteningfortrunca
    allowsDefaultTighteningForTruncation(): boolean;
    setAllowsDefaultTighteningForTruncation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620524-baselineadjustment
    baselineAdjustment(): UIBaselineAdjustment;
    setBaselineAdjustment(value: UIBaselineAdjustment): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620544-minimumscalefactor
    minimumScaleFactor(): CGFloat;
    setMinimumScaleFactor(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620539-numberoflines
    numberOfLines(): NSInteger;
    setNumberOfLines(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620535-adjustsletterspacingtofitwidth
    adjustsLetterSpacingToFitWidth(): boolean;
    setAdjustsLetterSpacingToFitWidth(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620529-minimumfontsize
    minimumFontSize(): CGFloat;
    setMinimumFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620540-highlightedtextcolor
    highlightedTextColor(): UIColor;
    setHighlightedTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620526-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620536-shadowcolor
    shadowColor(): UIColor;
    setShadowColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620528-shadowoffset
    shadowOffset(): CGSize;
    setShadowOffset(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620545-textrectforbounds
    textRectForBounds_limitedToNumberOfLines(bounds: CGRect, numberOfLines: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uilabel/1620527-drawtextinrect
    drawTextInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620534-preferredmaxlayoutwidth
    preferredMaxLayoutWidth(): CGFloat;
    setPreferredMaxLayoutWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilabel/1620543-userinteractionenabled
    userInteractionEnabled(): boolean;
    setUserInteractionEnabled(value: boolean): void;
    //
    alloc():UILabel;
    //
    init():UILabel;
  }
}

declare const UILabel: cocoascript.UILabel;
declare namespace cocoascript {
  /**
   * The base class for controls, which are visual elements that convey a specific action or intention in response to user interactions.
   * https://developer.apple.com/documentation/uikit/uicontrol
   */
  interface UIControl extends UIView {
    // https://developer.apple.com/documentation/uikit/uicontrol/1618245-state
    state(): UIControlState;
    setState(value: UIControlState): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618217-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618203-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618231-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618249-contentverticalalignment
    contentVerticalAlignment(): UIControlContentVerticalAlignment;
    setContentVerticalAlignment(value: UIControlContentVerticalAlignment): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618213-contenthorizontalalignment
    contentHorizontalAlignment(): UIControlContentHorizontalAlignment;
    setContentHorizontalAlignment(value: UIControlContentHorizontalAlignment): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/2866070-effectivecontenthorizontalalignm
    effectiveContentHorizontalAlignment(): UIControlContentHorizontalAlignment;
    setEffectiveContentHorizontalAlignment(value: UIControlContentHorizontalAlignment): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618259-addtarget
    addTarget_action_forControlEvents(target: UIControl, action: SEL, controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618248-removetarget
    removeTarget_action_forControlEvents(target: UIControl, action: SEL, controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618251-actionsfortarget
    actionsForTarget_forControlEvent(target: UIControl, controlEvent: UIControlEvents):NSString;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618225-allcontrolevents
    allControlEvents(): UIControlEvents;
    setAllControlEvents(value: UIControlEvents): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618207-alltargets
    allTargets(): NSSet;
    setAllTargets(value: NSSet): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618237-sendaction
    sendAction_to_forEvent(action: SEL, target: UIControl, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618211-sendactionsforcontrolevents
    sendActionsForControlEvents(controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618227-begintrackingwithtouch
    beginTrackingWithTouch_withEvent(touch: UITouch, event: UIEvent):boolean;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618216-continuetrackingwithtouch
    continueTrackingWithTouch_withEvent(touch: UITouch, event: UIEvent):boolean;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618234-endtrackingwithtouch
    endTrackingWithTouch_withEvent(touch: UITouch, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618219-canceltrackingwithevent
    cancelTrackingWithEvent(event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618210-tracking
    tracking(): boolean;
    setTracking(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/1618229-touchinside
    touchInside(): boolean;
    setTouchInside(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600490-addaction
    addAction_forControlEvents(action: UIAction, controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601216-contextmenuinteraction
    contextMenuInteraction_configurationForMenuAtLocation(interaction: UIContextMenuInteraction, location: CGPoint):UIContextMenuConfiguration;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601217-contextmenuinteraction
    contextMenuInteraction_previewForDismissingMenuWithConfiguration(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601218-contextmenuinteraction
    contextMenuInteraction_previewForHighlightingMenuWithConfiguration(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601219-contextmenuinteraction
    contextMenuInteraction_willDisplayMenuForConfiguration_animator(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601220-contextmenuinteraction
    contextMenuInteraction_willEndForConfiguration_animator(interaction: UIContextMenuInteraction, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3656349-menuattachmentpointforconfigurat
    menuAttachmentPointForConfiguration(configuration: UIContextMenuConfiguration):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600495-removeaction
    removeAction_forControlEvents(action: UIAction, controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600496-removeactionforidentifier
    removeActionForIdentifier_forControlEvents(actionIdentifier: UIActionIdentifier, controlEvents: UIControlEvents):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600497-sendaction
    sendAction(action: UIAction):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600491-enumerateeventhandlers
    enumerateEventHandlers(iterator: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601215-contextmenuinteraction
    contextMenuInteraction(): UIContextMenuInteraction;
    setContextMenuInteraction(value: UIContextMenuInteraction): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601222-contextmenuinteractionenabled
    contextMenuInteractionEnabled(): boolean;
    setContextMenuInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3601223-showsmenuasprimaryaction
    showsMenuAsPrimaryAction(): boolean;
    setShowsMenuAsPrimaryAction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3750832-tooltip
    toolTip(): string | cocoascript.NSString;
    setToolTip(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3750833-tooltipinteraction
    toolTipInteraction(): UIToolTipInteraction;
    setToolTipInteraction(value: UIToolTipInteraction): void;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600492-initwithcoder
    initWithCoder(coder: NSCoder):UIControl;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600493-initwithframe
    initWithFrame(frame: CGRect):UIControl;
    // https://developer.apple.com/documentation/uikit/uicontrol/3600494-initwithframe
    initWithFrame_primaryAction(frame: CGRect, primaryAction: UIAction):UIControl;
    //
    alloc():UIControl;
    //
    init():UIControl;
  }
}

declare const UIControl: cocoascript.UIControl;
declare namespace cocoascript {
  /**
   * An object that a tooltip interaction delegate uses to describe the tooltip settings.
   * https://developer.apple.com/documentation/uikit/uitooltipconfiguration
   */
  interface UIToolTipConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitooltipconfiguration/3858109-configurationwithtooltip
    configurationWithToolTip(toolTip: string | cocoascript.NSString):UIToolTipConfiguration;
    // https://developer.apple.com/documentation/uikit/uitooltipconfiguration/3858110-configurationwithtooltip
    configurationWithToolTip_inRect(toolTip: string | cocoascript.NSString, sourceRect: CGRect):UIToolTipConfiguration;
    // https://developer.apple.com/documentation/uikit/uitooltipconfiguration/3858112-tooltip
    toolTip(): string | cocoascript.NSString;
    setToolTip(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitooltipconfiguration/3858111-sourcerect
    sourceRect(): CGRect;
    setSourceRect(value: CGRect): void;
    //
    alloc():UIToolTipConfiguration;
    //
    init():UIToolTipConfiguration;
  }
}

declare const UIToolTipConfiguration: cocoascript.UIToolTipConfiguration;
declare namespace cocoascript {
  /**
   * The protocol that an interaction implements to access the view that owns it.
   * https://developer.apple.com/documentation/uikit/uiinteraction
   */
  interface UIInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiinteraction/2890990-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiinteraction/2891009-didmovetoview
    didMoveToView(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiinteraction/2891039-willmovetoview
    willMoveToView(view: UIView):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that manages a view hierarchy for your UIKit app.
   * https://developer.apple.com/documentation/uikit/uiviewcontroller
   */
  interface UIViewController extends UIResponder {
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621359-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621403-initwithcoder
    initWithCoder(coder: NSCoder):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621399-storyboard
    storyboard(): UIStoryboard;
    setStoryboard(value: UIStoryboard): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621487-nibname
    nibName(): string | cocoascript.NSString;
    setNibName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621489-nibbundle
    nibBundle(): NSBundle;
    setNibBundle(value: NSBundle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621460-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621360-viewifloaded
    viewIfLoaded(): UIView;
    setViewIfLoaded(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2097563-viewloaded
    viewLoaded(): boolean;
    setViewLoaded(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621454-loadview
    loadView():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621495-viewdidload
    viewDidLoad():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621446-loadviewifneeded
    loadViewIfNeeded():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621364-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621476-preferredcontentsize
    preferredContentSize(): CGSize;
    setPreferredContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621510-viewwillappear
    viewWillAppear(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621423-viewdidappear
    viewDidAppear(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621485-viewwilldisappear
    viewWillDisappear(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621477-viewdiddisappear
    viewDidDisappear(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2097562-beingdismissed
    beingDismissed(): boolean;
    setBeingDismissed(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2097564-beingpresented
    beingPresented(): boolean;
    setBeingPresented(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2097565-movingfromparentviewcontroller
    movingFromParentViewController(): boolean;
    setMovingFromParentViewController(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2097561-movingtoparentviewcontroller
    movingToParentViewController(): boolean;
    setMovingToParentViewController(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2902284-additionalsafeareainsets
    additionalSafeAreaInsets(): UIEdgeInsets;
    setAdditionalSafeAreaInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2891116-viewsafeareainsetsdidchange
    viewSafeAreaInsetsDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2891115-viewrespectssystemminimumlayoutm
    viewRespectsSystemMinimumLayoutMargins(): boolean;
    setViewRespectsSystemMinimumLayoutMargins(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2865908-systemminimumlayoutmargins
    systemMinimumLayoutMargins(): NSDirectionalEdgeInsets;
    setSystemMinimumLayoutMargins(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2891114-viewlayoutmarginsdidchange
    viewLayoutMarginsDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621515-edgesforextendedlayout
    edgesForExtendedLayout(): UIRectEdge;
    setEdgesForExtendedLayout(value: UIRectEdge): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621404-extendedlayoutincludesopaquebars
    extendedLayoutIncludesOpaqueBars(): boolean;
    setExtendedLayoutIncludesOpaqueBars(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621437-viewwilllayoutsubviews
    viewWillLayoutSubviews():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621398-viewdidlayoutsubviews
    viewDidLayoutSubviews():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621379-updateviewconstraints
    updateViewConstraints():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621419-shouldautorotate
    shouldAutorotate(): boolean;
    setShouldAutorotate(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621435-supportedinterfaceorientations
    supportedInterfaceOrientations(): UIInterfaceOrientationMask;
    setSupportedInterfaceOrientations(value: UIInterfaceOrientationMask): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621438-preferredinterfaceorientationfor
    preferredInterfaceOrientationForPresentation(): UIInterfaceOrientation;
    setPreferredInterfaceOrientationForPresentation(value: UIInterfaceOrientation): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621400-attemptrotationtodeviceorientati
    attemptRotationToDeviceOrientation():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621502-shouldperformseguewithidentifier
    shouldPerformSegueWithIdentifier_sender(identifier: string | cocoascript.NSString, sender: UIViewController):boolean;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue
    prepareForSegue_sender(segue: UIStoryboardSegue, sender: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621413-performseguewithidentifier
    performSegueWithIdentifier_sender(identifier: string | cocoascript.NSString, sender: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621371-allowedchildviewcontrollersforun
    allowedChildViewControllersForUnwindingFromSource(source: UIStoryboardUnwindSegueSource):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621384-childviewcontrollercontainingseg
    childViewControllerContainingSegueSource(source: UIStoryboardUnwindSegueSource):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3089101-canperformunwindsegueaction
    canPerformUnwindSegueAction_fromViewController_sender(action: SEL, fromViewController: UIViewController, sender: UIViewController):boolean;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621473-unwindforsegue
    unwindForSegue_towardsViewController(unwindSegue: UIStoryboardSegue, subsequentVC: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621377-showviewcontroller
    showViewController_sender(vc: UIViewController, sender: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621432-showdetailviewcontroller
    showDetailViewController_sender(vc: UIViewController, sender: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621380-presentviewcontroller
    presentViewController_animated_completion(viewControllerToPresent: UIViewController, flag: boolean, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621505-dismissviewcontrolleranimated
    dismissViewControllerAnimated_completion(flag: boolean, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle
    modalPresentationStyle(): UIModalPresentationStyle;
    setModalPresentationStyle(value: UIModalPresentationStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621388-modaltransitionstyle
    modalTransitionStyle(): UIModalTransitionStyle;
    setModalTransitionStyle(value: UIModalTransitionStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3229894-modalinpresentation
    modalInPresentation(): boolean;
    setModalInPresentation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621456-definespresentationcontext
    definesPresentationContext(): boolean;
    setDefinesPresentationContext(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621356-providespresentationcontexttrans
    providesPresentationContextTransitionStyle(): boolean;
    setProvidesPresentationContextTransitionStyle(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621385-disablesautomatickeyboarddismiss
    disablesAutomaticKeyboardDismissal(): boolean;
    setDisablesAutomaticKeyboardDismissal(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621421-transitioningdelegate
    transitioningDelegate(): UIViewControllerTransitioningDelegate;
    setTransitioningDelegate(value: UIViewControllerTransitioningDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1619294-transitioncoordinator
    transitionCoordinator(): UIViewControllerTransitionCoordinator;
    setTransitionCoordinator(value: UIViewControllerTransitionCoordinator): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621415-targetviewcontrollerforaction
    targetViewControllerForAction_sender(action: SEL, sender: UIViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621426-presentationcontroller
    presentationController(): UIPresentationController;
    setPresentationController(value: UIPresentationController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621428-popoverpresentationcontroller
    popoverPresentationController(): UIPopoverPresentationController;
    setPopoverPresentationController(value: UIPopoverPresentationController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1829440-restoresfocusaftertransition
    restoresFocusAfterTransition(): boolean;
    setRestoresFocusAfterTransition(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1623193-collapsesecondaryviewcontroller
    collapseSecondaryViewController_forSplitViewController(secondaryViewController: UIViewController, splitViewController: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1623191-separatesecondaryviewcontrollerf
    separateSecondaryViewControllerForSplitViewController(splitViewController: UISplitViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3238087-overrideuserinterfacestyle
    overrideUserInterfaceStyle(): UIUserInterfaceStyle;
    setOverrideUserInterfaceStyle(value: UIUserInterfaceStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2909093-preferreduserinterfacestyle
    preferredUserInterfaceStyle(): UIUserInterfaceStyle;
    setPreferredUserInterfaceStyle(value: UIUserInterfaceStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2909095-childviewcontrollerforuserinterf
    childViewControllerForUserInterfaceStyle(): UIViewController;
    setChildViewControllerForUserInterfaceStyle(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2909094-setneedsuserinterfaceappearanceu
    setNeedsUserInterfaceAppearanceUpdate():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621452-childviewcontrollers
    childViewControllers(): UIViewController;
    setChildViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621394-addchildviewcontroller
    addChildViewController(childController: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621425-removefromparentviewcontroller
    removeFromParentViewController():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621363-transitionfromviewcontroller
    transitionFromViewController_toViewController_duration_options_animations_completion(fromViewController: UIViewController, toViewController: UIViewController, duration: NSTimeInterval, options: UIViewAnimationOptions, animations: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621389-shouldautomaticallyforwardappear
    shouldAutomaticallyForwardAppearanceMethods(): boolean;
    setShouldAutomaticallyForwardAppearanceMethods(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621387-beginappearancetransition
    beginAppearanceTransition_animated(isAppearing: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621503-endappearancetransition
    endAppearanceTransition():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621406-setoverridetraitcollection
    setOverrideTraitCollection_forChildViewController(collection: UITraitCollection, childViewController: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621486-overridetraitcollectionforchildv
    overrideTraitCollectionForChildViewController(childViewController: UIViewController):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621381-willmovetoparentviewcontroller
    willMoveToParentViewController(parent: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621405-didmovetoparentviewcontroller
    didMoveToParentViewController(parent: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621430-presentingviewcontroller
    presentingViewController(): UIViewController;
    setPresentingViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621407-presentedviewcontroller
    presentedViewController(): UIViewController;
    setPresentedViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621362-parentviewcontroller
    parentViewController(): UIViewController;
    setParentViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1623187-splitviewcontroller
    splitViewController(): UISplitViewController;
    setSplitViewController(value: UISplitViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621860-navigationcontroller
    navigationController(): UINavigationController;
    setNavigationController(value: UINavigationController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621169-tabbarcontroller
    tabBarController(): UITabBarController;
    setTabBarController(value: UITabBarController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621851-navigationitem
    navigationItem(): UINavigationItem;
    setNavigationItem(value: UINavigationItem): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621863-hidesbottombarwhenpushed
    hidesBottomBarWhenPushed(): boolean;
    setHidesBottomBarWhenPushed(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621874-settoolbaritems
    setToolbarItems_animated(toolbarItems: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621867-toolbaritems
    toolbarItems(): UIBarButtonItem;
    setToolbarItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621175-tabbaritem
    tabBarItem(): UITabBarItem;
    setTabBarItem(value: UITabBarItem): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3152928-tabbarobservedscrollview
    tabBarObservedScrollView(): UIScrollView;
    setTabBarObservedScrollView(value: UIScrollView): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621411-extensioncontext
    extensionContext(): NSExtensionContext;
    setExtensionContext(value: NSExtensionContext): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887512-preferredscreenedgesdeferringsys
    preferredScreenEdgesDeferringSystemGestures(): UIRectEdge;
    setPreferredScreenEdgesDeferringSystemGestures(value: UIRectEdge): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887511-childviewcontrollerforscreenedge
    childViewControllerForScreenEdgesDeferringSystemGestures(): UIViewController;
    setChildViewControllerForScreenEdgesDeferringSystemGestures(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887507-setneedsupdateofscreenedgesdefer
    setNeedsUpdateOfScreenEdgesDeferringSystemGestures():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887510-prefershomeindicatorautohidden
    prefersHomeIndicatorAutoHidden(): boolean;
    setPrefersHomeIndicatorAutoHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887508-childviewcontrollerforhomeindica
    childViewControllerForHomeIndicatorAutoHidden(): UIViewController;
    setChildViewControllerForHomeIndicatorAutoHidden(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/2887509-setneedsupdateofhomeindicatoraut
    setNeedsUpdateOfHomeIndicatorAutoHidden():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3601235-preferspointerlocked
    prefersPointerLocked(): boolean;
    setPrefersPointerLocked(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3601236-setneedsupdateofpreferspointerlo
    setNeedsUpdateOfPrefersPointerLocked():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3601234-childviewcontrollerforpointerloc
    childViewControllerForPointerLock(): UIViewController;
    setChildViewControllerForPointerLock(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621451-childviewcontrollerforstatusbarh
    childViewControllerForStatusBarHidden(): UIViewController;
    setChildViewControllerForStatusBarHidden(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621433-childviewcontrollerforstatusbars
    childViewControllerForStatusBarStyle(): UIViewController;
    setChildViewControllerForStatusBarStyle(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621416-preferredstatusbarstyle
    preferredStatusBarStyle(): UIStatusBarStyle;
    setPreferredStatusBarStyle(value: UIStatusBarStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621440-prefersstatusbarhidden
    prefersStatusBarHidden(): boolean;
    setPrefersStatusBarHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621453-modalpresentationcapturesstatusb
    modalPresentationCapturesStatusBarAppearance(): boolean;
    setModalPresentationCapturesStatusBarAppearance(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621434-preferredstatusbarupdateanimatio
    preferredStatusBarUpdateAnimation(): UIStatusBarAnimation;
    setPreferredStatusBarUpdateAnimation(value: UIStatusBarAnimation): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621354-setneedsstatusbarappearanceupdat
    setNeedsStatusBarAppearanceUpdate():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3375829-childviewcontrollerfortouchbar
    childViewControllerForTouchBar(): UIViewController;
    setChildViewControllerForTouchBar(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3375830-setneedstouchbarupdate
    setNeedsTouchBarUpdate():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3368164-performsactionswhilepresentingmo
    performsActionsWhilePresentingModally(): boolean;
    setPerformsActionsWhilePresentingModally(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621439-addkeycommand
    addKeyCommand(keyCommand: UIKeyCommand):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621410-removekeycommand
    removeKeyCommand(keyCommand: UIKeyCommand):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621498-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621378-setediting
    setEditing_animated(editing: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621471-editbuttonitem
    editButtonItem(): UIBarButtonItem;
    setEditButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621409-didreceivememorywarning
    didReceiveMemoryWarning():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621499-restorationidentifier
    restorationIdentifier(): string | cocoascript.NSString;
    setRestorationIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621472-restorationclass
    restorationClass(): UIViewControllerRestoration;
    setRestorationClass(value: UIViewControllerRestoration): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621461-encoderestorablestatewithcoder
    encodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621429-decoderestorablestatewithcoder
    decodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/1621482-applicationfinishedrestoringstat
    applicationFinishedRestoringState():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3795605-focusgroupidentifier
    focusGroupIdentifier(): string | cocoascript.NSString;
    setFocusGroupIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3850571-sheetpresentationcontroller
    sheetPresentationController(): UISheetPresentationController;
    setSheetPresentationController(value: UISheetPresentationController): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3750929-contentscrollviewforedge
    contentScrollViewForEdge(edge: NSDirectionalRectEdge):UIScrollView;
    // https://developer.apple.com/documentation/uikit/uiviewcontroller/3750930-setcontentscrollview
    setContentScrollView_forEdge(scrollView: UIScrollView, edge: NSDirectionalRectEdge):void;
    //
    alloc():UIViewController;
    //
    init():UIViewController;
  }
}

declare const UIViewController: cocoascript.UIViewController;
declare namespace cocoascript {
  /**
   * A set of methods that makes the iOS interface environment available to your app.
   * https://developer.apple.com/documentation/uikit/uitraitenvironment
   */
  interface UITraitEnvironment extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitraitenvironment/1623514-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uitraitenvironment/1623516-traitcollectiondidchange
    traitCollectionDidChange(previousTraitCollection: UITraitCollection):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods to manage shared behaviors for your app.
   * https://developer.apple.com/documentation/uikit/uiapplicationdelegate
   */
  interface UIApplicationDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623032-application
    application_willFinishLaunchingWithOptions(application: UIApplication, launchOptions: UIApplicationDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622921-application
    application_didFinishLaunchingWithOptions(application: UIApplication, launchOptions: UIApplicationDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3197905-application
    application_configurationForConnectingSceneSession_options(application: UIApplication, connectingSceneSession: UISceneSession, options: UISceneConnectionOptions):UISceneConfiguration;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3197906-application
    application_didDiscardSceneSessions(application: UIApplication, sceneSessions: UISceneSession):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622956-applicationdidbecomeactive
    applicationDidBecomeActive(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622950-applicationwillresignactive
    applicationWillResignActive(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622997-applicationdidenterbackground
    applicationDidEnterBackground(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623076-applicationwillenterforeground
    applicationWillEnterForeground(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623111-applicationwillterminate
    applicationWillTerminate(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom
    applicationProtectedDataDidBecomeAvailable(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623019-applicationprotecteddatawillbeco
    applicationProtectedDataWillBecomeUnavailable(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623063-applicationdidreceivememorywarni
    applicationDidReceiveMemoryWarning(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622992-applicationsignificanttimechange
    applicationSignificantTimeChange(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3395862-application
    application_shouldSaveSecureApplicationState(application: UIApplication, coder: NSCoder):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3395861-application
    application_shouldRestoreSecureApplicationState(application: UIApplication, coder: NSCoder):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623062-application
    application_viewControllerWithRestorationIdentifierPath_coder(application: UIApplication, identifierComponents: string | cocoascript.NSString, coder: NSCoder):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623099-application
    application_willEncodeRestorableStateWithCoder(application: UIApplication, coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623006-application
    application_didDecodeRestorableStateWithCoder(application: UIApplication, coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622941-application
    application_handleEventsForBackgroundURLSession_completionHandler(application: UIApplication, identifier: string | cocoascript.NSString, completionHandler: void):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622958-application
    application_didRegisterForRemoteNotificationsWithDeviceToken(application: UIApplication, deviceToken: NSData):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622962-application
    application_didFailToRegisterForRemoteNotificationsWithError(application: UIApplication, error: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623013-application
    application_didReceiveRemoteNotification_fetchCompletionHandler(application: UIApplication, userInfo: NSDictionary, completionHandler: UIBackgroundFetchResult):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622919-application
    application_willContinueUserActivityWithType(application: UIApplication, userActivityType: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623072-application
    application_continueUserActivity_restorationHandler(application: UIApplication, userActivity: NSUserActivity, restorationHandler: UIUserActivityRestoring):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622963-application
    application_didUpdateUserActivity(application: UIApplication, userActivity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622927-application
    application_didFailToContinueUserActivityWithType_error(application: UIApplication, userActivityType: string | cocoascript.NSString, error: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622935-application
    application_performActionForShortcutItem_completionHandler(application: UIApplication, shortcutItem: UIApplicationShortcutItem, completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623041-application
    application_handleWatchKitExtensionRequest_reply(application: UIApplication, userInfo: NSDictionary, reply: NSDictionary):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622998-applicationshouldrequesthealthau
    applicationShouldRequestHealthAuthorization(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623112-application
    application_openURL_options(app: UIApplication, url: NSURL, options: UIApplicationDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623122-application
    application_shouldAllowExtensionPointIdentifier(application: UIApplication, extensionPointIdentifier: UIApplicationExtensionPointIdentifier):boolean;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3548063-application
    application_handlerForIntent(application: UIApplication, intent: INIntent):UIApplicationDelegate;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/2206721-application
    application_userDidAcceptCloudKitShareWithMetadata(application: UIApplication, cloudKitShareMetadata: CKShareMetadata):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623107-application
    application_supportedInterfaceOrientationsForWindow(application: UIApplication, window: UIWindow):UIInterfaceOrientationMask;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623056-window
    window(): UIWindow;
    setWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623053-applicationdidfinishlaunching
    applicationDidFinishLaunching(application: UIApplication):void;
    // https://developer.apple.com/documentation/uikit/uiapplicationdelegate/3783574-applicationshouldautomaticallylo
    applicationShouldAutomaticallyLocalizeKeyCommands(application: UIApplication):boolean;
  }
}
// https://developer.apple.com/documentation/uikit/uiapplicationstaterestorationbundleversionkey
declare const UIApplicationStateRestorationBundleVersionKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uiapplicationstaterestorationsystemversionkey
declare const UIApplicationStateRestorationSystemVersionKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uiapplicationstaterestorationtimestampkey
declare const UIApplicationStateRestorationTimestampKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uiapplicationstaterestorationuserinterfaceidiomkey
declare const UIApplicationStateRestorationUserInterfaceIdiomKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uistaterestorationviewcontrollerstoryboardkey
declare const UIStateRestorationViewControllerStoryboardKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An object that describes the configuration of the status bar.
   * https://developer.apple.com/documentation/uikit/uistatusbarmanager
   */
  interface UIStatusBarManager extends NSObject {
    // https://developer.apple.com/documentation/uikit/uistatusbarmanager/3213941-statusbarhidden
    statusBarHidden(): boolean;
    setStatusBarHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uistatusbarmanager/3213942-statusbarstyle
    statusBarStyle(): UIStatusBarStyle;
    setStatusBarStyle(value: UIStatusBarStyle): void;
    // https://developer.apple.com/documentation/uikit/uistatusbarmanager/3213940-statusbarframe
    statusBarFrame(): CGRect;
    setStatusBarFrame(value: CGRect): void;
    //
    alloc():UIStatusBarManager;
    //
    init():UIStatusBarManager;
  }
}

declare const UIStatusBarManager: cocoascript.UIStatusBarManager;
declare namespace cocoascript {
  /**
   * The iOS interface environment for your app, including traits such as horizontal and vertical size class, display scale, and user interface idiom.
   * https://developer.apple.com/documentation/uikit/uitraitcollection
   */
  interface UITraitCollection extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623517-init
    init():UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623512-traitcollectionwithtraitsfromcol
    traitCollectionWithTraitsFromCollections(traitCollections: UITraitCollection):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623507-traitcollectionwithuserinterface
    traitCollectionWithUserInterfaceIdiom(idiom: UIUserInterfaceIdiom):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623520-traitcollectionwithhorizontalsiz
    traitCollectionWithHorizontalSizeClass(horizontalSizeClass: UIUserInterfaceSizeClass):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623505-traitcollectionwithverticalsizec
    traitCollectionWithVerticalSizeClass(verticalSizeClass: UIUserInterfaceSizeClass):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1651062-traitcollectionwithuserinterface
    traitCollectionWithUserInterfaceStyle(userInterfaceStyle: UIUserInterfaceStyle):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238083-traitcollectionwithaccessibility
    traitCollectionWithAccessibilityContrast(accessibilityContrast: UIAccessibilityContrast):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238084-traitcollectionwithuserinterface
    traitCollectionWithUserInterfaceLevel(userInterfaceLevel: UIUserInterfaceLevel):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3255095-traitcollectionwithlegibilitywei
    traitCollectionWithLegibilityWeight(legibilityWeight: UILegibilityWeight):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623511-traitcollectionwithforcetouchcap
    traitCollectionWithForceTouchCapability(capability: UIForceTouchCapability):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623518-traitcollectionwithdisplayscale
    traitCollectionWithDisplayScale(scale: CGFloat):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1771747-traitcollectionwithdisplaygamut
    traitCollectionWithDisplayGamut(displayGamut: UIDisplayGamut):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1648354-traitcollectionwithlayoutdirecti
    traitCollectionWithLayoutDirection(layoutDirection: UITraitEnvironmentLayoutDirection):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1771748-traitcollectionwithpreferredcont
    traitCollectionWithPreferredContentSizeCategory(preferredContentSizeCategory: UIContentSizeCategory):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3618953-traitcollectionwithactiveappeara
    traitCollectionWithActiveAppearance(userInterfaceActiveAppearance: UIUserInterfaceActiveAppearance):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623504-initwithcoder
    initWithCoder(coder: NSCoder):UITraitCollection;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238080-currenttraitcollection
    currentTraitCollection(): UITraitCollection;
    setCurrentTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623508-horizontalsizeclass
    horizontalSizeClass(): UIUserInterfaceSizeClass;
    setHorizontalSizeClass(value: UIUserInterfaceSizeClass): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623513-verticalsizeclass
    verticalSizeClass(): UIUserInterfaceSizeClass;
    setVerticalSizeClass(value: UIUserInterfaceSizeClass): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623519-displayscale
    displayScale(): CGFloat;
    setDisplayScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1771749-displaygamut
    displayGamut(): UIDisplayGamut;
    setDisplayGamut(value: UIDisplayGamut): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1651063-userinterfacestyle
    userInterfaceStyle(): UIUserInterfaceStyle;
    setUserInterfaceStyle(value: UIUserInterfaceStyle): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623521-userinterfaceidiom
    userInterfaceIdiom(): UIUserInterfaceIdiom;
    setUserInterfaceIdiom(value: UIUserInterfaceIdiom): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238085-userinterfacelevel
    userInterfaceLevel(): UIUserInterfaceLevel;
    setUserInterfaceLevel(value: UIUserInterfaceLevel): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1648355-layoutdirection
    layoutDirection(): UITraitEnvironmentLayoutDirection;
    setLayoutDirection(value: UITraitEnvironmentLayoutDirection): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238079-accessibilitycontrast
    accessibilityContrast(): UIAccessibilityContrast;
    setAccessibilityContrast(value: UIAccessibilityContrast): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3255094-legibilityweight
    legibilityWeight(): UILegibilityWeight;
    setLegibilityWeight(value: UILegibilityWeight): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3618952-activeappearance
    activeAppearance(): UIUserInterfaceActiveAppearance;
    setActiveAppearance(value: UIUserInterfaceActiveAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623515-forcetouchcapability
    forceTouchCapability(): UIForceTouchCapability;
    setForceTouchCapability(value: UIForceTouchCapability): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1771746-preferredcontentsizecategory
    preferredContentSizeCategory(): UIContentSizeCategory;
    setPreferredContentSizeCategory(value: UIContentSizeCategory): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/1623506-containstraitsincollection
    containsTraitsInCollection(trait: UITraitCollection):boolean;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238081-hasdifferentcolorappearancecompa
    hasDifferentColorAppearanceComparedToTraitCollection(traitCollection: UITraitCollection):boolean;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3295976-imageconfiguration
    imageConfiguration(): UIImageConfiguration;
    setImageConfiguration(value: UIImageConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uitraitcollection/3238082-performascurrenttraitcollection
    performAsCurrentTraitCollection(actions: void):void;
    //
    alloc():UITraitCollection;
    //
    init():UITraitCollection;
  }
}

declare const UITraitCollection: cocoascript.UITraitCollection;
// https://developer.apple.com/documentation/uikit/2877504-uicontentsizecategorycomparetoca
declare const UIContentSizeCategoryCompareToCategory: cocoascript.UIContentSizeCategory;
declare namespace cocoascript {
  /**
   * A set of methods that, in conjunction with a presentation controller, determine how to respond to trait changes in your app.
   * https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate
   */
  interface UIAdaptivePresentationControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/1618334-adaptivepresentationstyleforpres
    adaptivePresentationStyleForPresentationController_traitCollection(controller: UIPresentationController, traitCollection: UITraitCollection):UIModalPresentationStyle;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/1618343-adaptivepresentationstyleforpres
    adaptivePresentationStyleForPresentationController(controller: UIPresentationController):UIModalPresentationStyle;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/1618326-presentationcontroller
    presentationController_viewControllerForAdaptivePresentationStyle(controller: UIPresentationController, style: UIModalPresentationStyle):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/1618324-presentationcontroller
    presentationController_willPresentWithAdaptiveStyle_transitionCoordinator(presentationController: UIPresentationController, style: UIModalPresentationStyle, transitionCoordinator: UIViewControllerTransitionCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/3229888-presentationcontrollerdidattempt
    presentationControllerDidAttemptToDismiss(presentationController: UIPresentationController):void;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/3229890-presentationcontrollershoulddism
    presentationControllerShouldDismiss(presentationController: UIPresentationController):boolean;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/3229889-presentationcontrollerdiddismiss
    presentationControllerDidDismiss(presentationController: UIPresentationController):void;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/3229891-presentationcontrollerwilldismis
    presentationControllerWillDismiss(presentationController: UIPresentationController):void;
    // https://developer.apple.com/documentation/uikit/uiadaptivepresentationcontrollerdelegate/3801899-presentationcontroller
    presentationController_prepareAdaptivePresentationController(presentationController: UIPresentationController, adaptivePresentationController: UIPresentationController):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods for adapting the contents of your view controllers to size and trait changes.
   * https://developer.apple.com/documentation/uikit/uicontentcontainer
   */
  interface UIContentContainer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621466-viewwilltransitiontosize
    viewWillTransitionToSize_withTransitionCoordinator(size: CGSize, coordinator: UIViewControllerTransitionCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621511-willtransitiontotraitcollection
    willTransitionToTraitCollection_withTransitionCoordinator(newCollection: UITraitCollection, coordinator: UIViewControllerTransitionCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621484-sizeforchildcontentcontainer
    sizeForChildContentContainer_withParentContainerSize(container: UIContentContainer, parentSize: CGSize):CGSize;
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621351-preferredcontentsizedidchangefor
    preferredContentSizeDidChangeForChildContentContainer(container: UIContentContainer):void;
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621424-systemlayoutfittingsizedidchange
    systemLayoutFittingSizeDidChangeForChildContentContainer(container: UIContentContainer):void;
    // https://developer.apple.com/documentation/uikit/uicontentcontainer/1621481-preferredcontentsize
    preferredContentSize(): CGSize;
    setPreferredContentSize(value: CGSize): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods you use to add custom restrictions for the Guided Access feature in iOS.
   * https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate
   */
  interface UIGuidedAccessRestrictionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate/1621160-guidedaccessrestrictionidentifie
    guidedAccessRestrictionIdentifiers(): string | cocoascript.NSString;
    setGuidedAccessRestrictionIdentifiers(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate/1621161-textforguidedaccessrestrictionwi
    textForGuidedAccessRestrictionWithIdentifier(restrictionIdentifier: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate/1621158-detailtextforguidedaccessrestric
    detailTextForGuidedAccessRestrictionWithIdentifier(restrictionIdentifier: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictiondelegate/1621156-guidedaccessrestrictionwithident
    guidedAccessRestrictionWithIdentifier_didChangeState(restrictionIdentifier: string | cocoascript.NSString, newRestrictionState: UIGuidedAccessRestrictionState):void;
  }
}
declare namespace cocoascript {
  /**
   * An abstract base class for managing discrete portions of your app's data.
   * https://developer.apple.com/documentation/uikit/uidocument
   */
  interface UIDocument extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocument/1619979-initwithfileurl
    initWithFileURL(url: NSURL):UIDocument;
    // https://developer.apple.com/documentation/uikit/uidocument/1619990-fileurl
    fileURL(): NSURL;
    setFileURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619959-localizedname
    localizedName(): string | cocoascript.NSString;
    setLocalizedName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619992-filetype
    fileType(): string | cocoascript.NSString;
    setFileType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619952-filemodificationdate
    fileModificationDate(): NSDate;
    setFileModificationDate(value: NSDate): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619982-documentstate
    documentState(): UIDocumentState;
    setDocumentState(value: UIDocumentState): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1648564-progress
    progress(): NSProgress;
    setProgress(value: NSProgress): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619976-closewithcompletionhandler
    closeWithCompletionHandler(completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619978-contentsfortype
    contentsForType_error(typeName: string | cocoascript.NSString, outError: NSError):UIDocument;
    // https://developer.apple.com/documentation/uikit/uidocument/1619988-savetourl
    saveToURL_forSaveOperation_completionHandler(url: NSURL, saveOperation: UIDocumentSaveOperation, completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619951-writecontents
    writeContents_andAttributes_safelyToURL_forSaveOperation_error(contents: UIDocument, additionalFileAttributes: NSDictionary, url: NSURL, saveOperation: UIDocumentSaveOperation, outError: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uidocument/1619989-writecontents
    writeContents_toURL_forSaveOperation_originalContentsURL_error(contents: UIDocument, url: NSURL, saveOperation: UIDocumentSaveOperation, originalContentsURL: NSURL, outError: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uidocument/1619991-savingfiletype
    savingFileType(): string | cocoascript.NSString;
    setSavingFileType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619947-fileattributestowritetourl
    fileAttributesToWriteToURL_forSaveOperation_error(url: NSURL, saveOperation: UIDocumentSaveOperation, outError: NSError):NSDictionary;
    // https://developer.apple.com/documentation/uikit/uidocument/1619969-filenameextensionfortype
    fileNameExtensionForType_saveOperation(typeName: string | cocoascript.NSString, saveOperation: UIDocumentSaveOperation):NSString;
    // https://developer.apple.com/documentation/uikit/uidocument/1619977-openwithcompletionhandler
    openWithCompletionHandler(completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619971-loadfromcontents
    loadFromContents_ofType_error(contents: UIDocument, typeName: string | cocoascript.NSString, outError: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uidocument/1619967-readfromurl
    readFromURL_error(url: NSURL, outError: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uidocument/1619980-performasynchronousfileaccessusi
    performAsynchronousFileAccessUsingBlock(block: void):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619974-reverttocontentsofurl
    revertToContentsOfURL_completionHandler(url: NSURL, completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619958-disableediting
    disableEditing():void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619987-enableediting
    enableEditing():void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619965-hasunsavedchanges
    hasUnsavedChanges(): boolean;
    setHasUnsavedChanges(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619961-updatechangecount
    updateChangeCount(change: UIDocumentChangeKind):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619953-undomanager
    undoManager(): NSUndoManager;
    setUndoManager(value: NSUndoManager): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619954-changecounttokenforsaveoperation
    changeCountTokenForSaveOperation(saveOperation: UIDocumentSaveOperation):UIDocument;
    // https://developer.apple.com/documentation/uikit/uidocument/1619975-updatechangecountwithtoken
    updateChangeCountWithToken_forSaveOperation(changeCountToken: UIDocument, saveOperation: UIDocumentSaveOperation):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619981-autosavewithcompletionhandler
    autosaveWithCompletionHandler(completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619963-useractivity
    userActivity(): NSUserActivity;
    setUserActivity(value: NSUserActivity): void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619973-restoreuseractivitystate
    restoreUserActivityState(userActivity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619986-updateuseractivitystate
    updateUserActivityState(userActivity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619955-handleerror
    handleError_userInteractionPermitted(error: NSError, userInteractionPermitted: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619960-finishedhandlingerror
    finishedHandlingError_recovered(error: NSError, recovered: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocument/1619993-userinteractionnolongerpermitted
    userInteractionNoLongerPermittedForError(error: NSError):void;
    //
    alloc():UIDocument;
    //
    init():UIDocument;
  }
}

declare const UIDocument: cocoascript.UIDocument;
// https://developer.apple.com/documentation/uikit/nsuseractivitydocumenturlkey
declare const NSUserActivityDocumentURLKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * A managed document object that integrates with Core Data.
   * https://developer.apple.com/documentation/uikit/uimanageddocument
   */
  interface UIManagedDocument extends UIDocument {
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622674-configurepersistentstorecoordina
    configurePersistentStoreCoordinatorForURL_ofType_modelConfiguration_storeOptions_error(storeURL: NSURL, fileType: string | cocoascript.NSString, configuration: string | cocoascript.NSString, storeOptions: NSDictionary, error: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622667-managedobjectcontext
    managedObjectContext(): NSManagedObjectContext;
    setManagedObjectContext(value: NSManagedObjectContext): void;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622669-managedobjectmodel
    managedObjectModel(): NSManagedObjectModel;
    setManagedObjectModel(value: NSManagedObjectModel): void;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622666-persistentstoreoptions
    persistentStoreOptions(): NSDictionary;
    setPersistentStoreOptions(value: NSDictionary): void;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622671-modelconfiguration
    modelConfiguration(): string | cocoascript.NSString;
    setModelConfiguration(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622673-persistentstoretypeforfiletype
    persistentStoreTypeForFileType(fileType: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622670-readadditionalcontentfromurl
    readAdditionalContentFromURL_error(absoluteURL: NSURL, error: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622665-additionalcontentforurl
    additionalContentForURL_error(absoluteURL: NSURL, error: NSError):UIManagedDocument;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622668-writeadditionalcontent
    writeAdditionalContent_toURL_originalContentsURL_error(content: UIManagedDocument, absoluteURL: NSURL, absoluteOriginalContentsURL: NSURL, error: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uimanageddocument/1622672-persistentstorename
    persistentStoreName(): string | cocoascript.NSString;
    setPersistentStoreName(value: string | cocoascript.NSString): void;
    //
    alloc():UIManagedDocument;
    //
    init():UIManagedDocument;
  }
}

declare const UIManagedDocument: cocoascript.UIManagedDocument;
declare namespace cocoascript {
  /**
   * A set of methods that defines an interface for providing persistent references to data objects in your app.
   * https://developer.apple.com/documentation/uikit/uidatasourcemodelassociation
   */
  interface UIDataSourceModelAssociation {
    // https://developer.apple.com/documentation/uikit/uidatasourcemodelassociation/1616862-modelidentifierforelementatindex
    modelIdentifierForElementAtIndexPath_inView(idx: NSIndexPath, view: UIView):NSString;
    // https://developer.apple.com/documentation/uikit/uidatasourcemodelassociation/1616850-indexpathforelementwithmodeliden
    indexPathForElementWithModelIdentifier_inView(identifier: string | cocoascript.NSString, view: UIView):NSIndexPath;
  }
}
declare namespace cocoascript {
  /**
   * An object that helps a user share data from one place to another within your app, and from your app to other apps.
   * https://developer.apple.com/documentation/uikit/uipasteboard
   */
  interface UIPasteboard extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622106-generalpasteboard
    generalPasteboard(): UIPasteboard;
    setGeneralPasteboard(value: UIPasteboard): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622074-pasteboardwithname
    pasteboardWithName_create(pasteboardName: UIPasteboardName, create: boolean):UIPasteboard;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622087-pasteboardwithuniquename
    pasteboardWithUniqueName():UIPasteboard;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622072-removepasteboardwithname
    removePasteboardWithName(pasteboardName: UIPasteboardName):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622083-name
    name(): UIPasteboardName;
    setName(value: UIPasteboardName): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622103-changecount
    changeCount(): NSInteger;
    setChangeCount(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622096-setpersistent
    persistent(): boolean;
    setPersistent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/3621870-detectpatternsforpatterns
    detectPatternsForPatterns_completionHandler(patterns: UIPasteboardDetectionPattern, completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/3621871-detectpatternsforpatterns
    detectPatternsForPatterns_inItemSet_completionHandler(patterns: UIPasteboardDetectionPattern, itemSet: NSIndexSet, completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/3621872-detectvaluesforpatterns
    detectValuesForPatterns_completionHandler(patterns: UIPasteboardDetectionPattern, completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/3621873-detectvaluesforpatterns
    detectValuesForPatterns_inItemSet_completionHandler(patterns: UIPasteboardDetectionPattern, itemSet: NSIndexSet, completionHandler: NSError):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622077-pasteboardtypes
    pasteboardTypes(): string | cocoascript.NSString;
    setPasteboardTypes(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622095-pasteboardtypesforitemset
    pasteboardTypesForItemSet(itemSet: NSIndexSet):NSString;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622070-containspasteboardtypes
    containsPasteboardTypes(pasteboardTypes: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622100-containspasteboardtypes
    containsPasteboardTypes_inItemSet(pasteboardTypes: string | cocoascript.NSString, itemSet: NSIndexSet):boolean;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622071-itemsetwithpasteboardtypes
    itemSetWithPasteboardTypes(pasteboardTypes: string | cocoascript.NSString):NSIndexSet;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622076-numberofitems
    numberOfItems(): NSInteger;
    setNumberOfItems(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622067-items
    items(): id;
    setItems(value: id): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622101-additems
    addItems(items: UIPasteboard):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1829417-setitems
    setItems_options(items: UIPasteboard, options: UIPasteboard):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622093-dataforpasteboardtype
    dataForPasteboardType(pasteboardType: string | cocoascript.NSString):NSData;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622068-dataforpasteboardtype
    dataForPasteboardType_inItemSet(pasteboardType: string | cocoascript.NSString, itemSet: NSIndexSet):NSData;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622075-setdata
    setData_forPasteboardType(data: NSData, pasteboardType: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622099-valueforpasteboardtype
    valueForPasteboardType(pasteboardType: string | cocoascript.NSString):UIPasteboard;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622094-valuesforpasteboardtype
    valuesForPasteboardType_inItemSet(pasteboardType: string | cocoascript.NSString, itemSet: NSIndexSet):NSArray;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622079-setvalue
    setValue_forPasteboardType(value: UIPasteboard, pasteboardType: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622092-string
    string(): string | cocoascript.NSString;
    setString(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622091-strings
    strings(): string | cocoascript.NSString;
    setStrings(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622069-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622086-images
    images(): UIImage;
    setImages(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622081-url
    URL(): NSURL;
    setURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622097-urls
    URLs(): NSURL;
    setURLs(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622085-color
    color(): UIColor;
    setColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1622078-colors
    colors(): UIColor;
    setColors(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1829413-hascolors
    hasColors(): boolean;
    setHasColors(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1829411-hasimages
    hasImages(): boolean;
    setHasImages(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1829416-hasstrings
    hasStrings(): boolean;
    setHasStrings(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/1829410-hasurls
    hasURLs(): boolean;
    setHasURLs(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/2882049-itemproviders
    itemProviders(): NSItemProvider;
    setItemProviders(value: NSItemProvider): void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/2882050-setitemproviders
    setItemProviders_localOnly_expirationDate(itemProviders: NSItemProvider, localOnly: boolean, expirationDate: NSDate):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/2882051-setobjects
    setObjects(objects: NSItemProviderWriting):void;
    // https://developer.apple.com/documentation/uikit/uipasteboard/2882052-setobjects
    setObjects_localOnly_expirationDate(objects: NSItemProviderWriting, localOnly: boolean, expirationDate: NSDate):void;
    //
    alloc():UIPasteboard;
    //
    init():UIPasteboard;
  }
}

declare const UIPasteboard: cocoascript.UIPasteboard;
declare namespace cocoascript {
  /**
   * The interface that an object implements to declare its ability to accept specific data types for pasting and for drag and drop activities.
   * https://developer.apple.com/documentation/uikit/uipasteconfiguration
   */
  interface UIPasteConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882061-init
    init():UIPasteConfiguration;
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882060-initwithacceptabletypeidentifier
    initWithAcceptableTypeIdentifiers(acceptableTypeIdentifiers: string | cocoascript.NSString):UIPasteConfiguration;
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882058-initwithtypeidentifiersforaccept
    initWithTypeIdentifiersForAcceptingClass(aClass: NSItemProviderReading):UIPasteConfiguration;
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882059-acceptabletypeidentifiers
    acceptableTypeIdentifiers(): string | cocoascript.NSString;
    setAcceptableTypeIdentifiers(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882057-addacceptabletypeidentifiers
    addAcceptableTypeIdentifiers(acceptableTypeIdentifiers: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uipasteconfiguration/2882062-addtypeidentifiersforacceptingcl
    addTypeIdentifiersForAcceptingClass(aClass: NSItemProviderReading):void;
    //
    alloc():UIPasteConfiguration;
    //
    init():UIPasteConfiguration;
  }
}

declare const UIPasteConfiguration: cocoascript.UIPasteConfiguration;
declare namespace cocoascript {
  /**
   * The interface that determines whether a responder object supports paste configuration.
   * https://developer.apple.com/documentation/uikit/uipasteconfigurationsupporting
   */
  interface UIPasteConfigurationSupporting extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipasteconfigurationsupporting/2882040-pasteconfiguration
    pasteConfiguration(): UIPasteConfiguration;
    setPasteConfiguration(value: UIPasteConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uipasteconfigurationsupporting/2887578-canpasteitemproviders
    canPasteItemProviders(itemProviders: NSItemProvider):boolean;
    // https://developer.apple.com/documentation/uikit/uipasteconfigurationsupporting/2887579-pasteitemproviders
    pasteItemProviders(itemProviders: NSItemProvider):void;
  }
}
declare namespace cocoascript {
  /**
   * An encapsulation of the design-time view controller graph represented in an Interface Builder storyboard resource file.
   * https://developer.apple.com/documentation/uikit/uistoryboard
   */
  interface UIStoryboard extends NSObject {
    // https://developer.apple.com/documentation/uikit/uistoryboard/1616216-storyboardwithname
    storyboardWithName_bundle(name: string | cocoascript.NSString, storyboardBundleOrNil: NSBundle):UIStoryboard;
    // https://developer.apple.com/documentation/uikit/uistoryboard/1616213-instantiateinitialviewcontroller
    instantiateInitialViewController():UIViewController;
    // https://developer.apple.com/documentation/uikit/uistoryboard/3173165-instantiateinitialviewcontroller
    instantiateInitialViewControllerWithCreator(block: UIStoryboardViewControllerCreator):UIViewController;
    // https://developer.apple.com/documentation/uikit/uistoryboard/1616214-instantiateviewcontrollerwithide
    instantiateViewControllerWithIdentifier(identifier: string | cocoascript.NSString):UIViewController;
    // https://developer.apple.com/documentation/uikit/uistoryboard/3173166-instantiateviewcontrollerwithide
    instantiateViewControllerWithIdentifier_creator(identifier: string | cocoascript.NSString, block: UIStoryboardViewControllerCreator):UIViewController;
    //
    alloc():UIStoryboard;
    //
    init():UIStoryboard;
  }
}

declare const UIStoryboard: cocoascript.UIStoryboard;
declare namespace cocoascript {
  /**
   * An object that prepares for and performs the visual transition between two view controllers.
   * https://developer.apple.com/documentation/uikit/uistoryboardsegue
   */
  interface UIStoryboardSegue extends NSObject {
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621908-initwithidentifier
    initWithIdentifier_source_destination(identifier: string | cocoascript.NSString, source: UIViewController, destination: UIViewController):UIStoryboardSegue;
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621918-sourceviewcontroller
    sourceViewController(): UIViewController;
    setSourceViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621916-destinationviewcontroller
    destinationViewController(): UIViewController;
    setDestinationViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621909-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621912-perform
    perform():void;
    // https://developer.apple.com/documentation/uikit/uistoryboardsegue/1621910-seguewithidentifier
    segueWithIdentifier_source_destination_performHandler(identifier: string | cocoascript.NSString, source: UIViewController, destination: UIViewController, performHandler: void):UIStoryboardSegue;
    //
    alloc():UIStoryboardSegue;
    //
    init():UIStoryboardSegue;
  }
}

declare const UIStoryboardSegue: cocoascript.UIStoryboardSegue;
declare namespace cocoascript {
  /**
   * An encapsulation of information about an unwind segue.
   * https://developer.apple.com/documentation/uikit/uistoryboardunwindseguesource
   */
  interface UIStoryboardUnwindSegueSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uistoryboardunwindseguesource/1621917-sourceviewcontroller
    sourceViewController(): UIViewController;
    setSourceViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uistoryboardunwindseguesource/1621915-unwindaction
    unwindAction(): SEL;
    setUnwindAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uistoryboardunwindseguesource/1621914-sender
    sender(): id;
    setSender(value: id): void;
    //
    alloc():UIStoryboardUnwindSegueSource;
    //
    init():UIStoryboardUnwindSegueSource;
  }
}

declare const UIStoryboardUnwindSegueSource: cocoascript.UIStoryboardUnwindSegueSource;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uistoryboardviewcontrollercreator
  type UIStoryboardViewControllerCreator = cocoascript.NSCoder;
}
declare namespace cocoascript {
  /**
   * A container for a collection of images that represent multiple ways of describing a single piece of artwork.
   * https://developer.apple.com/documentation/uikit/uiimageasset
   */
  interface UIImageAsset extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiimageasset/1624977-init
    init():UIImageAsset;
    // https://developer.apple.com/documentation/uikit/uiimageasset/1624978-initwithcoder
    initWithCoder(coder: NSCoder):UIImageAsset;
    // https://developer.apple.com/documentation/uikit/uiimageasset/1624974-registerimage
    registerImage_withTraitCollection(image: UIImage, traitCollection: UITraitCollection):void;
    // https://developer.apple.com/documentation/uikit/uiimageasset/3295944-registerimage
    registerImage_withConfiguration(image: UIImage, configuration: UIImageConfiguration):void;
    // https://developer.apple.com/documentation/uikit/uiimageasset/1624973-unregisterimagewithtraitcollecti
    unregisterImageWithTraitCollection(traitCollection: UITraitCollection):void;
    // https://developer.apple.com/documentation/uikit/uiimageasset/3295945-unregisterimagewithconfiguration
    unregisterImageWithConfiguration(configuration: UIImageConfiguration):void;
    // https://developer.apple.com/documentation/uikit/uiimageasset/1624976-imagewithtraitcollection
    imageWithTraitCollection(traitCollection: UITraitCollection):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimageasset/3238043-imagewithconfiguration
    imageWithConfiguration(configuration: UIImageConfiguration):UIImage;
    //
    alloc():UIImageAsset;
    //
    init():UIImageAsset;
  }
}

declare const UIImageAsset: cocoascript.UIImageAsset;
declare namespace cocoascript {
  /**
   * An object that contains Interface Builder nib files.
   * https://developer.apple.com/documentation/uikit/uinib
   */
  interface UINib extends NSObject {
    // https://developer.apple.com/documentation/uikit/uinib/1614138-nibwithnibname
    nibWithNibName_bundle(name: string | cocoascript.NSString, bundleOrNil: NSBundle):UINib;
    // https://developer.apple.com/documentation/uikit/uinib/1614135-nibwithdata
    nibWithData_bundle(data: NSData, bundleOrNil: NSBundle):UINib;
    // https://developer.apple.com/documentation/uikit/uinib/1614137-instantiatewithowner
    instantiateWithOwner_options(ownerOrNil: UINib, optionsOrNil: UINib):NSArray;
    //
    alloc():UINib;
    //
    init():UINib;
  }
}

declare const UINib: cocoascript.UINib;
// https://developer.apple.com/documentation/uikit/uinibproxiedobjectskey
declare const UINibProxiedObjectsKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * The principal class for the Document Picker View Controller extension.
   * https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller
   */
  interface UIDocumentPickerExtensionViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614391-dismissgrantingaccesstourl
    dismissGrantingAccessToURL(url: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614393-documentpickermode
    documentPickerMode(): UIDocumentPickerMode;
    setDocumentPickerMode(value: UIDocumentPickerMode): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614390-documentstorageurl
    documentStorageURL(): NSURL;
    setDocumentStorageURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614392-originalurl
    originalURL(): NSURL;
    setOriginalURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614395-prepareforpresentationinmode
    prepareForPresentationInMode(mode: UIDocumentPickerMode):void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614396-provideridentifier
    providerIdentifier(): string | cocoascript.NSString;
    setProviderIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerextensionviewcontroller/1614394-validtypes
    validTypes(): string | cocoascript.NSString;
    setValidTypes(value: string | cocoascript.NSString): void;
    //
    alloc():UIDocumentPickerExtensionViewController;
    //
    init():UIDocumentPickerExtensionViewController;
  }
}

declare const UIDocumentPickerExtensionViewController: cocoascript.UIDocumentPickerExtensionViewController;
declare namespace cocoascript {
  /**
   * An object that provides textual context to a custom keyboard.
   * https://developer.apple.com/documentation/uikit/uitextdocumentproxy
   */
  interface UITextDocumentProxy extends UIKeyInput {
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/1649583-documentinputmode
    documentInputMode(): UITextInputMode;
    setDocumentInputMode(value: UITextInputMode): void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/1618199-documentcontextafterinput
    documentContextAfterInput(): string | cocoascript.NSString;
    setDocumentContextAfterInput(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/1618190-documentcontextbeforeinput
    documentContextBeforeInput(): string | cocoascript.NSString;
    setDocumentContextBeforeInput(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/1618194-adjusttextpositionbycharacteroff
    adjustTextPositionByCharacterOffset(offset: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/2875749-selectedtext
    selectedText(): string | cocoascript.NSString;
    setSelectedText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/3152923-setmarkedtext
    setMarkedText_selectedRange(markedText: string | cocoascript.NSString, selectedRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/3152924-unmarktext
    unmarkText():void;
    // https://developer.apple.com/documentation/uikit/uitextdocumentproxy/2875742-documentidentifier
    documentIdentifier(): NSUUID;
    setDocumentIdentifier(value: NSUUID): void;
  }
}
declare namespace cocoascript {
  /**
   * A property that enables a custom input or keyboard accessory view to play standard keyboard input clicks.
   * https://developer.apple.com/documentation/uikit/uiinputviewaudiofeedback
   */
  interface UIInputViewAudioFeedback extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiinputviewaudiofeedback/1620038-enableinputclickswhenvisible
    enableInputClicksWhenVisible(): boolean;
    setEnableInputClicksWhenVisible(value: boolean): void;
  }
}
declare namespace cocoascript {
  /**
   * The primary view controller for a custom keyboard app extension.
   * https://developer.apple.com/documentation/uikit/uiinputviewcontroller
   */
  interface UIInputViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618192-inputview
    inputView(): UIInputView;
    setInputView(value: UIInputView): void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618191-advancetonextinputmode
    advanceToNextInputMode():void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618196-dismisskeyboard
    dismissKeyboard():void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1649584-handleinputmodelistfromview
    handleInputModeListFromView_withEvent(view: UIView, event: UIEvent):void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618193-textdocumentproxy
    textDocumentProxy(): UITextDocumentProxy;
    setTextDocumentProxy(value: UITextDocumentProxy): void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618195-requestsupplementarylexiconwithc
    requestSupplementaryLexiconWithCompletion(completionHandler: UILexicon):void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/1618200-primarylanguage
    primaryLanguage(): string | cocoascript.NSString;
    setPrimaryLanguage(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/2875741-needsinputmodeswitchkey
    needsInputModeSwitchKey(): boolean;
    setNeedsInputModeSwitchKey(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/2875763-hasfullaccess
    hasFullAccess(): boolean;
    setHasFullAccess(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiinputviewcontroller/2932195-hasdictationkey
    hasDictationKey(): boolean;
    setHasDictationKey(value: boolean): void;
    //
    alloc():UIInputViewController;
    //
    init():UIInputViewController;
  }
}

declare const UIInputViewController: cocoascript.UIInputViewController;
declare namespace cocoascript {
  /**
   * A read-only array of term pairs, each in a lexicon entry object, for a custom keyboard.
   * https://developer.apple.com/documentation/uikit/uilexicon
   */
  interface UILexicon extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilexicon/1614133-entries
    entries(): UILexiconEntry;
    setEntries(value: UILexiconEntry): void;
    //
    alloc():UILexicon;
    //
    init():UILexicon;
  }
}

declare const UILexicon: cocoascript.UILexicon;
declare namespace cocoascript {
  /**
   * A read-only term pair, available within a lexicon object, for a custom keyboard.
   * https://developer.apple.com/documentation/uikit/uilexiconentry
   */
  interface UILexiconEntry extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilexiconentry/1614130-documenttext
    documentText(): string | cocoascript.NSString;
    setDocumentText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilexiconentry/1614132-userinput
    userInput(): string | cocoascript.NSString;
    setUserInput(value: string | cocoascript.NSString): void;
    //
    alloc():UILexiconEntry;
    //
    init():UILexiconEntry;
  }
}

declare const UILexiconEntry: cocoascript.UILexiconEntry;
declare namespace cocoascript {
  /**
   * The protocol you adopt to restore an object's state from a user activity.
   * https://developer.apple.com/documentation/uikit/uiuseractivityrestoring
   */
  interface UIUserActivityRestoring extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiuseractivityrestoring/2980936-restoreuseractivitystate
    restoreUserActivityState(userActivity: NSUserActivity):void;
  }
}
declare namespace cocoascript {
  /**
   * An abstract class that you subclass to implement app-specific services.
   * https://developer.apple.com/documentation/uikit/uiactivity
   */
  interface UIActivity extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactivity/1620656-activitycategory
    activityCategory(): UIActivityCategory;
    setActivityCategory(value: UIActivityCategory): void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620671-activitytype
    activityType(): UIActivityType;
    setActivityType(value: UIActivityType): void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620674-activitytitle
    activityTitle(): string | cocoascript.NSString;
    setActivityTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620658-activityimage
    activityImage(): UIImage;
    setActivityImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620677-canperformwithactivityitems
    canPerformWithActivityItems(activityItems: NSArray):boolean;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620668-preparewithactivityitems
    prepareWithActivityItems(activityItems: NSArray):void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620678-activityviewcontroller
    activityViewController(): UIViewController;
    setActivityViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620659-performactivity
    performActivity():void;
    // https://developer.apple.com/documentation/uikit/uiactivity/1620679-activitydidfinish
    activityDidFinish(completed: boolean):void;
    //
    alloc():UIActivity;
    //
    init():UIActivity;
  }
}

declare const UIActivity: cocoascript.UIActivity;
declare namespace cocoascript {
  /**
   * A view controller that you use to offer standard services from your app.
   * https://developer.apple.com/documentation/uikit/uiactivityviewcontroller
   */
  interface UIActivityViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uiactivityviewcontroller/1622019-initwithactivityitems
    initWithActivityItems_applicationActivities(activityItems: NSArray, applicationActivities: UIActivity):UIActivityViewController;
    // https://developer.apple.com/documentation/uikit/uiactivityviewcontroller/3626475-initwithactivityitemsconfigurati
    initWithActivityItemsConfiguration(activityItemsConfiguration: UIActivityItemsConfigurationReading):UIActivityViewController;
    // https://developer.apple.com/documentation/uikit/uiactivityviewcontroller/1622022-completionwithitemshandler
    completionWithItemsHandler(): UIActivityViewControllerCompletionWithItemsHandler;
    setCompletionWithItemsHandler(value: UIActivityViewControllerCompletionWithItemsHandler): void;
    // https://developer.apple.com/documentation/uikit/uiactivityviewcontroller/1622009-excludedactivitytypes
    excludedActivityTypes(): UIActivityType;
    setExcludedActivityTypes(value: UIActivityType): void;
    // https://developer.apple.com/documentation/uikit/uiactivityviewcontroller/1622010-completionhandler
    completionHandler(): UIActivityViewControllerCompletionHandler;
    setCompletionHandler(value: UIActivityViewControllerCompletionHandler): void;
    //
    alloc():UIActivityViewController;
    //
    init():UIActivityViewController;
  }
}

declare const UIActivityViewController: cocoascript.UIActivityViewController;
declare namespace cocoascript {
  /**
   * A set of methods that an activity view controller uses to retrieve the data items to act on.
   * https://developer.apple.com/documentation/uikit/uiactivityitemsource
   */
  interface UIActivityItemSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/1620458-activityviewcontrollerplaceholde
    activityViewControllerPlaceholderItem(activityViewController: UIActivityViewController):UIActivityItemSource;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/1620453-activityviewcontroller
    activityViewController_itemForActivityType(activityViewController: UIActivityViewController, activityType: UIActivityType):UIActivityItemSource;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/1620455-activityviewcontroller
    activityViewController_subjectForActivityType(activityViewController: UIActivityViewController, activityType: UIActivityType):NSString;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/1620456-activityviewcontroller
    activityViewController_dataTypeIdentifierForActivityType(activityViewController: UIActivityViewController, activityType: UIActivityType):NSString;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/1620462-activityviewcontroller
    activityViewController_thumbnailImageForActivityType_suggestedSize(activityViewController: UIActivityViewController, activityType: UIActivityType, size: CGSize):UIImage;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsource/3144571-activityviewcontrollerlinkmetada
    activityViewControllerLinkMetadata(activityViewController: UIActivityViewController):LPLinkMetadata;
  }
}
declare namespace cocoascript {
  /**
   * A proxy for data that passes to an activity view controller.
   * https://developer.apple.com/documentation/uikit/uiactivityitemprovider
   */
  interface UIActivityItemProvider extends NSOperation {
    // https://developer.apple.com/documentation/uikit/uiactivityitemprovider/1620463-initwithplaceholderitem
    initWithPlaceholderItem(placeholderItem: UIActivityItemProvider):UIActivityItemProvider;
    // https://developer.apple.com/documentation/uikit/uiactivityitemprovider/1620457-item
    item(): id;
    setItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemprovider/1620454-placeholderitem
    placeholderItem(): id;
    setPlaceholderItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemprovider/1620459-activitytype
    activityType(): UIActivityType;
    setActivityType(value: UIActivityType): void;
    //
    alloc():UIActivityItemProvider;
    //
    init():UIActivityItemProvider;
  }
}

declare const UIActivityItemProvider: cocoascript.UIActivityItemProvider;
// https://developer.apple.com/documentation/uikit/uideviceorientationdidchangenotification
declare const UIDeviceOrientationDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uideviceorientation
  type UIDeviceOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidevicebatterystate
  type UIDeviceBatteryState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfaceidiom
  type UIUserInterfaceIdiom = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uidevicebatteryleveldidchangenotification
declare const UIDeviceBatteryLevelDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uidevicebatterystatedidchangenotification
declare const UIDeviceBatteryStateDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uideviceproximitystatedidchangenotification
declare const UIDeviceProximityStateDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsdataassetname
  type NSDataAssetName = cocoascript.NSString;
}
declare namespace cocoascript {
  /**
   * A representation of the state of the data in a view at a specific point in time.
   * https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot
   */
  interface NSDiffableDataSourceSnapshot extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182897-appendsectionswithidentifiers
    appendSectionsWithIdentifiers(sectionIdentifiers: NSArray):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182896-appenditemswithidentifiers
    appendItemsWithIdentifiers_intoSectionWithIdentifier(identifiers: any, sectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182895-appenditemswithidentifiers
    appendItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182913-numberofitems
    numberOfItems(): NSInteger;
    setNumberOfItems(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182915-numberofsections
    numberOfSections(): NSInteger;
    setNumberOfSections(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182914-numberofitemsinsection
    numberOfItemsInSection(sectionIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182907-itemidentifiers
    itemIdentifiers(): any;
    setItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182919-sectionidentifiers
    sectionIdentifiers(): any;
    setSectionIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182901-indexofitemidentifier
    indexOfItemIdentifier(itemIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182902-indexofsectionidentifier
    indexOfSectionIdentifier(sectionIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182908-itemidentifiersinsectionwithiden
    itemIdentifiersInSectionWithIdentifier(sectionIdentifier: any):NSArray;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182918-sectionidentifierforsectionconta
    sectionIdentifierForSectionContainingItemIdentifier(itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182903-insertitemswithidentifiers
    insertItemsWithIdentifiers_afterItemWithIdentifier(identifiers: any, itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182904-insertitemswithidentifiers
    insertItemsWithIdentifiers_beforeItemWithIdentifier(identifiers: any, itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182905-insertsectionswithidentifiers
    insertSectionsWithIdentifiers_afterSectionWithIdentifier(sectionIdentifiers: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182906-insertsectionswithidentifiers
    insertSectionsWithIdentifiers_beforeSectionWithIdentifier(sectionIdentifiers: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182898-deleteallitems
    deleteAllItems():void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182899-deleteitemswithidentifiers
    deleteItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182900-deletesectionswithidentifiers
    deleteSectionsWithIdentifiers(sectionIdentifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182909-moveitemwithidentifier
    moveItemWithIdentifier_afterItemWithIdentifier(fromIdentifier: any, toIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182910-moveitemwithidentifier
    moveItemWithIdentifier_beforeItemWithIdentifier(fromIdentifier: any, toIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182911-movesectionwithidentifier
    moveSectionWithIdentifier_afterSectionWithIdentifier(fromSectionIdentifier: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182912-movesectionwithidentifier
    moveSectionWithIdentifier_beforeSectionWithIdentifier(fromSectionIdentifier: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3801890-reconfigureitemswithidentifiers
    reconfigureItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857603-reconfigureditemidentifiers
    reconfiguredItemIdentifiers(): any;
    setReconfiguredItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182916-reloaditemswithidentifiers
    reloadItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857604-reloadeditemidentifiers
    reloadedItemIdentifiers(): any;
    setReloadedItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182917-reloadsectionswithidentifiers
    reloadSectionsWithIdentifiers(sectionIdentifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857605-reloadedsectionidentifiers
    reloadedSectionIdentifiers(): any;
    setReloadedSectionIdentifiers(value: any): void;
    //
    alloc():NSDiffableDataSourceSnapshot;
    //
    init():NSDiffableDataSourceSnapshot;
  }
}

declare const NSDiffableDataSourceSnapshot: cocoascript.NSDiffableDataSourceSnapshot;
declare namespace cocoascript {
  /**
   * A set of methods that provide layout support and access to layout anchors.
   * https://developer.apple.com/documentation/uikit/uilayoutsupport
   */
  interface UILayoutSupport extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilayoutsupport/1622253-length
    length(): CGFloat;
    setLength(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilayoutsupport/1622239-bottomanchor
    bottomAnchor(): NSLayoutYAxisAnchor;
    setBottomAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutsupport/1622236-heightanchor
    heightAnchor(): NSLayoutDimension;
    setHeightAnchor(value: NSLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/uilayoutsupport/1622255-topanchor
    topAnchor(): NSLayoutYAxisAnchor;
    setTopAnchor(value: NSLayoutYAxisAnchor): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilayoutpriority
  type UILayoutPriority = number;
}
// https://developer.apple.com/documentation/uikit/uilayoutpriorityrequired
declare const UILayoutPriorityRequired: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uilayoutprioritydefaulthigh
declare const UILayoutPriorityDefaultHigh: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uilayoutprioritydefaultlow
declare const UILayoutPriorityDefaultLow: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uilayoutpriorityfittingsizelevel
declare const UILayoutPriorityFittingSizeLevel: cocoascript.UILayoutPriority;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nslayoutrelation
  type NSLayoutRelation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nslayoutattribute
  type NSLayoutAttribute = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nslayoutformatoptions
  type NSLayoutFormatOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilayoutconstraintaxis
  type UILayoutConstraintAxis = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A rectangular area that can interact with Auto Layout.
   * https://developer.apple.com/documentation/uikit/uilayoutguide
   */
  interface UILayoutGuide extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619655-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619657-layoutframe
    layoutFrame(): CGRect;
    setLayoutFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619648-owningview
    owningView(): UIView;
    setOwningView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619661-bottomanchor
    bottomAnchor(): NSLayoutYAxisAnchor;
    setBottomAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619654-centerxanchor
    centerXAnchor(): NSLayoutXAxisAnchor;
    setCenterXAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619659-centeryanchor
    centerYAnchor(): NSLayoutYAxisAnchor;
    setCenterYAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619652-heightanchor
    heightAnchor(): NSLayoutDimension;
    setHeightAnchor(value: NSLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619658-leadinganchor
    leadingAnchor(): NSLayoutXAxisAnchor;
    setLeadingAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619656-leftanchor
    leftAnchor(): NSLayoutXAxisAnchor;
    setLeftAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619649-rightanchor
    rightAnchor(): NSLayoutXAxisAnchor;
    setRightAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619650-topanchor
    topAnchor(): NSLayoutYAxisAnchor;
    setTopAnchor(value: NSLayoutYAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619660-trailinganchor
    trailingAnchor(): NSLayoutXAxisAnchor;
    setTrailingAnchor(value: NSLayoutXAxisAnchor): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1619653-widthanchor
    widthAnchor(): NSLayoutDimension;
    setWidthAnchor(value: NSLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1648534-constraintsaffectinglayoutforaxi
    constraintsAffectingLayoutForAxis(axis: UILayoutConstraintAxis):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/uilayoutguide/1648533-hasambiguouslayout
    hasAmbiguousLayout(): boolean;
    setHasAmbiguousLayout(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiview/3752221-keyboardlayoutguide
    keyboardLayoutGuide(): UIKeyboardLayoutGuide;
    setKeyboardLayoutGuide(value: UIKeyboardLayoutGuide): void;
    //
    alloc():UILayoutGuide;
    //
    init():UILayoutGuide;
  }
}

declare const UILayoutGuide: cocoascript.UILayoutGuide;
declare namespace cocoascript {
  /**
   * An object that manages the transition animations and the presentation of view controllers onscreen.
   * https://developer.apple.com/documentation/uikit/uipresentationcontroller
   */
  interface UIPresentationController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618328-initwithpresentedviewcontroller
    initWithPresentedViewController_presentingViewController(presentedViewController: UIViewController, presentingViewController: UIViewController):UIPresentationController;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618329-delegate
    delegate(): UIAdaptivePresentationControllerDelegate;
    setDelegate(value: UIAdaptivePresentationControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618338-presentingviewcontroller
    presentingViewController(): UIViewController;
    setPresentingViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618322-presentedviewcontroller
    presentedViewController(): UIViewController;
    setPresentedViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618332-containerview
    containerView(): UIView;
    setContainerView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618321-presentedview
    presentedView(): UIView;
    setPresentedView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618337-frameofpresentedviewincontainerv
    frameOfPresentedViewInContainerView(): CGRect;
    setFrameOfPresentedViewInContainerView(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618335-overridetraitcollection
    overrideTraitCollection(): UITraitCollection;
    setOverrideTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618341-containerviewwilllayoutsubviews
    containerViewWillLayoutSubviews():void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618331-containerviewdidlayoutsubviews
    containerViewDidLayoutSubviews():void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618330-presentationtransitionwillbegin
    presentationTransitionWillBegin():void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618327-presentationtransitiondidend
    presentationTransitionDidEnd(completed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618342-dismissaltransitionwillbegin
    dismissalTransitionWillBegin():void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618323-dismissaltransitiondidend
    dismissalTransitionDidEnd(completed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618320-presentationstyle
    presentationStyle(): UIModalPresentationStyle;
    setPresentationStyle(value: UIModalPresentationStyle): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618325-adaptivepresentationstylefortrai
    adaptivePresentationStyleForTraitCollection(traitCollection: UITraitCollection):UIModalPresentationStyle;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618340-adaptivepresentationstyle
    adaptivePresentationStyle(): UIModalPresentationStyle;
    setAdaptivePresentationStyle(value: UIModalPresentationStyle): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618336-shouldpresentinfullscreen
    shouldPresentInFullscreen(): boolean;
    setShouldPresentInFullscreen(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipresentationcontroller/1618319-shouldremovepresentersview
    shouldRemovePresentersView(): boolean;
    setShouldRemovePresentersView(value: boolean): void;
    //
    alloc():UIPresentationController;
    //
    init():UIPresentationController;
  }
}

declare const UIPresentationController: cocoascript.UIPresentationController;
declare namespace cocoascript {
  /**
   * An object that implements some complex visual effects.
   * https://developer.apple.com/documentation/uikit/uivisualeffectview
   */
  interface UIVisualEffectView extends UIView {
    // https://developer.apple.com/documentation/uikit/uivisualeffectview/1615051-initwitheffect
    initWithEffect(effect: UIVisualEffect):UIVisualEffectView;
    // https://developer.apple.com/documentation/uikit/uivisualeffectview/1615054-initwithcoder
    initWithCoder(coder: NSCoder):UIVisualEffectView;
    // https://developer.apple.com/documentation/uikit/uivisualeffectview/1615068-contentview
    contentView(): UIView;
    setContentView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uivisualeffectview/1615072-effect
    effect(): UIVisualEffect;
    setEffect(value: UIVisualEffect): void;
    //
    alloc():UIVisualEffectView;
    //
    init():UIVisualEffectView;
  }
}

declare const UIVisualEffectView: cocoascript.UIVisualEffectView;
declare namespace cocoascript {
  /**
   * The interface for configuring and controlling a drag interaction.
   * https://developer.apple.com/documentation/uikit/uidraginteractiondelegate
   */
  interface UIDragInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891010-draginteraction
    dragInteraction_itemsForBeginningSession(interaction: UIDragInteraction, session: UIDragSession):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2890968-draginteraction
    dragInteraction_itemsForAddingToSession_withTouchAtPoint(interaction: UIDragInteraction, session: UIDragSession, point: CGPoint):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891004-draginteraction
    dragInteraction_sessionForAddingItems_withTouchAtPoint(interaction: UIDragInteraction, sessions: UIDragSession, point: CGPoint):UIDragSession;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891005-draginteraction
    dragInteraction_willAnimateLiftWithAnimator_session(interaction: UIDragInteraction, animator: UIDragAnimating, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891027-draginteraction
    dragInteraction_item_willAnimateCancelWithAnimator(interaction: UIDragInteraction, item: UIDragItem, animator: UIDragAnimating):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891055-draginteraction
    dragInteraction_sessionWillBegin(interaction: UIDragInteraction, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2890993-draginteraction
    dragInteraction_session_willAddItems_forInteraction(interaction: UIDragInteraction, session: UIDragSession, items: UIDragItem, addingInteraction: UIDragInteraction):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2890988-draginteraction
    dragInteraction_sessionDidMove(interaction: UIDragInteraction, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891032-draginteraction
    dragInteraction_session_willEndWithOperation(interaction: UIDragInteraction, session: UIDragSession, operation: UIDropOperation):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891012-draginteraction
    dragInteraction_session_didEndWithOperation(interaction: UIDragInteraction, session: UIDragSession, operation: UIDropOperation):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891014-draginteraction
    dragInteraction_sessionDidTransferItems(interaction: UIDragInteraction, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891057-draginteraction
    dragInteraction_previewForLiftingItem_session(interaction: UIDragInteraction, item: UIDragItem, session: UIDragSession):UITargetedDragPreview;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2890967-draginteraction
    dragInteraction_previewForCancellingItem_withDefault(interaction: UIDragInteraction, item: UIDragItem, defaultPreview: UITargetedDragPreview):UITargetedDragPreview;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891028-draginteraction
    dragInteraction_prefersFullSizePreviewsForSession(interaction: UIDragInteraction, session: UIDragSession):boolean;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2891063-draginteraction
    dragInteraction_sessionIsRestrictedToDraggingApplication(interaction: UIDragInteraction, session: UIDragSession):boolean;
    // https://developer.apple.com/documentation/uikit/uidraginteractiondelegate/2890978-draginteraction
    dragInteraction_sessionAllowsMoveOperation(interaction: UIDragInteraction, session: UIDragSession):boolean;
  }
}
declare namespace cocoascript {
  /**
   * The interface for configuring and controlling a drop interaction.
   * https://developer.apple.com/documentation/uikit/uidropinteractiondelegate
   */
  interface UIDropInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890887-dropinteraction
    dropInteraction_canHandleSession(interaction: UIDropInteraction, session: UIDropSession):boolean;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890889-dropinteraction
    dropInteraction_performDrop(interaction: UIDropInteraction, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890880-dropinteraction
    dropInteraction_sessionDidEnter(interaction: UIDropInteraction, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890888-dropinteraction
    dropInteraction_sessionDidUpdate(interaction: UIDropInteraction, session: UIDropSession):UIDropProposal;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890893-dropinteraction
    dropInteraction_sessionDidExit(interaction: UIDropInteraction, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890879-dropinteraction
    dropInteraction_sessionDidEnd(interaction: UIDropInteraction, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890896-dropinteraction
    dropInteraction_item_willAnimateDropWithAnimator(interaction: UIDropInteraction, item: UIDragItem, animator: UIDragAnimating):void;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890870-dropinteraction
    dropInteraction_previewForDroppingItem_withDefault(interaction: UIDropInteraction, item: UIDragItem, defaultPreview: UITargetedDragPreview):UITargetedDragPreview;
    // https://developer.apple.com/documentation/uikit/uidropinteractiondelegate/2890898-dropinteraction
    dropInteraction_concludeDrop(interaction: UIDropInteraction, session: UIDropSession):void;
  }
}
declare namespace cocoascript {
  /**
   * An interaction to enable dragging of items from a view, employing a delegate to provide drag items and to respond to calls from the drag session.
   * https://developer.apple.com/documentation/uikit/uidraginteraction
   */
  interface UIDragInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidraginteraction/2890982-initwithdelegate
    initWithDelegate(delegate: UIDragInteractionDelegate):UIDragInteraction;
    // https://developer.apple.com/documentation/uikit/uidraginteraction/2919986-allowssimultaneousrecognitiondur
    allowsSimultaneousRecognitionDuringLift(): boolean;
    setAllowsSimultaneousRecognitionDuringLift(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidraginteraction/2891021-delegate
    delegate(): UIDragInteractionDelegate;
    setDelegate(value: UIDragInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidraginteraction/2891015-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidraginteraction/2891051-enabledbydefault
    enabledByDefault(): boolean;
    setEnabledByDefault(value: boolean): void;
    //
    alloc():UIDragInteraction;
    //
    init():UIDragInteraction;
  }
}

declare const UIDragInteraction: cocoascript.UIDragInteraction;
declare namespace cocoascript {
  /**
   * An interaction to enable dropping of items onto a view, employing a delegate to instantiate objects and respond to calls from the drop session.
   * https://developer.apple.com/documentation/uikit/uidropinteraction
   */
  interface UIDropInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidropinteraction/2890891-initwithdelegate
    initWithDelegate(delegate: UIDropInteractionDelegate):UIDropInteraction;
    // https://developer.apple.com/documentation/uikit/uidropinteraction/2890890-delegate
    delegate(): UIDropInteractionDelegate;
    setDelegate(value: UIDropInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidropinteraction/2890871-allowssimultaneousdropsessions
    allowsSimultaneousDropSessions(): boolean;
    setAllowsSimultaneousDropSessions(value: boolean): void;
    //
    alloc():UIDropInteraction;
    //
    init():UIDropInteraction;
  }
}

declare const UIDropInteraction: cocoascript.UIDropInteraction;
declare namespace cocoascript {
  /**
   * The interface for specifying the behavior of a spring-loaded interaction.
   * https://developer.apple.com/documentation/uikit/uispringloadedinteractionbehavior
   */
  interface UISpringLoadedInteractionBehavior extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractionbehavior/2897297-shouldallowinteraction
    shouldAllowInteraction_withContext(interaction: UISpringLoadedInteraction, context: UISpringLoadedInteractionContext):boolean;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractionbehavior/2897322-interactiondidfinish
    interactionDidFinish(interaction: UISpringLoadedInteraction):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface that determines if an object supports a spring-loaded interaction for drag and drop activities.
   * https://developer.apple.com/documentation/uikit/uispringloadedinteractionsupporting
   */
  interface UISpringLoadedInteractionSupporting extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractionsupporting/2897189-springloaded
    springLoaded(): boolean;
    setSpringLoaded(value: boolean): void;
  }
}
declare namespace cocoascript {
  /**
   * An interaction object for configuring and controlling spring-loaded, user-driven navigation during a drag activity.
   * https://developer.apple.com/documentation/uikit/uispringloadedinteraction
   */
  interface UISpringLoadedInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringloadedinteraction/2897337-initwithinteractionbehavior
    initWithInteractionBehavior_interactionEffect_activationHandler(interactionBehavior: UISpringLoadedInteractionBehavior, interactionEffect: UISpringLoadedInteractionEffect, handler: UISpringLoadedInteractionContext):UISpringLoadedInteraction;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteraction/2897354-initwithactivationhandler
    initWithActivationHandler(handler: UISpringLoadedInteractionContext):UISpringLoadedInteraction;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteraction/2897325-interactionbehavior
    interactionBehavior(): UISpringLoadedInteractionBehavior;
    setInteractionBehavior(value: UISpringLoadedInteractionBehavior): void;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteraction/2897379-interactioneffect
    interactionEffect(): UISpringLoadedInteractionEffect;
    setInteractionEffect(value: UISpringLoadedInteractionEffect): void;
    //
    alloc():UISpringLoadedInteraction;
    //
    init():UISpringLoadedInteraction;
  }
}

declare const UISpringLoadedInteraction: cocoascript.UISpringLoadedInteraction;
declare namespace cocoascript {
  /**
   * The interface an object implements to provide information about a spring-loaded interaction.
   * https://developer.apple.com/documentation/uikit/uispringloadedinteractioncontext
   */
  interface UISpringLoadedInteractionContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractioncontext/2897357-state
    state(): UISpringLoadedInteractionEffectState;
    setState(value: UISpringLoadedInteractionEffectState): void;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractioncontext/2897330-targetitem
    targetItem(): id;
    setTargetItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractioncontext/2897394-targetview
    targetView(): UIView;
    setTargetView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractioncontext/2897468-locationinview
    locationInView(view: UIView):CGPoint;
  }
}
declare namespace cocoascript {
  /**
   * The interface for providing visual styling to a spring-loaded interaction based on the interaction state.
   * https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffect
   */
  interface UISpringLoadedInteractionEffect extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffect/2897374-interaction
    interaction_didChangeWithContext(interaction: UISpringLoadedInteraction, context: UISpringLoadedInteractionContext):void;
  }
}
declare namespace cocoascript {
  /**
   * A representation of an underlying data item being dragged from one location to another.
   * https://developer.apple.com/documentation/uikit/uidragitem
   */
  interface UIDragItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidragitem/2890994-initwithitemprovider
    initWithItemProvider(itemProvider: NSItemProvider):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uidragitem/2890975-itemprovider
    itemProvider(): NSItemProvider;
    setItemProvider(value: NSItemProvider): void;
    // https://developer.apple.com/documentation/uikit/uidragitem/2890981-localobject
    localObject(): id;
    setLocalObject(value: id): void;
    // https://developer.apple.com/documentation/uikit/uidragitem/2890972-previewprovider
    previewProvider(): void;
    setPreviewProvider(value: void): void;
    //
    alloc():UIDragItem;
    //
    init():UIDragItem;
  }
}

declare const UIDragItem: cocoascript.UIDragItem;
declare namespace cocoascript {
  /**
   * The common interface for querying the state of both drag sessions and drop sessions.
   * https://developer.apple.com/documentation/uikit/uidragdropsession
   */
  interface UIDragDropSession extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2903561-canloadobjectsofclass
    canLoadObjectsOfClass(aClass: NSItemProviderReading):boolean;
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2891006-hasitemsconformingtotypeidentifi
    hasItemsConformingToTypeIdentifiers(typeIdentifiers: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2891030-items
    items(): UIDragItem;
    setItems(value: UIDragItem): void;
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2891062-allowsmoveoperation
    allowsMoveOperation(): boolean;
    setAllowsMoveOperation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2890983-restrictedtodraggingapplication
    restrictedToDraggingApplication(): boolean;
    setRestrictedToDraggingApplication(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidragdropsession/2891049-locationinview
    locationInView(view: UIView):CGPoint;
  }
}
declare namespace cocoascript {
  /**
   * The interface for configuring a drag session.
   * https://developer.apple.com/documentation/uikit/uidragsession
   */
  interface UIDragSession extends UIDragDropSession {
    // https://developer.apple.com/documentation/uikit/uidragsession/2891033-localcontext
    localContext(): id;
    setLocalContext(value: id): void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for providing custom animation alongside the system's lift, drop, and cancellation animations.
   * https://developer.apple.com/documentation/uikit/uidraganimating
   */
  interface UIDragAnimating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidraganimating/2890977-addanimations
    addAnimations(animations: void):void;
    // https://developer.apple.com/documentation/uikit/uidraganimating/2891061-addcompletion
    addCompletion(completion: UIViewAnimatingPosition):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for querying a drop session about its state and associated drag items.
   * https://developer.apple.com/documentation/uikit/uidropsession
   */
  interface UIDropSession extends NSProgressReporting {
    // https://developer.apple.com/documentation/uikit/uidropsession/2890985-localdragsession
    localDragSession(): UIDragSession;
    setLocalDragSession(value: UIDragSession): void;
    // https://developer.apple.com/documentation/uikit/uidropsession/2891058-loadobjectsofclass
    loadObjectsOfClass_completion(aClass: NSItemProviderReading, completion: NSItemProviderReading):NSProgress;
    // https://developer.apple.com/documentation/uikit/uidropsession/2890980-progressindicatorstyle
    progressIndicatorStyle(): UIDropSessionProgressIndicatorStyle;
    setProgressIndicatorStyle(value: UIDropSessionProgressIndicatorStyle): void;
  }
}
declare namespace cocoascript {
  /**
   * A configuration for the behavior of a drop interaction, required if a view accepts drop activities.
   * https://developer.apple.com/documentation/uikit/uidropproposal
   */
  interface UIDropProposal extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidropproposal/2890886-initwithdropoperation
    initWithDropOperation(operation: UIDropOperation):UIDropProposal;
    // https://developer.apple.com/documentation/uikit/uidropproposal/2890877-operation
    operation(): UIDropOperation;
    setOperation(value: UIDropOperation): void;
    // https://developer.apple.com/documentation/uikit/uidropproposal/2890897-precise
    precise(): boolean;
    setPrecise(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidropproposal/2890884-prefersfullsizepreview
    prefersFullSizePreview(): boolean;
    setPrefersFullSizePreview(value: boolean): void;
    //
    alloc():UIDropProposal;
    //
    init():UIDropProposal;
  }
}

declare const UIDropProposal: cocoascript.UIDropProposal;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidropoperation
  type UIDropOperation = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidropsessionprogressindicatorstyle
  type UIDropSessionProgressIndicatorStyle = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiitemproviderpresentationsizeproviding
   */
  interface UIItemProviderPresentationSizeProviding extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiitemproviderpresentationsizeproviding/2921674-preferredpresentationsizeforitem
    preferredPresentationSizeForItemProvider(): CGSize;
    setPreferredPresentationSizeForItemProvider(value: CGSize): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of parameters for adjusting the appearance of a drag item preview or a targeted drag item preview.
   * https://developer.apple.com/documentation/uikit/uidragpreviewparameters
   */
  interface UIDragPreviewParameters extends UIPreviewParameters {
    //
    alloc():UIDragPreviewParameters;
    //
    init():UIDragPreviewParameters;
  }
}

declare const UIDragPreviewParameters: cocoascript.UIDragPreviewParameters;
declare namespace cocoascript {
  /**
   * A graphical preview for a single drag item, used by the system after a drag has started and when no related animation is running.
   * https://developer.apple.com/documentation/uikit/uidragpreview
   */
  interface UIDragPreview extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidragpreview/2890915-initwithview
    initWithView(view: UIView):UIDragPreview;
    // https://developer.apple.com/documentation/uikit/uidragpreview/2890918-initwithview
    initWithView_parameters(view: UIView, parameters: UIDragPreviewParameters):UIDragPreview;
    // https://developer.apple.com/documentation/uikit/uidragpreview/2902369-previewforurl
    previewForURL(url: NSURL):UIDragPreview;
    // https://developer.apple.com/documentation/uikit/uidragpreview/2902371-previewforurl
    previewForURL_title(url: NSURL, title: string | cocoascript.NSString):UIDragPreview;
    // https://developer.apple.com/documentation/uikit/uidragpreview/2890925-parameters
    parameters(): UIDragPreviewParameters;
    setParameters(value: UIDragPreviewParameters): void;
    // https://developer.apple.com/documentation/uikit/uidragpreview/2890924-view
    view(): UIView;
    setView(value: UIView): void;
    //
    alloc():UIDragPreview;
    //
    init():UIDragPreview;
  }
}

declare const UIDragPreview: cocoascript.UIDragPreview;
declare namespace cocoascript {
  /**
   * A geometric specification for the source or destination of a drag item preview, used by the system when a user drops items or cancels a drag activity.
   * https://developer.apple.com/documentation/uikit/uidragpreviewtarget
   */
  interface UIDragPreviewTarget extends UIPreviewTarget {
    //
    alloc():UIDragPreviewTarget;
    //
    init():UIDragPreviewTarget;
  }
}

declare const UIDragPreviewTarget: cocoascript.UIDragPreviewTarget;
declare namespace cocoascript {
  /**
   * A drag item preview used by the system during lift, drop, or cancellation animation.
   * https://developer.apple.com/documentation/uikit/uitargeteddragpreview
   */
  interface UITargetedDragPreview extends UITargetedPreview {
    // https://developer.apple.com/documentation/uikit/uitargeteddragpreview/2902370-previewforurl
    previewForURL_target(url: NSURL, target: UIDragPreviewTarget):UITargetedDragPreview;
    // https://developer.apple.com/documentation/uikit/uitargeteddragpreview/2902368-previewforurl
    previewForURL_title_target(url: NSURL, title: string | cocoascript.NSString, target: UIDragPreviewTarget):UITargetedDragPreview;
    // https://developer.apple.com/documentation/uikit/uitargeteddragpreview/2890950-retargetedpreviewwithtarget
    retargetedPreviewWithTarget(newTarget: UIDragPreviewTarget):UITargetedDragPreview;
    //
    alloc():UITargetedDragPreview;
    //
    init():UITargetedDragPreview;
  }
}

declare const UITargetedDragPreview: cocoascript.UITargetedDragPreview;
declare namespace cocoascript {
  /**
   * An object that manages image data in your app.
   * https://developer.apple.com/documentation/uikit/uiimage
   */
  interface UIImage extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiimage/1624154-imagenamed
    imageNamed_inBundle_compatibleWithTraitCollection(name: string | cocoascript.NSString, bundle: NSBundle, traitCollection: UITraitCollection):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294226-imagenamed
    imageNamed_inBundle_withConfiguration(name: string | cocoascript.NSString, bundle: NSBundle, configuration: UIImageConfiguration):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624146-imagenamed
    imageNamed(name: string | cocoascript.NSString):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294234-systemimagenamed
    systemImageNamed_withConfiguration(name: string | cocoascript.NSString, configuration: UIImageConfiguration):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3295943-systemimagenamed
    systemImageNamed_compatibleWithTraitCollection(name: string | cocoascript.NSString, traitCollection: UITraitCollection):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294233-systemimagenamed
    systemImageNamed(name: string | cocoascript.NSString):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624123-imagewithcontentsoffile
    imageWithContentsOfFile(path: string | cocoascript.NSString):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624137-imagewithdata
    imageWithData(data: NSData):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624099-imagewithdata
    imageWithData_scale(data: NSData, scale: CGFloat):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624126-imagewithcgimage
    imageWithCGImage(cgImage: CGImageRef):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624124-imagewithcgimage
    imageWithCGImage_scale_orientation(cgImage: CGImageRef, scale: CGFloat, orientation: UIImageOrientation):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624111-imagewithciimage
    imageWithCIImage(ciImage: CIImage):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624152-imagewithciimage
    imageWithCIImage_scale_orientation(ciImage: CIImage, scale: CGFloat, orientation: UIImageOrientation):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624112-initwithcontentsoffile
    initWithContentsOfFile(path: string | cocoascript.NSString):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624106-initwithdata
    initWithData(data: NSData):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624109-initwithdata
    initWithData_scale(data: NSData, scale: CGFloat):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624090-initwithcgimage
    initWithCGImage(cgImage: CGImageRef):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624091-initwithcgimage
    initWithCGImage_scale_orientation(cgImage: CGImageRef, scale: CGFloat, orientation: UIImageOrientation):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624114-initwithciimage
    initWithCIImage(ciImage: CIImage):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624150-initwithciimage
    initWithCIImage_scale_orientation(ciImage: CIImage, scale: CGFloat, orientation: UIImageOrientation):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624094-animatedimagenamed
    animatedImageNamed_duration(name: string | cocoascript.NSString, duration: NSTimeInterval):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624149-animatedimagewithimages
    animatedImageWithImages_duration(images: UIImage, duration: NSTimeInterval):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624143-animatedresizableimagenamed
    animatedResizableImageNamed_capInsets_duration(name: string | cocoascript.NSString, capInsets: UIEdgeInsets, duration: NSTimeInterval):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624103-animatedresizableimagenamed
    animatedResizableImageNamed_capInsets_resizingMode_duration(name: string | cocoascript.NSString, capInsets: UIEdgeInsets, resizingMode: UIImageResizingMode, duration: NSTimeInterval):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294228-imagewithconfiguration
    imageWithConfiguration(configuration: UIImageConfiguration):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294225-imagebyapplyingsymbolconfigurati
    imageByApplyingSymbolConfiguration(configuration: UIImageSymbolConfiguration):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624140-imageflippedforrighttoleftlayout
    imageFlippedForRightToLeftLayoutDirection():UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/2113668-imagewithhorizontallyflippedorie
    imageWithHorizontallyFlippedOrientation():UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624153-imagewithrenderingmode
    imageWithRenderingMode(renderingMode: UIImageRenderingMode):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624100-imagewithalignmentrectinsets
    imageWithAlignmentRectInsets(alignmentInsets: UIEdgeInsets):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624102-resizableimagewithcapinsets
    resizableImageWithCapInsets(capInsets: UIEdgeInsets):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624127-resizableimagewithcapinsets
    resizableImageWithCapInsets_resizingMode(capInsets: UIEdgeInsets, resizingMode: UIImageResizingMode):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294229-imagewithoutbaseline
    imageWithoutBaseline():UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294227-imagewithbaselineoffsetfrombotto
    imageWithBaselineOffsetFromBottom(baselineOffset: CGFloat):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3294220-addimage
    addImage(): UIImage;
    setAddImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294230-removeimage
    removeImage(): UIImage;
    setRemoveImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294219-actionsimage
    actionsImage(): UIImage;
    setActionsImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3343561-checkmarkimage
    checkmarkImage(): UIImage;
    setCheckmarkImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3343562-strokedcheckmarkimage
    strokedCheckmarkImage(): UIImage;
    setStrokedCheckmarkImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624147-cgimage
    CGImage(): CGImageRef;
    setCGImage(value: CGImageRef): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624159-cgimage
    CGImage():CGImageRef;
    // https://developer.apple.com/documentation/uikit/uiimage/1624129-ciimage
    CIImage(): CIImage;
    setCIImage(value: CIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624117-images
    images(): UIImage;
    setImages(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624151-imageasset
    imageAsset(): UIImageAsset;
    setImageAsset(value: UIImageAsset): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624110-scale
    scale(): CGFloat;
    setScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624105-size
    size(): CGSize;
    setSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624141-imageorientation
    imageOrientation(): UIImageOrientation;
    setImageOrientation(value: UIImageOrientation): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624128-flipsforrighttoleftlayoutdirecti
    flipsForRightToLeftLayoutDirection(): boolean;
    setFlipsForRightToLeftLayoutDirection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624157-resizingmode
    resizingMode(): UIImageResizingMode;
    setResizingMode(value: UIImageResizingMode): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624155-duration
    duration(): NSTimeInterval;
    setDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624097-capinsets
    capInsets(): UIEdgeInsets;
    setCapInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624139-alignmentrectinsets
    alignmentRectInsets(): UIEdgeInsets;
    setAlignmentRectInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294232-symbolimage
    symbolImage(): boolean;
    setSymbolImage(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294223-configuration
    configuration(): UIImageConfiguration;
    setConfiguration(value: UIImageConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294231-symbolconfiguration
    symbolConfiguration(): UIImageSymbolConfiguration;
    setSymbolConfiguration(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624158-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294224-hasbaseline
    hasBaseline(): boolean;
    setHasBaseline(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3294221-baselineoffsetfrombottom
    baselineOffsetFromBottom(): CGFloat;
    setBaselineOffsetFromBottom(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624122-renderingmode
    renderingMode(): UIImageRenderingMode;
    setRenderingMode(value: UIImageRenderingMode): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1649497-imagerendererformat
    imageRendererFormat(): UIGraphicsImageRendererFormat;
    setImageRendererFormat(value: UIGraphicsImageRendererFormat): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3327300-imagewithtintcolor
    imageWithTintColor(color: UIColor):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3327301-imagewithtintcolor
    imageWithTintColor_renderingMode(color: UIColor, renderingMode: UIImageRenderingMode):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624132-drawatpoint
    drawAtPoint(point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624095-drawatpoint
    drawAtPoint_blendMode_alpha(point: CGPoint, blendMode: CGBlendMode, alpha: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624092-drawinrect
    drawInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624101-drawinrect
    drawInRect_blendMode_alpha(rect: CGRect, blendMode: CGBlendMode, alpha: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624144-drawaspatterninrect
    drawAsPatternInRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624145-stretchableimagewithleftcapwidth
    stretchableImageWithLeftCapWidth_topCapHeight(leftCapWidth: NSInteger, topCapHeight: NSInteger):UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/1624148-leftcapwidth
    leftCapWidth(): NSInteger;
    setLeftCapWidth(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiimage/1624116-topcapheight
    topCapHeight(): NSInteger;
    setTopCapHeight(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiimage/3750844-preparefordisplaywithcompletionh
    prepareForDisplayWithCompletionHandler(completionHandler: UIImage):void;
    // https://developer.apple.com/documentation/uikit/uiimage/3750845-preparethumbnailofsize
    prepareThumbnailOfSize_completionHandler(size: CGSize, completionHandler: UIImage):void;
    // https://developer.apple.com/documentation/uikit/uiimage/3750834-imagebypreparingfordisplay
    imageByPreparingForDisplay():UIImage;
    // https://developer.apple.com/documentation/uikit/uiimage/3750835-imagebypreparingthumbnailofsize
    imageByPreparingThumbnailOfSize(size: CGSize):UIImage;
    //
    alloc():UIImage;
    //
    init():UIImage;
  }
}

declare const UIImage: cocoascript.UIImage;
// https://developer.apple.com/documentation/uikit/1624115-uiimagejpegrepresentation
declare const UIImageJPEGRepresentation: cocoascript.CGFloat;
// https://developer.apple.com/documentation/uikit/1624096-uiimagepngrepresentation
declare const UIImagePNGRepresentation: cocoascript.UIImage;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibaselineadjustment
  type UIBaselineAdjustment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilinebreakmode
  type UILineBreakMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextalignment
  type UITextAlignment = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/nsshadowattributename
declare const NSShadowAttributeName: cocoascript.NSAttributedStringKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextalignment
  type NSTextAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nswritingdirection
  type NSWritingDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * Optional methods that delegates implement to handle editing and transaction processing.
   * https://developer.apple.com/documentation/uikit/nstextstorageobserving
   */
  interface NSTextStorageObserving extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextstorageobserving/3810051-textstorage
    textStorage(): NSTextStorage;
    setTextStorage(value: NSTextStorage): void;
    // https://developer.apple.com/documentation/uikit/nstextstorageobserving/3852588-performeditingtransactionfortext
    performEditingTransactionForTextStorage_usingBlock(textStorage: NSTextStorage, transaction: void):void;
    // https://developer.apple.com/documentation/uikit/nstextstorageobserving/3810050-processeditingfortextstorage
    processEditingForTextStorage_edited_range_changeInLength_invalidatedRange(textStorage: NSTextStorage, editMask: NSTextStorageEditActions, newCharRange: NSRange, delta: NSInteger, invalidatedCharRange: NSRange):void;
  }
}
declare namespace cocoascript {
  /**
   * The optional methods that delegates of content storage objects implement to handle content processing.
   * https://developer.apple.com/documentation/uikit/nstextcontentstoragedelegate
   */
  interface NSTextContentStorageDelegate extends NSTextContentManagerDelegate {
    // https://developer.apple.com/documentation/uikit/nstextcontentstoragedelegate/3809940-textcontentstorage
    textContentStorage_textParagraphWithRange(textContentStorage: NSTextContentStorage, range: NSRange):NSTextParagraph;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that objects implement to provide data for, and manage text selections.
   * https://developer.apple.com/documentation/uikit/nstextselectiondatasource
   */
  interface NSTextSelectionDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801840-documentrange
    documentRange(): NSTextRange;
    setDocumentRange(value: NSTextRange): void;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801841-enumeratecaretoffsetsinlinefragm
    enumerateCaretOffsetsInLineFragmentAtLocation_usingBlock(location: NSTextLocation, block: boolean):void;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801842-enumeratecontainerboundariesfrom
    enumerateContainerBoundariesFromLocation_reverse_usingBlock(location: NSTextLocation, reverse: boolean, block: boolean):void;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801843-enumeratesubstringsfromlocation
    enumerateSubstringsFromLocation_options_usingBlock(location: NSTextLocation, options: NSStringEnumerationOptions, block: boolean):void;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801846-locationfromlocation
    locationFromLocation_withOffset(location: NSTextLocation, offset: NSInteger):NSTextLocation;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801845-linefragmentrangeforpoint
    lineFragmentRangeForPoint_inContainerAtLocation(point: CGPoint, location: NSTextLocation):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801847-offsetfromlocation
    offsetFromLocation_toLocation(from: NSTextLocation, to: NSTextLocation):NSInteger;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801848-textrangeforselectiongranularity
    textRangeForSelectionGranularity_enclosingLocation(selectionGranularity: NSTextSelectionGranularity, location: NSTextLocation):NSTextRange;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801839-basewritingdirectionatlocation
    baseWritingDirectionAtLocation(location: NSTextLocation):NSTextSelectionNavigationWritingDirection;
    // https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3852580-textlayoutorientationatlocation
    textLayoutOrientationAtLocation(location: NSTextLocation):NSTextSelectionNavigationLayoutOrientation;
  }
}
declare namespace cocoascript {
  /**
   * Optional methods that delegates implement to respond to layout changes.
   * https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate
   */
  interface NSTextLayoutManagerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3824749-textlayoutmanager
    textLayoutManager_renderingAttributesForLink_atLocation_defaultAttributes(textLayoutManager: NSTextLayoutManager, link: NSTextLayoutManagerDelegate, location: NSTextLocation, renderingAttributes: NSTextLayoutManagerDelegate):NSTextLayoutManagerDelegate;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3810021-textlayoutmanager
    textLayoutManager_shouldBreakLineBeforeLocation_hyphenating(textLayoutManager: NSTextLayoutManager, location: NSTextLocation, hyphenating: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3810024-textlayoutmanager
    textLayoutManager_textLayoutFragmentForLocation_inTextElement(textLayoutManager: NSTextLayoutManager, location: NSTextLocation, textElement: NSTextElement):NSTextLayoutFragment;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutmanagersegmenttype
  type NSTextLayoutManagerSegmentType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutmanagersegmentoptions
  type NSTextLayoutManagerSegmentOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstexteffectstyle
  type NSTextEffectStyle = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nswritingdirectionformattype
  type NSWritingDirectionFormatType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsunderlinestyle
  type NSUnderlineStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsattributedstringdocumentattributekey
  type NSAttributedStringDocumentAttributeKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsattributedstringdocumenttype
  type NSAttributedStringDocumentType = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutsectionkey
  type NSTextLayoutSectionKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsattributedstringdocumentreadingoptionkey
  type NSAttributedStringDocumentReadingOptionKey = cocoascript.NSString;
}
declare namespace cocoascript {
  /**
   * The optional methods that delegates of text storage objects implement to handle text-edit processing.
   * https://developer.apple.com/documentation/uikit/nstextstoragedelegate
   */
  interface NSTextStorageDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1534795-textstorage
    textStorage_willProcessEditing_range_changeInLength(textStorage: NSTextStorage, editedMask: NSTextStorageEditActions, editedRange: NSRange, delta: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1534375-textstorage
    textStorage_didProcessEditing_range_changeInLength(textStorage: NSTextStorage, editedMask: NSTextStorageEditActions, editedRange: NSRange, delta: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1808519-textstoragewillprocessediting
    ():void;
    // https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1808521-textstoragedidprocessediting
    ():void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextstorageeditactions
  type NSTextStorageEditActions = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/nstextstoragewillprocesseditingnotification
declare const NSTextStorageWillProcessEditingNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/nstextstoragedidprocesseditingnotification
declare const NSTextStorageDidProcessEditingNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * The optional methods that delegates of content manager objects implement for customizing or validating text elements.
   * https://developer.apple.com/documentation/uikit/nstextcontentmanagerdelegate
   */
  interface NSTextContentManagerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextcontentmanagerdelegate/3809932-textcontentmanager
    textContentManager_textElementAtLocation(textContentManager: NSTextContentManager, location: NSTextLocation):NSTextElement;
    // https://developer.apple.com/documentation/uikit/nstextcontentmanagerdelegate/3852566-textcontentmanager
    textContentManager_shouldEnumerateTextElement_options(textContentManager: NSTextContentManager, textElement: NSTextElement, options: NSTextContentManagerEnumerationOptions):boolean;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextcontentmanagerenumerationoptions
  type NSTextContentManagerEnumerationOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutfragmentenumerationoptions
  type NSTextLayoutFragmentEnumerationOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * Optional methods that delegates implement to reposond to viewport layout changes.
   * https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate
   */
  interface NSTextViewportLayoutControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824776-textviewportlayoutcontroller
    textViewportLayoutController_configureRenderingSurfaceForTextLayoutFragment(textViewportLayoutController: NSTextViewportLayoutController, textLayoutFragment: NSTextLayoutFragment):void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824777-textviewportlayoutcontrollerdidl
    textViewportLayoutControllerDidLayout(textViewportLayoutController: NSTextViewportLayoutController):void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824778-textviewportlayoutcontrollerwill
    textViewportLayoutControllerWillLayout(textViewportLayoutController: NSTextViewportLayoutController):void;
    // https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824779-viewportboundsfortextviewportlay
    viewportBoundsForTextViewportLayoutController(textViewportLayoutController: NSTextViewportLayoutController):CGRect;
  }
}
declare namespace cocoascript {
  /**
   * A set of optional methods that delegates of layout manager objects implement.
   * https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate
   */
  interface NSLayoutManagerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402993-layoutmanagerdidinvalidatelayout
    layoutManagerDidInvalidateLayout(sender: NSLayoutManager):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403073-layoutmanager
    layoutManager_shouldGenerateGlyphs_properties_characterIndexes_font_forGlyphRange(layoutManager: NSLayoutManager, glyphs: CGGlyph, props: NSGlyphProperty, charIndexes: NSUInteger, aFont: UIFont, glyphRange: NSRange):NSUInteger;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403167-layoutmanager
    layoutManager_shouldUseAction_forControlCharacterAtIndex(layoutManager: NSLayoutManager, action: NSControlCharacterAction, charIndex: NSUInteger):NSControlCharacterAction;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402926-layoutmanager
    layoutManager_didCompleteLayoutForTextContainer_atEnd(layoutManager: NSLayoutManager, textContainer: NSTextContainer, layoutFinishedFlag: boolean):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403049-layoutmanager
    layoutManager_textContainer_didChangeGeometryFromSize(layoutManager: NSLayoutManager, textContainer: NSTextContainer, oldSize: CGSize):void;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403128-layoutmanager
    layoutManager_shouldBreakLineByHyphenatingBeforeCharacterAtIndex(layoutManager: NSLayoutManager, charIndex: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403051-layoutmanager
    layoutManager_shouldBreakLineByWordBeforeCharacterAtIndex(layoutManager: NSLayoutManager, charIndex: NSUInteger):boolean;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402948-layoutmanager
    layoutManager_lineSpacingAfterGlyphAtIndex_withProposedLineFragmentRect(layoutManager: NSLayoutManager, glyphIndex: NSUInteger, rect: CGRect):CGFloat;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403076-layoutmanager
    layoutManager_paragraphSpacingAfterGlyphAtIndex_withProposedLineFragmentRect(layoutManager: NSLayoutManager, glyphIndex: NSUInteger, rect: CGRect):CGFloat;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403177-layoutmanager
    layoutManager_paragraphSpacingBeforeGlyphAtIndex_withProposedLineFragmentRect(layoutManager: NSLayoutManager, glyphIndex: NSUInteger, rect: CGRect):CGFloat;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402922-layoutmanager
    layoutManager_boundingBoxForControlGlyphAtIndex_forTextContainer_proposedLineFragment_glyphPosition_characterIndex(layoutManager: NSLayoutManager, glyphIndex: NSUInteger, textContainer: NSTextContainer, proposedRect: CGRect, glyphPosition: CGPoint, charIndex: NSUInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403122-layoutmanager
    layoutManager_shouldSetLineFragmentRect_lineFragmentUsedRect_baselineOffset_inTextContainer_forGlyphRange(layoutManager: NSLayoutManager, lineFragmentRect: CGRect, lineFragmentUsedRect: CGRect, baselineOffset: CGFloat, textContainer: NSTextContainer, glyphRange: NSRange):boolean;
    // https://developer.apple.com/documentation/appkit/nslayoutmanagerdelegate/1403085-layoutmanager
    layoutManager_shouldUseTemporaryAttributes_forDrawingToScreen_atCharacterIndex_effectiveRange(layoutManager: NSLayoutManager, attrs: NSLayoutManagerDelegate, toScreen: boolean, charIndex: NSUInteger, effectiveCharRange: NSRangePointer):NSLayoutManagerDelegate;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsglyphproperty
  type NSGlyphProperty = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextlayoutorientation
  type NSTextLayoutOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An interface you implement that represents an abstract location inside your document’s content.
   * https://developer.apple.com/documentation/uikit/nstextlocation
   */
  interface NSTextLocation extends NSObject {
    // https://developer.apple.com/documentation/uikit/nstextlocation/3801801-compare
    compare(location: NSTextLocation):NSComparisonResult;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionaffinity
  type NSTextSelectionAffinity = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectiongranularity
  type NSTextSelectionGranularity = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionnavigationmodifier
  type NSTextSelectionNavigationModifier = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionnavigationdestination
  type NSTextSelectionNavigationDestination = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionnavigationdirection
  type NSTextSelectionNavigationDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nslinebreakmode
  type NSLineBreakMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nslinebreakstrategy
  type NSLineBreakStrategy = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstexttaboptionkey
  type NSTextTabOptionKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/nsattachmentattributename
declare const NSAttachmentAttributeName: cocoascript.NSAttributedStringKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptorsymbolictraits
  type UIFontDescriptorSymbolicTraits = number;
}
// https://developer.apple.com/documentation/uikit/nsbackgroundcolorattributename
declare const NSBackgroundColorAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsbaselineoffsetattributename
declare const NSBaselineOffsetAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsexpansionattributename
declare const NSExpansionAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsfontattributename
declare const NSFontAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsforegroundcolorattributename
declare const NSForegroundColorAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nskernattributename
declare const NSKernAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsligatureattributename
declare const NSLigatureAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nslinkattributename
declare const NSLinkAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsobliquenessattributename
declare const NSObliquenessAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsparagraphstyleattributename
declare const NSParagraphStyleAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsstrikethroughcolorattributename
declare const NSStrikethroughColorAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsstrikethroughstyleattributename
declare const NSStrikethroughStyleAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsstrokecolorattributename
declare const NSStrokeColorAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsstrokewidthattributename
declare const NSStrokeWidthAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nstexteffectattributename
declare const NSTextEffectAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsunderlinecolorattributename
declare const NSUnderlineColorAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsunderlinestyleattributename
declare const NSUnderlineStyleAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nsverticalglyphformattributename
declare const NSVerticalGlyphFormAttributeName: cocoascript.NSAttributedStringKey;
declare namespace cocoascript {
  /**
   * An object that describes a single user interaction with your app.
   * https://developer.apple.com/documentation/uikit/uievent
   */
  interface UIEvent extends NSObject {
    // https://developer.apple.com/documentation/uikit/uievent/1613836-alltouches
    allTouches(): UITouch;
    setAllTouches(value: UITouch): void;
    // https://developer.apple.com/documentation/uikit/uievent/1613812-touchesforview
    touchesForView(view: UIView):UITouch;
    // https://developer.apple.com/documentation/uikit/uievent/1613794-touchesforwindow
    touchesForWindow(window: UIWindow):UITouch;
    // https://developer.apple.com/documentation/uikit/uievent/1613808-coalescedtouchesfortouch
    coalescedTouchesForTouch(touch: UITouch):UITouch;
    // https://developer.apple.com/documentation/uikit/uievent/1613814-predictedtouchesfortouch
    predictedTouchesForTouch(touch: UITouch):UITouch;
    // https://developer.apple.com/documentation/uikit/uievent/1613790-timestamp
    timestamp(): NSTimeInterval;
    setTimestamp(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uievent/1613840-type
    type(): UIEventType;
    setType(value: UIEventType): void;
    // https://developer.apple.com/documentation/uikit/uievent/1613824-subtype
    subtype(): UIEventSubtype;
    setSubtype(value: UIEventSubtype): void;
    // https://developer.apple.com/documentation/uikit/uievent/1613832-touchesforgesturerecognizer
    touchesForGestureRecognizer(gesture: UIGestureRecognizer):UITouch;
    // https://developer.apple.com/documentation/uikit/uievent/3538960-buttonmask
    buttonMask(): UIEventButtonMask;
    setButtonMask(value: UIEventButtonMask): void;
    // https://developer.apple.com/documentation/uikit/uievent/3538961-modifierflags
    modifierFlags(): UIKeyModifierFlags;
    setModifierFlags(value: UIKeyModifierFlags): void;
    //
    alloc():UIEvent;
    //
    init():UIEvent;
  }
}

declare const UIEvent: cocoascript.UIEvent;
declare namespace cocoascript {
  /**
   * An object representing the location, size, movement, and force of a touch occurring on the screen.
   * https://developer.apple.com/documentation/uikit/uitouch
   */
  interface UITouch extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitouch/1618116-locationinview
    locationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uitouch/1618135-previouslocationinview
    previousLocationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uitouch/1618109-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618126-window
    window(): UIWindow;
    setWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618106-majorradius
    majorRadius(): CGFloat;
    setMajorRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618120-majorradiustolerance
    majorRadiusTolerance(): CGFloat;
    setMajorRadiusTolerance(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618134-preciselocationinview
    preciseLocationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uitouch/1618129-precisepreviouslocationinview
    precisePreviousLocationInView(view: UIView):CGPoint;
    // https://developer.apple.com/documentation/uikit/uitouch/1618132-tapcount
    tapCount(): NSUInteger;
    setTapCount(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618144-timestamp
    timestamp(): NSTimeInterval;
    setTimestamp(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618143-type
    type(): UITouchType;
    setType(value: UITouchType): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618113-phase
    phase(): UITouchPhase;
    setPhase(value: UITouchPhase): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618110-force
    force(): CGFloat;
    setForce(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618121-maximumpossibleforce
    maximumPossibleForce(): CGFloat;
    setMaximumPossibleForce(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618118-altitudeangle
    altitudeAngle(): CGFloat;
    setAltitudeAngle(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618131-azimuthangleinview
    azimuthAngleInView(view: UIView):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitouch/1618133-azimuthunitvectorinview
    azimuthUnitVectorInView(view: UIView):CGVector;
    // https://developer.apple.com/documentation/uikit/uitouch/1618130-estimatedproperties
    estimatedProperties(): UITouchProperties;
    setEstimatedProperties(value: UITouchProperties): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618119-estimatedpropertiesexpectingupda
    estimatedPropertiesExpectingUpdates(): UITouchProperties;
    setEstimatedPropertiesExpectingUpdates(value: UITouchProperties): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618137-estimationupdateindex
    estimationUpdateIndex(): NSNumber;
    setEstimationUpdateIndex(value: NSNumber): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1618114-gesturerecognizers
    gestureRecognizers(): UIGestureRecognizer;
    setGestureRecognizers(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uitouch/1614836-locationinnode
    locationInNode(node: SKNode):CGPoint;
    // https://developer.apple.com/documentation/uikit/uitouch/1615023-previouslocationinnode
    previousLocationInNode(node: SKNode):CGPoint;
    //
    alloc():UITouch;
    //
    init():UITouch;
  }
}

declare const UITouch: cocoascript.UITouch;
declare namespace cocoascript {
  /**
   * An object that represents the presence or movement of a button press on the screen for a particular event.
   * https://developer.apple.com/documentation/uikit/uipress
   */
  interface UIPress extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipress/1620364-force
    force(): CGFloat;
    setForce(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620376-gesturerecognizers
    gestureRecognizers(): UIGestureRecognizer;
    setGestureRecognizers(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620374-responder
    responder(): UIResponder;
    setResponder(value: UIResponder): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620366-window
    window(): UIWindow;
    setWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uipress/3526315-key
    key(): UIKey;
    setKey(value: UIKey): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620370-type
    type(): UIPressType;
    setType(value: UIPressType): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620367-phase
    phase(): UIPressPhase;
    setPhase(value: UIPressPhase): void;
    // https://developer.apple.com/documentation/uikit/uipress/1620360-timestamp
    timestamp(): NSTimeInterval;
    setTimestamp(value: NSTimeInterval): void;
    //
    alloc():UIPress;
    //
    init():UIPress;
  }
}

declare const UIPress: cocoascript.UIPress;
declare namespace cocoascript {
  /**
   * An event that describes the state of a set of physical buttons that are available to the device, such as those on an associated remote or game controller.
   * https://developer.apple.com/documentation/uikit/uipressesevent
   */
  interface UIPressesEvent extends UIEvent {
    // https://developer.apple.com/documentation/uikit/uipressesevent/1623575-allpresses
    allPresses(): UIPress;
    setAllPresses(value: UIPress): void;
    // https://developer.apple.com/documentation/uikit/uipressesevent/1623574-pressesforgesturerecognizer
    pressesForGestureRecognizer(gesture: UIGestureRecognizer):UIPress;
    //
    alloc():UIPressesEvent;
    //
    init():UIPressesEvent;
  }
}

declare const UIPressesEvent: cocoascript.UIPressesEvent;
declare namespace cocoascript {
  /**
   * A set of methods implemented by the delegate of a gesture recognizer to fine-tune an app’s gesture-recognition behavior.
   * https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate
   */
  interface UIGestureRecognizerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624213-gesturerecognizershouldbegin
    gestureRecognizerShouldBegin(gestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624214-gesturerecognizer
    gestureRecognizer_shouldReceiveTouch(gestureRecognizer: UIGestureRecognizer, touch: UITouch):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624216-gesturerecognizer
    gestureRecognizer_shouldReceivePress(gestureRecognizer: UIGestureRecognizer, press: UIPress):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/3538976-gesturerecognizer
    gestureRecognizer_shouldReceiveEvent(gestureRecognizer: UIGestureRecognizer, event: UIEvent):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624208-gesturerecognizer
    gestureRecognizer_shouldRecognizeSimultaneouslyWithGestureRecognizer(gestureRecognizer: UIGestureRecognizer, otherGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624229-gesturerecognizer
    gestureRecognizer_shouldRequireFailureOfGestureRecognizer(gestureRecognizer: UIGestureRecognizer, otherGestureRecognizer: UIGestureRecognizer):boolean;
    // https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624222-gesturerecognizer
    gestureRecognizer_shouldBeRequiredToFailByGestureRecognizer(gestureRecognizer: UIGestureRecognizer, otherGestureRecognizer: UIGestureRecognizer):boolean;
  }
}
declare namespace cocoascript {
  /**
   * A class that registers a view to provide a custom user experience in response to 3D Touch interactions.
   * https://developer.apple.com/documentation/uikit/uipreviewinteraction
   */
  interface UIPreviewInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewinteraction/1648541-initwithview
    initWithView(view: UIView):UIPreviewInteraction;
    // https://developer.apple.com/documentation/uikit/uipreviewinteraction/1648537-delegate
    delegate(): UIPreviewInteractionDelegate;
    setDelegate(value: UIPreviewInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipreviewinteraction/1648544-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipreviewinteraction/1648539-cancelinteraction
    cancelInteraction():void;
    // https://developer.apple.com/documentation/uikit/uipreviewinteraction/1648545-locationincoordinatespace
    locationInCoordinateSpace(coordinateSpace: UICoordinateSpace):CGPoint;
    //
    alloc():UIPreviewInteraction;
    //
    init():UIPreviewInteraction;
  }
}

declare const UIPreviewInteraction: cocoascript.UIPreviewInteraction;
declare namespace cocoascript {
  /**
   * A set of methods for communicating the progress of a preview interaction.
   * https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate
   */
  interface UIPreviewInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate/1648538-previewinteractionshouldbegin
    previewInteractionShouldBegin(previewInteraction: UIPreviewInteraction):boolean;
    // https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate/1648546-previewinteraction
    previewInteraction_didUpdatePreviewTransition_ended(previewInteraction: UIPreviewInteraction, transitionProgress: CGFloat, ended: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate/1648540-previewinteraction
    previewInteraction_didUpdateCommitTransition_ended(previewInteraction: UIPreviewInteraction, transitionProgress: CGFloat, ended: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate/1648547-previewinteractiondidcancel
    previewInteractionDidCancel(previewInteraction: UIPreviewInteraction):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that defines the styles you can apply to peek quick actions and peek quick action groups, and defines a read-only accessor for the user-visible title of a peek quick action.
   * https://developer.apple.com/documentation/uikit/uipreviewactionitem
   */
  interface UIPreviewActionItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewactionitem/1621352-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
  }
}
declare namespace cocoascript {
  /**
   * An interaction that enables support for effects on a view or customizes the pointer's appearance within a region of an app.
   * https://developer.apple.com/documentation/uikit/uipointerinteraction
   */
  interface UIPointerInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerinteraction/3538989-initwithdelegate
    initWithDelegate(delegate: UIPointerInteractionDelegate):UIPointerInteraction;
    // https://developer.apple.com/documentation/uikit/uipointerinteraction/3538987-delegate
    delegate(): UIPointerInteractionDelegate;
    setDelegate(value: UIPointerInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipointerinteraction/3538988-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipointerinteraction/3538990-invalidate
    invalidate():void;
    //
    alloc():UIPointerInteraction;
    //
    init():UIPointerInteraction;
  }
}

declare const UIPointerInteraction: cocoascript.UIPointerInteraction;
declare namespace cocoascript {
  /**
   * An interface for handling pointer movements within the interaction's view.
   * https://developer.apple.com/documentation/uikit/uipointerinteractiondelegate
   */
  interface UIPointerInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerinteractiondelegate/3538995-pointerinteraction
    pointerInteraction_regionForRequest_defaultRegion(interaction: UIPointerInteraction, request: UIPointerRegionRequest, defaultRegion: UIPointerRegion):UIPointerRegion;
    // https://developer.apple.com/documentation/uikit/uipointerinteractiondelegate/3538996-pointerinteraction
    pointerInteraction_styleForRegion(interaction: UIPointerInteraction, region: UIPointerRegion):UIPointerStyle;
    // https://developer.apple.com/documentation/uikit/uipointerinteractiondelegate/3538997-pointerinteraction
    pointerInteraction_willEnterRegion_animator(interaction: UIPointerInteraction, region: UIPointerRegion, animator: UIPointerInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uipointerinteractiondelegate/3538998-pointerinteraction
    pointerInteraction_willExitRegion_animator(interaction: UIPointerInteraction, region: UIPointerRegion, animator: UIPointerInteractionAnimating):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that defines the pointer shape and effect.
   * https://developer.apple.com/documentation/uikit/uipointerstyle
   */
  interface UIPointerStyle extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerstyle/3539025-hiddenpointerstyle
    hiddenPointerStyle():UIPointerStyle;
    // https://developer.apple.com/documentation/uikit/uipointerstyle/3539026-stylewitheffect
    styleWithEffect_shape(effect: UIPointerEffect, shape: UIPointerShape):UIPointerStyle;
    // https://developer.apple.com/documentation/uikit/uipointerstyle/3539027-stylewithshape
    styleWithShape_constrainedAxes(shape: UIPointerShape, axes: UIAxis):UIPointerStyle;
    // https://developer.apple.com/documentation/uikit/uipointerstyle/3752210-accessories
    accessories(): UIPointerAccessory;
    setAccessories(value: UIPointerAccessory): void;
    // https://developer.apple.com/documentation/uikit/uipointerstyle/3752211-systempointerstyle
    systemPointerStyle():UIPointerStyle;
    //
    alloc():UIPointerStyle;
    //
    init():UIPointerStyle;
  }
}

declare const UIPointerStyle: cocoascript.UIPointerStyle;
declare namespace cocoascript {
  /**
   * An effect where the pointer slides under the given view and disappears as the view scales up and gains a shadow.
   * https://developer.apple.com/documentation/uikit/uipointerlifteffect
   */
  interface UIPointerLiftEffect extends UIPointerEffect {
    //
    alloc():UIPointerLiftEffect;
    //
    init():UIPointerLiftEffect;
  }
}

declare const UIPointerLiftEffect: cocoascript.UIPointerLiftEffect;
declare namespace cocoascript {
  /**
   * A specialized button for placement on a toolbar or tab bar.
   * https://developer.apple.com/documentation/uikit/uibarbuttonitem
   */
  interface UIBarButtonItem extends UIBarItem {
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617153-initwithbarbuttonsystemitem
    initWithBarButtonSystemItem_target_action(systemItem: UIBarButtonSystemItem, target: UIBarButtonItem, action: SEL):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617151-initwithcustomview
    initWithCustomView(customView: UIView):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617163-initwithimage
    initWithImage_style_target_action(image: UIImage, style: UIBarButtonItemStyle, target: UIBarButtonItem, action: SEL):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617148-initwithtitle
    initWithTitle_style_target_action(title: string | cocoascript.NSString, style: UIBarButtonItemStyle, target: UIBarButtonItem, action: SEL):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617118-initwithimage
    initWithImage_landscapeImagePhone_style_target_action(image: UIImage, landscapeImagePhone: UIImage, style: UIBarButtonItemStyle, target: UIBarButtonItem, action: SEL):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617166-init
    init():UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617111-initwithcoder
    initWithCoder(coder: NSCoder):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600340-initwithbarbuttonsystemitem
    initWithBarButtonSystemItem_menu(systemItem: UIBarButtonSystemItem, menu: UIMenu):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600341-initwithbarbuttonsystemitem
    initWithBarButtonSystemItem_primaryAction(systemItem: UIBarButtonSystemItem, primaryAction: UIAction):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600342-initwithimage
    initWithImage_menu(image: UIImage, menu: UIMenu):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600343-initwithprimaryaction
    initWithPrimaryAction(primaryAction: UIAction):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600344-initwithtitle
    initWithTitle_menu(title: string | cocoascript.NSString, menu: UIMenu):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600338-fixedspaceitemofwidth
    fixedSpaceItemOfWidth(width: CGFloat):UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600339-flexiblespaceitem
    flexibleSpaceItem():UIBarButtonItem;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617154-target
    target(): id;
    setTarget(value: id): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617127-action
    action(): SEL;
    setAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617114-style
    style(): UIBarButtonItemStyle;
    setStyle(value: UIBarButtonItemStyle): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617132-possibletitles
    possibleTitles(): string | cocoascript.NSString;
    setPossibleTitles(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617155-width
    width(): CGFloat;
    setWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617129-customview
    customView(): UIView;
    setCustomView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3601188-menu
    menu(): UIMenu;
    setMenu(value: UIMenu): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600345-primaryaction
    primaryAction(): UIAction;
    setPrimaryAction(value: UIAction): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617135-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617125-backbuttonbackgroundimageforstat
    backButtonBackgroundImageForState_barMetrics(state: UIControlState, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617128-setbackbuttonbackgroundimage
    setBackButtonBackgroundImage_forState_barMetrics(backgroundImage: UIImage, state: UIControlState, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617145-backbuttontitlepositionadjustmen
    backButtonTitlePositionAdjustmentForBarMetrics(barMetrics: UIBarMetrics):UIOffset;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617139-setbackbuttontitlepositionadjust
    setBackButtonTitlePositionAdjustment_forBarMetrics(adjustment: UIOffset, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617120-backbuttonbackgroundverticalposi
    backButtonBackgroundVerticalPositionAdjustmentForBarMetrics(barMetrics: UIBarMetrics):CGFloat;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617124-setbackbuttonbackgroundverticalp
    setBackButtonBackgroundVerticalPositionAdjustment_forBarMetrics(adjustment: CGFloat, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617143-backgroundverticalpositionadjust
    backgroundVerticalPositionAdjustmentForBarMetrics(barMetrics: UIBarMetrics):CGFloat;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617141-setbackgroundverticalpositionadj
    setBackgroundVerticalPositionAdjustment_forBarMetrics(adjustment: CGFloat, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617134-backgroundimageforstate
    backgroundImageForState_barMetrics(state: UIControlState, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617138-setbackgroundimage
    setBackgroundImage_forState_barMetrics(backgroundImage: UIImage, state: UIControlState, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617117-backgroundimageforstate
    backgroundImageForState_style_barMetrics(state: UIControlState, style: UIBarButtonItemStyle, barMetrics: UIBarMetrics):UIImage;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617161-setbackgroundimage
    setBackgroundImage_forState_style_barMetrics(backgroundImage: UIImage, state: UIControlState, style: UIBarButtonItemStyle, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617160-titlepositionadjustmentforbarmet
    titlePositionAdjustmentForBarMetrics(barMetrics: UIBarMetrics):UIOffset;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617149-settitlepositionadjustment
    setTitlePositionAdjustment_forBarMetrics(adjustment: UIOffset, barMetrics: UIBarMetrics):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/1623564-buttongroup
    buttonGroup(): UIBarButtonItemGroup;
    setButtonGroup(value: UIBarButtonItemGroup): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3752177-changesselectionasprimaryaction
    changesSelectionAsPrimaryAction(): boolean;
    setChangesSelectionAsPrimaryAction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitem/3752178-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    //
    alloc():UIBarButtonItem;
    //
    init():UIBarButtonItem;
  }
}

declare const UIBarButtonItem: cocoascript.UIBarButtonItem;
declare namespace cocoascript {
  /**
   * An interface for modifying an interaction animation in coordination with the pointer effect animations.
   * https://developer.apple.com/documentation/uikit/uipointerinteractionanimating
   */
  interface UIPointerInteractionAnimating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerinteractionanimating/3538992-addanimations
    addAnimations(animations: void):void;
    // https://developer.apple.com/documentation/uikit/uipointerinteractionanimating/3538993-addcompletion
    addCompletion(completion: boolean):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that defines the shape of custom pointers.
   * https://developer.apple.com/documentation/uikit/uipointershape
   */
  interface UIPointerShape extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointershape/3539020-beamwithpreferredlength
    beamWithPreferredLength_axis(length: CGFloat, axis: UIAxis):UIPointerShape;
    // https://developer.apple.com/documentation/uikit/uipointershape/3539021-shapewithpath
    shapeWithPath(path: UIBezierPath):UIPointerShape;
    // https://developer.apple.com/documentation/uikit/uipointershape/3539022-shapewithroundedrect
    shapeWithRoundedRect(rect: CGRect):UIPointerShape;
    // https://developer.apple.com/documentation/uikit/uipointershape/3539023-shapewithroundedrect
    shapeWithRoundedRect_cornerRadius(rect: CGRect, cornerRadius: CGFloat):UIPointerShape;
    //
    alloc():UIPointerShape;
    //
    init():UIPointerShape;
  }
}

declare const UIPointerShape: cocoascript.UIPointerShape;
declare namespace cocoascript {
  /**
   * An effect that alters a view's appearance when a pointer enters the current region.
   * https://developer.apple.com/documentation/uikit/uipointereffect
   */
  interface UIPointerEffect extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointereffect/3539008-preview
    preview(): UITargetedPreview;
    setPreview(value: UITargetedPreview): void;
    // https://developer.apple.com/documentation/uikit/uipointereffect/3539007-effectwithpreview
    effectWithPreview(preview: UITargetedPreview):UIPointerEffect;
    //
    alloc():UIPointerEffect;
    //
    init():UIPointerEffect;
  }
}

declare const UIPointerEffect: cocoascript.UIPointerEffect;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uipointeraccessory
   */
  interface UIPointerAccessory extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointeraccessory/3752193-accessorywithshape
    accessoryWithShape_position(shape: UIPointerShape, position: UIPointerAccessoryPosition):UIPointerAccessory;
    // https://developer.apple.com/documentation/uikit/uipointeraccessory/3752194-arrowaccessorywithposition
    arrowAccessoryWithPosition(position: UIPointerAccessoryPosition):UIPointerAccessory;
    // https://developer.apple.com/documentation/uikit/uipointeraccessory/3752195-orientationmatchesangle
    orientationMatchesAngle(): boolean;
    setOrientationMatchesAngle(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipointeraccessory/3752197-shape
    shape(): UIPointerShape;
    setShape(value: UIPointerShape): void;
    // https://developer.apple.com/documentation/uikit/uipointeraccessory/3752196-position
    position(): UIPointerAccessoryPosition;
    setPosition(value: UIPointerAccessoryPosition): void;
    //
    alloc():UIPointerAccessory;
    //
    init():UIPointerAccessory;
  }
}

declare const UIPointerAccessory: cocoascript.UIPointerAccessory;
declare namespace cocoascript {
  /**
   * A rectangular region that interacts with pointer movements.
   * https://developer.apple.com/documentation/uikit/uipointerregion
   */
  interface UIPointerRegion extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerregion/3539005-regionwithrect
    regionWithRect_identifier(rect: CGRect, identifier: NSObject):UIPointerRegion;
    // https://developer.apple.com/documentation/uikit/uipointerregion/3539004-rect
    rect(): CGRect;
    setRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uipointerregion/3539003-identifier
    identifier(): NSObject;
    setIdentifier(value: NSObject): void;
    // https://developer.apple.com/documentation/uikit/uipointerregion/3821024-latchingaxes
    latchingAxes(): UIAxis;
    setLatchingAxes(value: UIAxis): void;
    //
    alloc():UIPointerRegion;
    //
    init():UIPointerRegion;
  }
}

declare const UIPointerRegion: cocoascript.UIPointerRegion;
declare namespace cocoascript {
  /**
   * An object to describe the pointer's location in the interaction's view.
   * https://developer.apple.com/documentation/uikit/uipointerregionrequest
   */
  interface UIPointerRegionRequest extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerregionrequest/3539000-location
    location(): CGPoint;
    setLocation(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uipointerregionrequest/3539001-modifiers
    modifiers(): UIKeyModifierFlags;
    setModifiers(value: UIKeyModifierFlags): void;
    //
    alloc():UIPointerRegionRequest;
    //
    init():UIPointerRegionRequest;
  }
}

declare const UIPointerRegionRequest: cocoascript.UIPointerRegionRequest;
declare namespace cocoascript {
  /**
   * An object that contains information about a scene’s pointer lock state.
   * https://developer.apple.com/documentation/uikit/uipointerlockstate
   */
  interface UIPointerLockState extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipointerlockstate/3601226-locked
    locked(): boolean;
    setLocked(value: boolean): void;
    //
    alloc():UIPointerLockState;
    //
    init():UIPointerLockState;
  }
}

declare const UIPointerLockState: cocoascript.UIPointerLockState;
// https://developer.apple.com/documentation/uikit/uipointerlockstatesceneuserinfokey
declare const UIPointerLockStateSceneUserInfoKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uibandselectioninteraction
   */
  interface UIBandSelectionInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752167-initwithselectionhandler
    initWithSelectionHandler(selectionHandler: UIBandSelectionInteraction):UIBandSelectionInteraction;
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752168-initialmodifierflags
    initialModifierFlags(): UIKeyModifierFlags;
    setInitialModifierFlags(value: UIKeyModifierFlags): void;
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752166-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752170-shouldbeginhandler
    shouldBeginHandler(): CGPoint;
    setShouldBeginHandler(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752171-state
    state(): UIBandSelectionInteractionState;
    setState(value: UIBandSelectionInteractionState): void;
    // https://developer.apple.com/documentation/uikit/uibandselectioninteraction/3752169-selectionrect
    selectionRect(): CGRect;
    setSelectionRect(value: CGRect): void;
    //
    alloc():UIBandSelectionInteraction;
    //
    init():UIBandSelectionInteraction;
  }
}

declare const UIBandSelectionInteraction: cocoascript.UIBandSelectionInteraction;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibandselectioninteractionstate
  type UIBandSelectionInteractionState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An interaction that tells your app the user double-tapped their Apple Pencil.
   * https://developer.apple.com/documentation/uikit/uipencilinteraction
   */
  interface UIPencilInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipencilinteraction/3039591-delegate
    delegate(): UIPencilInteractionDelegate;
    setDelegate(value: UIPencilInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipencilinteraction/3039592-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipencilinteraction/3039593-preferredtapaction
    preferredTapAction(): UIPencilPreferredAction;
    setPreferredTapAction(value: UIPencilPreferredAction): void;
    // https://developer.apple.com/documentation/uikit/uipencilinteraction/3552414-preferspencilonlydrawing
    prefersPencilOnlyDrawing(): boolean;
    setPrefersPencilOnlyDrawing(value: boolean): void;
    //
    alloc():UIPencilInteraction;
    //
    init():UIPencilInteraction;
  }
}

declare const UIPencilInteraction: cocoascript.UIPencilInteraction;
declare namespace cocoascript {
  /**
   * The interface an object implements to handle double taps the user makes on their Apple Pencil.
   * https://developer.apple.com/documentation/uikit/uipencilinteractiondelegate
   */
  interface UIPencilInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipencilinteractiondelegate/3039595-pencilinteractiondidtap
    pencilInteractionDidTap(interaction: UIPencilInteraction):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that exposes nonview areas as focusable.
   * https://developer.apple.com/documentation/uikit/uifocusguide
   */
  interface UIFocusGuide extends UILayoutGuide {
    // https://developer.apple.com/documentation/uikit/uifocusguide/1616838-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uifocusguide/1648230-preferredfocusenvironments
    preferredFocusEnvironments(): UIFocusEnvironment;
    setPreferredFocusEnvironments(value: UIFocusEnvironment): void;
    // https://developer.apple.com/documentation/uikit/uifocusguide/1616848-preferredfocusedview
    preferredFocusedView(): UIView;
    setPreferredFocusedView(value: UIView): void;
    //
    alloc():UIFocusGuide;
    //
    init():UIFocusGuide;
  }
}

declare const UIFocusGuide: cocoascript.UIFocusGuide;
declare namespace cocoascript {
  /**
   * A runtime object for debugging focus-related interactions.
   * https://developer.apple.com/documentation/uikit/uifocusdebugger
   */
  interface UIFocusDebugger extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusdebugger/2887502-help
    help():UIFocusDebuggerOutput;
    // https://developer.apple.com/documentation/uikit/uifocusdebugger/2887500-status
    status():UIFocusDebuggerOutput;
    // https://developer.apple.com/documentation/uikit/uifocusdebugger/2887499-checkfocusabilityforitem
    checkFocusabilityForItem(item: UIFocusItem):UIFocusDebuggerOutput;
    // https://developer.apple.com/documentation/uikit/uifocusdebugger/2887498-simulatefocusupdaterequestfromen
    simulateFocusUpdateRequestFromEnvironment(environment: UIFocusEnvironment):UIFocusDebuggerOutput;
    // https://developer.apple.com/documentation/uikit/uifocusdebugger/3795592-checkfocusgrouptreeforenvironmen
    checkFocusGroupTreeForEnvironment(environment: UIFocusEnvironment):NSString;
    //
    alloc():UIFocusDebugger;
    //
    init():UIFocusDebugger;
  }
}

declare const UIFocusDebugger: cocoascript.UIFocusDebugger;
declare namespace cocoascript {
  /**
   * A coordinator of focus-related animations during a focus update.
   * https://developer.apple.com/documentation/uikit/uifocusanimationcoordinator
   */
  interface UIFocusAnimationCoordinator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusanimationcoordinator/2887565-addcoordinatedfocusinganimations
    addCoordinatedFocusingAnimations_completion(animations: UIFocusAnimationContext, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uifocusanimationcoordinator/2887567-addcoordinatedunfocusinganimatio
    addCoordinatedUnfocusingAnimations_completion(animations: UIFocusAnimationContext, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uifocusanimationcoordinator/1619045-addcoordinatedanimations
    addCoordinatedAnimations_completion(animations: void, completion: void):void;
    //
    alloc():UIFocusAnimationCoordinator;
    //
    init():UIFocusAnimationCoordinator;
  }
}

declare const UIFocusAnimationCoordinator: cocoascript.UIFocusAnimationCoordinator;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uifocuseffect
   */
  interface UIFocusEffect extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocuseffect/3778564-effect
    effect():UIFocusEffect;
    //
    alloc():UIFocusEffect;
    //
    init():UIFocusEffect;
  }
}

declare const UIFocusEffect: cocoascript.UIFocusEffect;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uifocushaloeffect
   */
  interface UIFocusHaloEffect extends UIFocusEffect {
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778567-effectwithpath
    effectWithPath(bezierPath: UIBezierPath):UIFocusHaloEffect;
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778568-effectwithrect
    effectWithRect(rect: CGRect):UIFocusHaloEffect;
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778569-effectwithroundedrect
    effectWithRoundedRect_cornerRadius_curve(rect: CGRect, cornerRadius: CGFloat, curve: CALayerCornerCurve):UIFocusHaloEffect;
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778566-containerview
    containerView(): UIView;
    setContainerView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778570-position
    position(): UIFocusHaloEffectPosition;
    setPosition(value: UIFocusHaloEffectPosition): void;
    // https://developer.apple.com/documentation/uikit/uifocushaloeffect/3778571-referenceview
    referenceView(): UIView;
    setReferenceView(value: UIView): void;
    //
    alloc():UIFocusHaloEffect;
    //
    init():UIFocusHaloEffect;
  }
}

declare const UIFocusHaloEffect: cocoascript.UIFocusHaloEffect;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifocushaloeffectposition
  type UIFocusHaloEffectPosition = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The menu interface for the Cut, Copy, Paste, Select, Select All, and Delete commands.
   * https://developer.apple.com/documentation/uikit/uimenucontroller
   */
  interface UIMenuController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622831-sharedmenucontroller
    sharedMenuController(): UIMenuController;
    setSharedMenuController(value: UIMenuController): void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/3044217-showmenufromview
    showMenuFromView_rect(targetView: UIView, targetRect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/3044216-hidemenufromview
    hideMenuFromView(targetView: UIView):void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/3044215-hidemenu
    hideMenu():void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622833-setmenuvisible
    menuVisible(): boolean;
    setMenuVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622819-setmenuvisible
    setMenuVisible_animated(menuVisible: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622822-menuframe
    menuFrame(): CGRect;
    setMenuFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622821-arrowdirection
    arrowDirection(): UIMenuControllerArrowDirection;
    setArrowDirection(value: UIMenuControllerArrowDirection): void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622812-settargetrect
    setTargetRect_inView(targetRect: CGRect, targetView: UIView):void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622815-update
    update():void;
    // https://developer.apple.com/documentation/uikit/uimenucontroller/1622811-menuitems
    menuItems(): UIMenuItem;
    setMenuItems(value: UIMenuItem): void;
    //
    alloc():UIMenuController;
    //
    init():UIMenuController;
  }
}

declare const UIMenuController: cocoascript.UIMenuController;
declare namespace cocoascript {
  /**
   * A custom item in the editing menu managed by the menu controller.
   * https://developer.apple.com/documentation/uikit/uimenuitem
   */
  interface UIMenuItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uimenuitem/1622824-initwithtitle
    initWithTitle_action(title: string | cocoascript.NSString, action: SEL):UIMenuItem;
    // https://developer.apple.com/documentation/uikit/uimenuitem/1622827-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimenuitem/1622817-action
    action(): SEL;
    setAction(value: SEL): void;
    //
    alloc():UIMenuItem;
    //
    init():UIMenuItem;
  }
}

declare const UIMenuItem: cocoascript.UIMenuItem;
declare namespace cocoascript {
  /**
   * A set of standard methods that apps can adopt to support editing.
   * https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions
   */
  interface UIResponderStandardEditActions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354193-cut
    cut(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354191-copy
    copy(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354189-paste
    paste(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354197-delete
    delete(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354190-select
    select(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354200-selectall
    selectAll(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/3750910-print
    print(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354196-toggleboldface
    toggleBoldface(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354187-toggleitalics
    toggleItalics(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354194-toggleunderline
    toggleUnderline(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354198-maketextwritingdirectionlefttori
    makeTextWritingDirectionLeftToRight(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354195-maketextwritingdirectionrighttol
    makeTextWritingDirectionRightToLeft(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354199-increasesize
    increaseSize(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/2354192-decreasesize
    decreaseSize(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/3261459-updatetextattributeswithconversi
    updateTextAttributesWithConversionHandler(conversionHandler: UITextAttributesConversionHandler):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/3750907-pasteandgo
    pasteAndGo(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/3750908-pasteandmatchstyle
    pasteAndMatchStyle(sender: UIResponderStandardEditActions):void;
    // https://developer.apple.com/documentation/uikit/uiresponderstandardeditactions/3750909-pasteandsearch
    pasteAndSearch(sender: UIResponderStandardEditActions):void;
  }
}
declare namespace cocoascript {
  /**
   * An object describing the view to use during preview-related animations.
   * https://developer.apple.com/documentation/uikit/uitargetedpreview
   */
  interface UITargetedPreview extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295969-initwithview
    initWithView_parameters_target(view: UIView, parameters: UIPreviewParameters, target: UIPreviewTarget):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295968-initwithview
    initWithView_parameters(view: UIView, parameters: UIPreviewParameters):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295967-initwithview
    initWithView(view: UIView):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295974-view
    view(): UIView;
    setView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295973-target
    target(): UIPreviewTarget;
    setTarget(value: UIPreviewTarget): void;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295972-size
    size(): CGSize;
    setSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295970-parameters
    parameters(): UIPreviewParameters;
    setParameters(value: UIPreviewParameters): void;
    // https://developer.apple.com/documentation/uikit/uitargetedpreview/3295971-retargetedpreviewwithtarget
    retargetedPreviewWithTarget(newTarget: UIPreviewTarget):UITargetedPreview;
    //
    alloc():UITargetedPreview;
    //
    init():UITargetedPreview;
  }
}

declare const UITargetedPreview: cocoascript.UITargetedPreview;
declare namespace cocoascript {
  /**
   * An object that specifies the container view to use for animations.
   * https://developer.apple.com/documentation/uikit/uipreviewtarget
   */
  interface UIPreviewTarget extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewtarget/3295964-initwithcontainer
    initWithContainer_center_transform(container: UIView, center: CGPoint, transform: CGAffineTransform):UIPreviewTarget;
    // https://developer.apple.com/documentation/uikit/uipreviewtarget/3295963-initwithcontainer
    initWithContainer_center(container: UIView, center: CGPoint):UIPreviewTarget;
    // https://developer.apple.com/documentation/uikit/uipreviewtarget/3295962-container
    container(): UIView;
    setContainer(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipreviewtarget/3295961-center
    center(): CGPoint;
    setCenter(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uipreviewtarget/3295965-transform
    transform(): CGAffineTransform;
    setTransform(value: CGAffineTransform): void;
    //
    alloc():UIPreviewTarget;
    //
    init():UIPreviewTarget;
  }
}

declare const UIPreviewTarget: cocoascript.UIPreviewTarget;
declare namespace cocoascript {
  /**
   * Additional parameters to use when animating a preview interface.
   * https://developer.apple.com/documentation/uikit/uipreviewparameters
   */
  interface UIPreviewParameters extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewparameters/3295951-init
    init():UIPreviewParameters;
    // https://developer.apple.com/documentation/uikit/uipreviewparameters/3295952-initwithtextlinerects
    initWithTextLineRects(textLineRects: NSValue):UIPreviewParameters;
    // https://developer.apple.com/documentation/uikit/uipreviewparameters/3295950-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipreviewparameters/3295953-visiblepath
    visiblePath(): UIBezierPath;
    setVisiblePath(value: UIBezierPath): void;
    // https://developer.apple.com/documentation/uikit/uipreviewparameters/3601230-shadowpath
    shadowPath(): UIBezierPath;
    setShadowPath(value: UIBezierPath): void;
    //
    alloc():UIPreviewParameters;
    //
    init():UIPreviewParameters;
  }
}

declare const UIPreviewParameters: cocoascript.UIPreviewParameters;
declare namespace cocoascript {
  /**
   * An application shortcut item, also called a
   * https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem
   */
  interface UIApplicationShortcutItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623355-initwithtype
    initWithType_localizedTitle(type: string | cocoascript.NSString, localizedTitle: string | cocoascript.NSString):UIApplicationShortcutItem;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623372-initwithtype
    initWithType_localizedTitle_localizedSubtitle_icon_userInfo(type: string | cocoascript.NSString, localizedTitle: string | cocoascript.NSString, localizedSubtitle: string | cocoascript.NSString, icon: UIApplicationShortcutIcon, userInfo: NSSecureCoding):UIApplicationShortcutItem;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623354-localizedtitle
    localizedTitle(): string | cocoascript.NSString;
    setLocalizedTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623376-localizedsubtitle
    localizedSubtitle(): string | cocoascript.NSString;
    setLocalizedSubtitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623382-type
    type(): string | cocoascript.NSString;
    setType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623352-icon
    icon(): UIApplicationShortcutIcon;
    setIcon(value: UIApplicationShortcutIcon): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/1623370-userinfo
    userInfo(): NSSecureCoding;
    setUserInfo(value: NSSecureCoding): void;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcutitem/3238038-targetcontentidentifier
    targetContentIdentifier(): id;
    setTargetContentIdentifier(value: id): void;
    //
    alloc():UIApplicationShortcutItem;
    //
    init():UIApplicationShortcutItem;
  }
}

declare const UIApplicationShortcutItem: cocoascript.UIApplicationShortcutItem;
declare namespace cocoascript {
  /**
   * An image you can optionally associate with a Home screen quick action to improve its appearance and usability.
   * https://developer.apple.com/documentation/uikit/uiapplicationshortcuticon
   */
  interface UIApplicationShortcutIcon extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcuticon/1623389-iconwithtype
    iconWithType(type: UIApplicationShortcutIconType):UIApplicationShortcutIcon;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcuticon/1623367-iconwithtemplateimagename
    iconWithTemplateImageName(templateImageName: string | cocoascript.NSString):UIApplicationShortcutIcon;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcuticon/3295912-iconwithsystemimagename
    iconWithSystemImageName(systemImageName: string | cocoascript.NSString):UIApplicationShortcutIcon;
    // https://developer.apple.com/documentation/uikit/uiapplicationshortcuticon/1616849-iconwithcontact
    iconWithContact(contact: CNContact):UIApplicationShortcutIcon;
    //
    alloc():UIApplicationShortcutIcon;
    //
    init():UIApplicationShortcutIcon;
  }
}

declare const UIApplicationShortcutIcon: cocoascript.UIApplicationShortcutIcon;
declare namespace cocoascript {
  /**
   * An item that specifies a configurable user-initiated action for your app (the item is also called a mutable Home screen dynamic quick action).
   * https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem
   */
  interface UIMutableApplicationShortcutItem extends UIApplicationShortcutItem {
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/1623371-localizedtitle
    localizedTitle(): string | cocoascript.NSString;
    setLocalizedTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/1623384-localizedsubtitle
    localizedSubtitle(): string | cocoascript.NSString;
    setLocalizedSubtitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/1623362-type
    type(): string | cocoascript.NSString;
    setType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/1623351-icon
    icon(): UIApplicationShortcutIcon;
    setIcon(value: UIApplicationShortcutIcon): void;
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/1623375-userinfo
    userInfo(): NSSecureCoding;
    setUserInfo(value: NSSecureCoding): void;
    // https://developer.apple.com/documentation/uikit/uimutableapplicationshortcutitem/3238039-targetcontentidentifier
    targetContentIdentifier(): id;
    setTargetContentIdentifier(value: id): void;
    //
    alloc():UIMutableApplicationShortcutItem;
    //
    init():UIMutableApplicationShortcutItem;
  }
}

declare const UIMutableApplicationShortcutItem: cocoascript.UIMutableApplicationShortcutItem;
declare namespace cocoascript {
  /**
   * An element that should be accessible to users with disabilities, but that isn’t accessible by default.
   * https://developer.apple.com/documentation/uikit/uiaccessibilityelement
   */
  interface UIAccessibilityElement extends UIResponder {
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619582-initwithaccessibilitycontainer
    initWithAccessibilityContainer(container: UIAccessibilityElement):UIAccessibilityElement;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619581-accessibilitycontainer
    accessibilityContainer(): id;
    setAccessibilityContainer(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619580-isaccessibilityelement
    isAccessibilityElement(): boolean;
    setIsAccessibilityElement(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619577-accessibilitylabel
    accessibilityLabel(): string | cocoascript.NSString;
    setAccessibilityLabel(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619585-accessibilityhint
    accessibilityHint(): string | cocoascript.NSString;
    setAccessibilityHint(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619583-accessibilityvalue
    accessibilityValue(): string | cocoascript.NSString;
    setAccessibilityValue(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619579-accessibilityframe
    accessibilityFrame(): CGRect;
    setAccessibilityFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1649543-accessibilityframeincontainerspa
    accessibilityFrameInContainerSpace(): CGRect;
    setAccessibilityFrameInContainerSpace(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityelement/1619584-accessibilitytraits
    accessibilityTraits(): UIAccessibilityTraits;
    setAccessibilityTraits(value: UIAccessibilityTraits): void;
    //
    alloc():UIAccessibilityElement;
    //
    init():UIAccessibilityElement;
  }
}

declare const UIAccessibilityElement: cocoascript.UIAccessibilityElement;
declare namespace cocoascript {
  /**
   * Methods that associate a unique identifier with elements in your user interface.
   * https://developer.apple.com/documentation/uikit/uiaccessibilityidentification
   */
  interface UIAccessibilityIdentification extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilityidentification/1623132-accessibilityidentifier
    accessibilityIdentifier(): string | cocoascript.NSString;
    setAccessibilityIdentifier(value: string | cocoascript.NSString): void;
  }
}
declare namespace cocoascript {
  /**
   * Methods to implement for an object that represents content that users read, such as a book or an article.
   * https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent
   */
  interface UIAccessibilityReadingContent {
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/1615107-accessibilitylinenumberforpoint
    accessibilityLineNumberForPoint(point: CGPoint):NSInteger;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/2866114-accessibilityattributedcontentfo
    accessibilityAttributedContentForLineNumber(lineNumber: NSInteger):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/1615163-accessibilitycontentforlinenumbe
    accessibilityContentForLineNumber(lineNumber: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/1615171-accessibilityframeforlinenumber
    accessibilityFrameForLineNumber(lineNumber: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/2865881-accessibilityattributedpageconte
    accessibilityAttributedPageContent():NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uiaccessibilityreadingcontent/1615157-accessibilitypagecontent
    accessibilityPageContent():NSString;
  }
}
declare namespace cocoascript {
  /**
   * Methods to determine when to adjust images for different content size categories.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycontentsizecategoryimageadjusting
   */
  interface UIAccessibilityContentSizeCategoryImageAdjusting extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontentsizecategoryimageadjusting/2890929-adjustsimagesizeforaccessibility
    adjustsImageSizeForAccessibilityContentSizeCategory(): boolean;
    setAdjustsImageSizeForAccessibilityContentSizeCategory(value: boolean): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontext
  type UIAccessibilityTextualContext = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiguidedaccessaccessibilityfeature
  type UIGuidedAccessAccessibilityFeature = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiguidedaccesserrorcode
  type UIGuidedAccessErrorCode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A custom action to perform on an accessible object.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction
   */
  interface UIAccessibilityCustomAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3043557-initwithname
    initWithName_actionHandler(name: string | cocoascript.NSString, actionHandler: UIAccessibilityCustomActionHandler):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/1620499-initwithname
    initWithName_target_selector(name: string | cocoascript.NSString, target: UIAccessibilityCustomAction, selector: SEL):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3650220-initwithname
    initWithName_image_actionHandler(name: string | cocoascript.NSString, image: UIImage, actionHandler: UIAccessibilityCustomActionHandler):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3650221-initwithname
    initWithName_image_target_selector(name: string | cocoascript.NSString, image: UIImage, target: UIAccessibilityCustomAction, selector: SEL):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3043556-initwithattributedname
    initWithAttributedName_actionHandler(attributedName: NSAttributedString, actionHandler: UIAccessibilityCustomActionHandler):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/2865951-initwithattributedname
    initWithAttributedName_target_selector(attributedName: NSAttributedString, target: UIAccessibilityCustomAction, selector: SEL):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3650218-initwithattributedname
    initWithAttributedName_image_actionHandler(attributedName: NSAttributedString, image: UIImage, actionHandler: UIAccessibilityCustomActionHandler):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3650219-initwithattributedname
    initWithAttributedName_image_target_selector(attributedName: NSAttributedString, image: UIImage, target: UIAccessibilityCustomAction, selector: SEL):UIAccessibilityCustomAction;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/1620502-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/2865932-attributedname
    attributedName(): NSAttributedString;
    setAttributedName(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3650217-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/3043555-actionhandler
    actionHandler(): UIAccessibilityCustomActionHandler;
    setActionHandler(value: UIAccessibilityCustomActionHandler): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/1620501-target
    target(): id;
    setTarget(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomaction/1620498-selector
    selector(): SEL;
    setSelector(value: SEL): void;
    //
    alloc():UIAccessibilityCustomAction;
    //
    init():UIAccessibilityCustomAction;
  }
}

declare const UIAccessibilityCustomAction: cocoascript.UIAccessibilityCustomAction;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomactionhandler
  type UIAccessibilityCustomActionHandler = cocoascript.UIAccessibilityCustomAction;
}
declare namespace cocoascript {
  /**
   * A set of methods you can implement to provide accessibility information for a scroll view.
   * https://developer.apple.com/documentation/uikit/uiscrollviewaccessibilitydelegate
   */
  interface UIScrollViewAccessibilityDelegate extends UIScrollViewDelegate {
    // https://developer.apple.com/documentation/uikit/uiscrollviewaccessibilitydelegate/1621055-accessibilityscrollstatusforscro
    accessibilityScrollStatusForScrollView(scrollView: UIScrollView):NSString;
    // https://developer.apple.com/documentation/uikit/uiscrollviewaccessibilitydelegate/2865789-accessibilityattributedscrollsta
    accessibilityAttributedScrollStatusForScrollView(scrollView: UIScrollView):NSAttributedString;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods you can implement to provide accessibility information for individual components of a picker view.
   * https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate
   */
  interface UIPickerViewAccessibilityDelegate extends UIPickerViewDelegate {
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/1621052-pickerview
    pickerView_accessibilityLabelForComponent(pickerView: UIPickerView, component: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/2865955-pickerview
    pickerView_accessibilityAttributedLabelForComponent(pickerView: UIPickerView, component: NSInteger):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/1621056-pickerview
    pickerView_accessibilityHintForComponent(pickerView: UIPickerView, component: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/2866017-pickerview
    pickerView_accessibilityAttributedHintForComponent(pickerView: UIPickerView, component: NSInteger):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/3197990-pickerview
    pickerView_accessibilityAttributedUserInputLabelsForComponent(pickerView: UIPickerView, component: NSInteger):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/3197991-pickerview
    pickerView_accessibilityUserInputLabelsForComponent(pickerView: UIPickerView, component: NSInteger):NSString;
  }
}
declare namespace cocoascript {
  /**
   * Methods that convey information about the contents of a table.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable
   */
  interface UIAccessibilityContainerDataTable extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865804-accessibilitydatatablecellelemen
    accessibilityDataTableCellElementForRow_column(row: NSUInteger, column: NSUInteger):UIAccessibilityContainerDataTableCell;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865809-accessibilitycolumncount
    accessibilityColumnCount():NSUInteger;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865811-accessibilityrowcount
    accessibilityRowCount():NSUInteger;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865805-accessibilityheaderelementsforco
    accessibilityHeaderElementsForColumn(column: NSUInteger):UIAccessibilityContainerDataTableCell;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865808-accessibilityheaderelementsforro
    accessibilityHeaderElementsForRow(row: NSUInteger):UIAccessibilityContainerDataTableCell;
  }
}
declare namespace cocoascript {
  /**
   * Methods that provide the location of a cell in a table.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell
   */
  interface UIAccessibilityContainerDataTableCell extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell/2865807-accessibilitycolumnrange
    accessibilityColumnRange():NSRange;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell/2865803-accessibilityrowrange
    accessibilityRowRange():NSRange;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycontainertype
  type UIAccessibilityContainerType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A context-sensitive function that helps VoiceOver users find the next instance of a related element.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor
   */
  interface UIAccessibilityCustomRotor extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2866000-initwithattributedname
    initWithAttributedName_itemSearchBlock(attributedName: NSAttributedString, itemSearchBlock: UIAccessibilityCustomRotorSearch):UIAccessibilityCustomRotor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649751-initwithname
    initWithName_itemSearchBlock(name: string | cocoascript.NSString, itemSearchBlock: UIAccessibilityCustomRotorSearch):UIAccessibilityCustomRotor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2866006-initwithsystemtype
    initWithSystemType_itemSearchBlock(type: UIAccessibilityCustomSystemRotorType, itemSearchBlock: UIAccessibilityCustomRotorSearch):UIAccessibilityCustomRotor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649800-itemsearchblock
    itemSearchBlock(): UIAccessibilityCustomRotorSearch;
    setItemSearchBlock(value: UIAccessibilityCustomRotorSearch): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2865918-systemrotortype
    systemRotorType(): UIAccessibilityCustomSystemRotorType;
    setSystemRotorType(value: UIAccessibilityCustomSystemRotorType): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649745-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2865780-attributedname
    attributedName(): NSAttributedString;
    setAttributedName(value: NSAttributedString): void;
    //
    alloc():UIAccessibilityCustomRotor;
    //
    init():UIAccessibilityCustomRotor;
  }
}

declare const UIAccessibilityCustomRotor: cocoascript.UIAccessibilityCustomRotor;
declare namespace cocoascript {
  /**
   * A target element that a custom rotor references.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult
   */
  interface UIAccessibilityCustomRotorItemResult extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649911-initwithtargetelement
    initWithTargetElement_targetRange(targetElement: NSObject, targetRange: UITextRange):UIAccessibilityCustomRotorItemResult;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649842-targetelement
    targetElement(): NSObject;
    setTargetElement(value: NSObject): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649803-targetrange
    targetRange(): UITextRange;
    setTargetRange(value: UITextRange): void;
    //
    alloc():UIAccessibilityCustomRotorItemResult;
    //
    init():UIAccessibilityCustomRotorItemResult;
  }
}

declare const UIAccessibilityCustomRotorItemResult: cocoascript.UIAccessibilityCustomRotorItemResult;
declare namespace cocoascript {
  /**
   * The search parameters that help determine the next matching custom rotor item result.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearchpredicate
   */
  interface UIAccessibilityCustomRotorSearchPredicate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearchpredicate/1649821-currentitem
    currentItem(): UIAccessibilityCustomRotorItemResult;
    setCurrentItem(value: UIAccessibilityCustomRotorItemResult): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearchpredicate/1649916-searchdirection
    searchDirection(): UIAccessibilityCustomRotorDirection;
    setSearchDirection(value: UIAccessibilityCustomRotorDirection): void;
    //
    alloc():UIAccessibilityCustomRotorSearchPredicate;
    //
    init():UIAccessibilityCustomRotorSearchPredicate;
  }
}

declare const UIAccessibilityCustomRotorSearchPredicate: cocoascript.UIAccessibilityCustomRotorSearchPredicate;
declare namespace cocoascript {
  /**
   * An accessibility descriptor for a specific geometric point of interest within a view, for use by assistive apps.
   * https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor
   */
  interface UIAccessibilityLocationDescriptor extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890955-initwithattributedname
    initWithAttributedName_point_inView(attributedName: NSAttributedString, point: CGPoint, view: UIView):UIAccessibilityLocationDescriptor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890962-initwithname
    initWithName_point_inView(name: string | cocoascript.NSString, point: CGPoint, view: UIView):UIAccessibilityLocationDescriptor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890958-initwithname
    initWithName_view(name: string | cocoascript.NSString, view: UIView):UIAccessibilityLocationDescriptor;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890959-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890960-attributedname
    attributedName(): NSAttributedString;
    setAttributedName(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890956-point
    point(): CGPoint;
    setPoint(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890961-view
    view(): UIView;
    setView(value: UIView): void;
    //
    alloc():UIAccessibilityLocationDescriptor;
    //
    init():UIAccessibilityLocationDescriptor;
  }
}

declare const UIAccessibilityLocationDescriptor: cocoascript.UIAccessibilityLocationDescriptor;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilityhearingdeviceear
  type UIAccessibilityHearingDeviceEar = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * A set of methods for defining the positioning of bars in iOS apps.
   * https://developer.apple.com/documentation/uikit/uibarpositioning
   */
  interface UIBarPositioning extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarpositioning/1624857-barposition
    barPosition(): UIBarPosition;
    setBarPosition(value: UIBarPosition): void;
  }
}
declare namespace cocoascript {
  /**
   * A view that allows the scrolling and zooming of its contained views.
   * https://developer.apple.com/documentation/uikit/uiscrollview
   */
  interface UIScrollView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619430-delegate
    delegate(): UIScrollViewDelegate;
    setDelegate(value: UIScrollViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619399-contentsize
    contentSize(): CGSize;
    setContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619404-contentoffset
    contentOffset(): CGPoint;
    setContentOffset(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619400-setcontentoffset
    setContentOffset_animated(contentOffset: CGPoint, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2902259-adjustedcontentinset
    adjustedContentInset(): UIEdgeInsets;
    setAdjustedContentInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619406-contentinset
    contentInset(): UIEdgeInsets;
    setContentInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2902261-contentinsetadjustmentbehavior
    contentInsetAdjustmentBehavior(): UIScrollViewContentInsetAdjustmentBehavior;
    setContentInsetAdjustmentBehavior(value: UIScrollViewContentInsetAdjustmentBehavior): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2902254-adjustedcontentinsetdidchange
    adjustedContentInsetDidChange():void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2865772-framelayoutguide
    frameLayoutGuide(): UILayoutGuide;
    setFrameLayoutGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2865870-contentlayoutguide
    contentLayoutGuide(): UILayoutGuide;
    setContentLayoutGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619395-scrollenabled
    scrollEnabled(): boolean;
    setScrollEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619390-directionallockenabled
    directionalLockEnabled(): boolean;
    setDirectionalLockEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619432-pagingenabled
    pagingEnabled(): boolean;
    setPagingEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619421-scrollstotop
    scrollsToTop(): boolean;
    setScrollsToTop(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619420-bounces
    bounces(): boolean;
    setBounces(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619383-alwaysbouncevertical
    alwaysBounceVertical(): boolean;
    setAlwaysBounceVertical(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619393-alwaysbouncehorizontal
    alwaysBounceHorizontal(): boolean;
    setAlwaysBounceHorizontal(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619413-tracking
    tracking(): boolean;
    setTracking(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619384-dragging
    dragging(): boolean;
    setDragging(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619434-decelerating
    decelerating(): boolean;
    setDecelerating(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619438-decelerationrate
    decelerationRate(): UIScrollViewDecelerationRate;
    setDecelerationRate(value: UIScrollViewDecelerationRate): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619433-indicatorstyle
    indicatorStyle(): UIScrollViewIndicatorStyle;
    setIndicatorStyle(value: UIScrollViewIndicatorStyle): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619380-showshorizontalscrollindicator
    showsHorizontalScrollIndicator(): boolean;
    setShowsHorizontalScrollIndicator(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619405-showsverticalscrollindicator
    showsVerticalScrollIndicator(): boolean;
    setShowsVerticalScrollIndicator(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/3198044-horizontalscrollindicatorinsets
    horizontalScrollIndicatorInsets(): UIEdgeInsets;
    setHorizontalScrollIndicatorInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/3198045-verticalscrollindicatorinsets
    verticalScrollIndicatorInsets(): UIEdgeInsets;
    setVerticalScrollIndicatorInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/3198043-automaticallyadjustsscrollindica
    automaticallyAdjustsScrollIndicatorInsets(): boolean;
    setAutomaticallyAdjustsScrollIndicatorInsets(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619435-flashscrollindicators
    flashScrollIndicators():void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2127691-refreshcontrol
    refreshControl(): UIRefreshControl;
    setRefreshControl(value: UIRefreshControl): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619427-scrollindicatorinsets
    scrollIndicatorInsets():UIEdgeInsets;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619439-scrollrecttovisible
    scrollRectToVisible_animated(rect: CGRect, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619418-touchesshouldbegin
    touchesShouldBegin_withEvent_inContentView(touches: UITouch, event: UIEvent, view: UIView):boolean;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619387-touchesshouldcancelincontentview
    touchesShouldCancelInContentView(view: UIView):boolean;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619424-cancancelcontenttouches
    canCancelContentTouches(): boolean;
    setCanCancelContentTouches(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619398-delayscontenttouches
    delaysContentTouches(): boolean;
    setDelaysContentTouches(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1627702-directionalpressgesturerecognize
    directionalPressGestureRecognizer(): UIGestureRecognizer;
    setDirectionalPressGestureRecognizer(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619425-pangesturerecognizer
    panGestureRecognizer(): UIPanGestureRecognizer;
    setPanGestureRecognizer(value: UIPanGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619381-pinchgesturerecognizer
    pinchGestureRecognizer(): UIPinchGestureRecognizer;
    setPinchGestureRecognizer(value: UIPinchGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619388-zoomtorect
    zoomToRect_animated(rect: CGRect, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619419-zoomscale
    zoomScale(): CGFloat;
    setZoomScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619412-setzoomscale
    setZoomScale_animated(scale: CGFloat, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619408-maximumzoomscale
    maximumZoomScale(): CGFloat;
    setMaximumZoomScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619428-minimumzoomscale
    minimumZoomScale(): CGFloat;
    setMinimumZoomScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619423-zoombouncing
    zoomBouncing(): boolean;
    setZoomBouncing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619429-zooming
    zooming(): boolean;
    setZooming(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619410-bounceszoom
    bouncesZoom(): boolean;
    setBouncesZoom(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/1619437-keyboarddismissmode
    keyboardDismissMode(): UIScrollViewKeyboardDismissMode;
    setKeyboardDismissMode(value: UIScrollViewKeyboardDismissMode): void;
    // https://developer.apple.com/documentation/uikit/uiscrollview/2851452-indexdisplaymode
    indexDisplayMode(): UIScrollViewIndexDisplayMode;
    setIndexDisplayMode(value: UIScrollViewIndexDisplayMode): void;
    //
    alloc():UIScrollView;
    //
    init():UIScrollView;
  }
}

declare const UIScrollView: cocoascript.UIScrollView;
declare namespace cocoascript {
  /**
   * A view that embeds web content in your app.
   * https://developer.apple.com/documentation/uikit/uiwebview
   */
  interface UIWebView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiwebview/1617937-delegate
    delegate(): UIWebViewDelegate;
    setDelegate(value: UIWebViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617941-loaddata
    loadData_MIMEType_textEncodingName_baseURL(data: NSData, MIMEType: string | cocoascript.NSString, textEncodingName: string | cocoascript.NSString, baseURL: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617979-loadhtmlstring
    loadHTMLString_baseURL(string: string | cocoascript.NSString, baseURL: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617957-loadrequest
    loadRequest(request: NSURLRequest):void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617972-request
    request(): NSURLRequest;
    setRequest(value: NSURLRequest): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617978-loading
    loading(): boolean;
    setLoading(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617974-stoploading
    stopLoading():void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617932-reload
    reload():void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617931-cangoback
    canGoBack(): boolean;
    setCanGoBack(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617951-cangoforward
    canGoForward(): boolean;
    setCanGoForward(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617975-goback
    goBack():void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617940-goforward
    goForward():void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617976-allowslinkpreview
    allowsLinkPreview(): boolean;
    setAllowsLinkPreview(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617950-scalespagetofit
    scalesPageToFit(): boolean;
    setScalesPageToFit(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617955-scrollview
    scrollView(): UIScrollView;
    setScrollView(value: UIScrollView): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617984-suppressesincrementalrendering
    suppressesIncrementalRendering(): boolean;
    setSuppressesIncrementalRendering(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617967-keyboarddisplayrequiresuseractio
    keyboardDisplayRequiresUserAction(): boolean;
    setKeyboardDisplayRequiresUserAction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617965-datadetectortypes
    dataDetectorTypes(): UIDataDetectorTypes;
    setDataDetectorTypes(value: UIDataDetectorTypes): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617963-stringbyevaluatingjavascriptfrom
    stringByEvaluatingJavaScriptFromString(script: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617960-allowsinlinemediaplayback
    allowsInlineMediaPlayback(): boolean;
    setAllowsInlineMediaPlayback(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617954-mediaplaybackrequiresuseraction
    mediaPlaybackRequiresUserAction(): boolean;
    setMediaPlaybackRequiresUserAction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617973-mediaplaybackallowsairplay
    mediaPlaybackAllowsAirPlay(): boolean;
    setMediaPlaybackAllowsAirPlay(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617944-allowspictureinpicturemediaplayb
    allowsPictureInPictureMediaPlayback(): boolean;
    setAllowsPictureInPictureMediaPlayback(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617943-gapbetweenpages
    gapBetweenPages(): CGFloat;
    setGapBetweenPages(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617968-pagecount
    pageCount(): NSUInteger;
    setPageCount(value: NSUInteger): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617980-pagelength
    pageLength(): CGFloat;
    setPageLength(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617933-paginationbreakingmode
    paginationBreakingMode(): UIWebPaginationBreakingMode;
    setPaginationBreakingMode(value: UIWebPaginationBreakingMode): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617985-paginationmode
    paginationMode(): UIWebPaginationMode;
    setPaginationMode(value: UIWebPaginationMode): void;
    // https://developer.apple.com/documentation/uikit/uiwebview/1617952-detectsphonenumbers
    detectsPhoneNumbers(): boolean;
    setDetectsPhoneNumbers(value: boolean): void;
    //
    alloc():UIWebView;
    //
    init():UIWebView;
  }
}

declare const UIWebView: cocoascript.UIWebView;
declare namespace cocoascript {
  /**
   * A view for displaying and editing text and search tokens.
   * https://developer.apple.com/documentation/uikit/uisearchtextfield
   */
  interface UISearchTextField extends UITextField {
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175440-replacetextualportionofrange
    replaceTextualPortionOfRange_withToken_atIndex(textRange: UITextRange, token: UISearchToken, tokenIndex: NSUInteger):void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175441-textualrange
    textualRange(): UITextRange;
    setTextualRange(value: UITextRange): void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175436-allowsdeletingtokens
    allowsDeletingTokens(): boolean;
    setAllowsDeletingTokens(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175435-allowscopyingtokens
    allowsCopyingTokens(): boolean;
    setAllowsCopyingTokens(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextfield/1619595-delegate
    delegate(): UITextFieldDelegate;
    setDelegate(value: UITextFieldDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175443-tokens
    tokens(): UISearchToken;
    setTokens(value: UISearchToken): void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175437-inserttoken
    insertToken_atIndex(token: UISearchToken, tokenIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175439-removetokenatindex
    removeTokenAtIndex(tokenIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175442-tokenbackgroundcolor
    tokenBackgroundColor(): UIColor;
    setTokenBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175444-tokensinrange
    tokensInRange(textRange: UITextRange):UISearchToken;
    // https://developer.apple.com/documentation/uikit/uisearchtextfield/3175438-positionoftokenatindex
    positionOfTokenAtIndex(tokenIndex: NSInteger):UITextPosition;
    //
    alloc():UISearchTextField;
    //
    init():UISearchTextField;
  }
}

declare const UISearchTextField: cocoascript.UISearchTextField;
declare namespace cocoascript {
  /**
   * Search criteria in a search text field, represented by text and an optional icon.
   * https://developer.apple.com/documentation/uikit/uisearchtoken
   */
  interface UISearchToken extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchtoken/3175449-tokenwithicon
    tokenWithIcon_text(icon: UIImage, text: string | cocoascript.NSString):UISearchToken;
    // https://developer.apple.com/documentation/uikit/uisearchtoken/3175448-representedobject
    representedObject(): id;
    setRepresentedObject(value: id): void;
    //
    alloc():UISearchToken;
    //
    init():UISearchToken;
  }
}

declare const UISearchToken: cocoascript.UISearchToken;
declare namespace cocoascript {
  /**
   * A method that supports cutting, copying, and dragging tokens from a search field.
   * https://developer.apple.com/documentation/uikit/uisearchtextfielddelegate
   */
  interface UISearchTextFieldDelegate extends UITextFieldDelegate {
    // https://developer.apple.com/documentation/uikit/uisearchtextfielddelegate/3175446-searchtextfield
    searchTextField_itemProviderForCopyingToken(searchTextField: UISearchTextField, token: UISearchToken):NSItemProvider;
  }
}
declare namespace cocoascript {
  /**
   * An object that amplifies and adjusts the color of the content layered behind a visual effect view.
   * https://developer.apple.com/documentation/uikit/uivibrancyeffect
   */
  interface UIVibrancyEffect extends UIVisualEffect {
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/3229994-effectforblureffect
    effectForBlurEffect_style(blurEffect: UIBlurEffect, style: UIVibrancyEffectStyle):UIVibrancyEffect;
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/1615064-effectforblureffect
    effectForBlurEffect(blurEffect: UIBlurEffect):UIVibrancyEffect;
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/1771278-widgetprimaryvibrancyeffect
    widgetPrimaryVibrancyEffect():UIVibrancyEffect;
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/1771277-widgetsecondaryvibrancyeffect
    widgetSecondaryVibrancyEffect():UIVibrancyEffect;
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/1613917-notificationcentervibrancyeffect
    notificationCenterVibrancyEffect():UIVibrancyEffect;
    // https://developer.apple.com/documentation/uikit/uivibrancyeffect/3238094-widgeteffectforvibrancystyle
    widgetEffectForVibrancyStyle(vibrancyStyle: UIVibrancyEffectStyle):UIVibrancyEffect;
    //
    alloc():UIVibrancyEffect;
    //
    init():UIVibrancyEffect;
  }
}

declare const UIVibrancyEffect: cocoascript.UIVibrancyEffect;
declare namespace cocoascript {
  /**
   * An object that applies a blurring effect to the content layered behind a visual effect view.
   * https://developer.apple.com/documentation/uikit/uiblureffect
   */
  interface UIBlurEffect extends UIVisualEffect {
    // https://developer.apple.com/documentation/uikit/uiblureffect/1615060-effectwithstyle
    effectWithStyle(style: UIBlurEffectStyle):UIBlurEffect;
    //
    alloc():UIBlurEffect;
    //
    init():UIBlurEffect;
  }
}

declare const UIBlurEffect: cocoascript.UIBlurEffect;
declare namespace cocoascript {
  /**
   * An abstract superclass for items that you can add to a bar that appears at the bottom of the screen.
   * https://developer.apple.com/documentation/uikit/uibaritem
   */
  interface UIBarItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibaritem/1616411-init
    init():UIBarItem;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616416-initwithcoder
    initWithCoder(coder: NSCoder):UIBarItem;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616412-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616415-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616421-landscapeimagephone
    landscapeImagePhone(): UIImage;
    setLandscapeImagePhone(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/2865917-largecontentsizeimage
    largeContentSizeImage(): UIImage;
    setLargeContentSizeImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616413-imageinsets
    imageInsets(): UIEdgeInsets;
    setImageInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616420-landscapeimagephoneinsets
    landscapeImagePhoneInsets(): UIEdgeInsets;
    setLandscapeImagePhoneInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/2865781-largecontentsizeimageinsets
    largeContentSizeImageInsets(): UIEdgeInsets;
    setLargeContentSizeImageInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616418-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616419-tag
    tag(): NSInteger;
    setTag(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616414-settitletextattributes
    setTitleTextAttributes_forState(attributes: UIBarItem, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uibaritem/1616422-titletextattributesforstate
    titleTextAttributesForState(state: UIControlState):UIBarItem;
    //
    alloc():UIBarItem;
    //
    init():UIBarItem;
  }
}

declare const UIBarItem: cocoascript.UIBarItem;
declare namespace cocoascript {
  /**
   * A set of bar button items on the shortcuts bar above the keyboard on the iPad.
   * https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup
   */
  interface UIBarButtonItemGroup extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup/1623559-initwithbarbuttonitems
    initWithBarButtonItems_representativeItem(barButtonItems: UIBarButtonItem, representativeItem: UIBarButtonItem):UIBarButtonItemGroup;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup/1623562-initwithcoder
    initWithCoder(coder: NSCoder):UIBarButtonItemGroup;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup/1623565-barbuttonitems
    barButtonItems(): UIBarButtonItem;
    setBarButtonItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup/1623563-representativeitem
    representativeItem(): UIBarButtonItem;
    setRepresentativeItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemgroup/1623560-displayingrepresentativeitem
    displayingRepresentativeItem(): boolean;
    setDisplayingRepresentativeItem(value: boolean): void;
    //
    alloc():UIBarButtonItemGroup;
    //
    init():UIBarButtonItemGroup;
  }
}

declare const UIBarButtonItemGroup: cocoascript.UIBarButtonItemGroup;
declare namespace cocoascript {
  /**
   * Navigational controls that display in a bar along the top of the screen, usually in conjunction with a navigation controller.
   * https://developer.apple.com/documentation/uikit/uinavigationbar
   */
  interface UINavigationBar extends UIView {
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624951-delegate
    delegate(): UINavigationBarDelegate;
    setDelegate(value: UINavigationBarDelegate): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624952-pushnavigationitem
    pushNavigationItem_animated(item: UINavigationItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624969-popnavigationitemanimated
    popNavigationItemAnimated(animated: boolean):UINavigationItem;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624945-setitems
    setItems_animated(items: UINavigationItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624961-items
    items(): UINavigationItem;
    setItems(value: UINavigationItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624967-topitem
    topItem(): UINavigationItem;
    setTopItem(value: UINavigationItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624925-backitem
    backItem(): UINavigationItem;
    setBackItem(value: UINavigationItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/2908999-preferslargetitles
    prefersLargeTitles(): boolean;
    setPrefersLargeTitles(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/3198028-standardappearance
    standardAppearance(): UINavigationBarAppearance;
    setStandardAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/3198026-compactappearance
    compactAppearance(): UINavigationBarAppearance;
    setCompactAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/3198027-scrolledgeappearance
    scrollEdgeAppearance(): UINavigationBarAppearance;
    setScrollEdgeAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/3750865-compactscrolledgeappearance
    compactScrollEdgeAppearance(): UINavigationBarAppearance;
    setCompactScrollEdgeAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbar/1624928-translucent
    translucent(): boolean;
    setTranslucent(value: boolean): void;
    //
    alloc():UINavigationBar;
    //
    init():UINavigationBar;
  }
}

declare const UINavigationBar: cocoascript.UINavigationBar;
declare namespace cocoascript {
  /**
   * A control that displays one or more buttons in a tab bar for selecting between different subtasks, views, or modes in an app.
   * https://developer.apple.com/documentation/uikit/uitabbar
   */
  interface UITabBar extends UIView {
    // https://developer.apple.com/documentation/uikit/uitabbar/1623444-delegate
    delegate(): UITabBarDelegate;
    setDelegate(value: UITabBarDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623466-items
    items(): UITabBarItem;
    setItems(value: UITabBarItem): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623455-setitems
    setItems_animated(items: UITabBarItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623453-selecteditem
    selectedItem(): UITabBarItem;
    setSelectedItem(value: UITabBarItem): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/3198046-standardappearance
    standardAppearance(): UITabBarAppearance;
    setStandardAppearance(value: UITabBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/3750912-scrolledgeappearance
    scrollEdgeAppearance(): UITabBarAppearance;
    setScrollEdgeAppearance(value: UITabBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/3213944-leadingaccessoryview
    leadingAccessoryView(): UIView;
    setLeadingAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/3213945-trailingaccessoryview
    trailingAccessoryView(): UIView;
    setTrailingAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623458-translucent
    translucent(): boolean;
    setTranslucent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623462-begincustomizingitems
    beginCustomizingItems(items: UITabBarItem):void;
    // https://developer.apple.com/documentation/uikit/uitabbar/1623448-endcustomizinganimated
    endCustomizingAnimated(animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uitabbar/2102237-customizing
    customizing(): boolean;
    setCustomizing(value: boolean): void;
    //
    alloc():UITabBar;
    //
    init():UITabBar;
  }
}

declare const UITabBar: cocoascript.UITabBar;
declare namespace cocoascript {
  /**
   * An object that describes an item in a tab bar.
   * https://developer.apple.com/documentation/uikit/uitabbaritem
   */
  interface UITabBarItem extends UIBarItem {
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617067-initwithtabbarsystemitem
    initWithTabBarSystemItem_tag(systemItem: UITabBarSystemItem, tag: NSInteger):UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617056-initwithtitle
    initWithTitle_image_tag(title: string | cocoascript.NSString, image: UIImage, tag: NSInteger):UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617066-initwithtitle
    initWithTitle_image_selectedImage(title: string | cocoascript.NSString, image: UIImage, selectedImage: UIImage):UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617055-init
    init():UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617071-initwithcoder
    initWithCoder(coder: NSCoder):UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617072-selectedimage
    selectedImage(): UIImage;
    setSelectedImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/3198079-standardappearance
    standardAppearance(): UITabBarAppearance;
    setStandardAppearance(value: UITabBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/3750913-scrolledgeappearance
    scrollEdgeAppearance(): UITabBarAppearance;
    setScrollEdgeAppearance(value: UITabBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617070-titlepositionadjustment
    titlePositionAdjustment(): UIOffset;
    setTitlePositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617065-badgevalue
    badgeValue(): string | cocoascript.NSString;
    setBadgeValue(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1648567-badgecolor
    badgeColor(): UIColor;
    setBadgeColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1648566-setbadgetextattributes
    setBadgeTextAttributes_forState(textAttributes: UITabBarItem, state: UIControlState):void;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1648565-badgetextattributesforstate
    badgeTextAttributesForState(state: UIControlState):UITabBarItem;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617051-finishedselectedimage
    finishedSelectedImage():UIImage;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617053-finishedunselectedimage
    finishedUnselectedImage():UIImage;
    // https://developer.apple.com/documentation/uikit/uitabbaritem/1617063-setfinishedselectedimage
    setFinishedSelectedImage_withFinishedUnselectedImage(selectedImage: UIImage, unselectedImage: UIImage):void;
    //
    alloc():UITabBarItem;
    //
    init():UITabBarItem;
  }
}

declare const UITabBarItem: cocoascript.UITabBarItem;
declare namespace cocoascript {
  /**
   * A set of methods that support the positioning of a bar that conforms to the
   * https://developer.apple.com/documentation/uikit/uibarpositioningdelegate
   */
  interface UIBarPositioningDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarpositioningdelegate/1624872-positionforbar
    positionForBar(bar: UIBarPositioning):UIBarPosition;
  }
}
declare namespace cocoascript {
  /**
   * An interaction that enables a gesture to present the large content viewer for cases when supporting the largest dynamic type sizes isn’t appropriate.
   * https://developer.apple.com/documentation/uikit/uilargecontentviewerinteraction
   */
  interface UILargeContentViewerInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteraction/3183925-initwithdelegate
    initWithDelegate(delegate: UILargeContentViewerInteractionDelegate):UILargeContentViewerInteraction;
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteraction/3183922-delegate
    delegate(): UILargeContentViewerInteractionDelegate;
    setDelegate(value: UILargeContentViewerInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteraction/3183924-gesturerecognizerforexclusionrel
    gestureRecognizerForExclusionRelationship(): UIGestureRecognizer;
    setGestureRecognizerForExclusionRelationship(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteraction/3183923-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    //
    alloc():UILargeContentViewerInteraction;
    //
    init():UILargeContentViewerInteraction;
  }
}

declare const UILargeContentViewerInteraction: cocoascript.UILargeContentViewerInteraction;
declare namespace cocoascript {
  /**
   * An object that customizes the behavior of the large content viewer interactions.
   * https://developer.apple.com/documentation/uikit/uilargecontentviewerinteractiondelegate
   */
  interface UILargeContentViewerInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteractiondelegate/3183927-largecontentviewerinteraction
    largeContentViewerInteraction_didEndOnItem_atPoint(interaction: UILargeContentViewerInteraction, item: UILargeContentViewerItem, point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteractiondelegate/3183928-largecontentviewerinteraction
    largeContentViewerInteraction_itemAtPoint(interaction: UILargeContentViewerInteraction, point: CGPoint):UILargeContentViewerItem;
    // https://developer.apple.com/documentation/uikit/uilargecontentviewerinteractiondelegate/3183929-viewcontrollerforlargecontentvie
    viewControllerForLargeContentViewerInteraction(interaction: UILargeContentViewerInteraction):UIViewController;
  }
}
declare namespace cocoascript {
  /**
   * Methods that provide details about how to display your custom content in the large content viewer.
   * https://developer.apple.com/documentation/uikit/uilargecontentvieweritem
   */
  interface UILargeContentViewerItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilargecontentvieweritem/3183936-showslargecontentviewer
    showsLargeContentViewer(): boolean;
    setShowsLargeContentViewer(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentvieweritem/3183934-largecontenttitle
    largeContentTitle(): string | cocoascript.NSString;
    setLargeContentTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentvieweritem/3183932-largecontentimage
    largeContentImage(): UIImage;
    setLargeContentImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentvieweritem/3183933-largecontentimageinsets
    largeContentImageInsets(): UIEdgeInsets;
    setLargeContentImageInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uilargecontentvieweritem/3183935-scaleslargecontentimage
    scalesLargeContentImage(): boolean;
    setScalesLargeContentImage(value: boolean): void;
  }
}
declare namespace cocoascript {
  interface UIOffset {
  }
}
declare namespace cocoascript {
  interface UIEdgeInsets {
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaxis
  type UIAxis = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  interface NSDirectionalEdgeInsets {
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsdirectionalrectedge
  type NSDirectionalRectEdge = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nsrectalignment
  type NSRectAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidirectionalrectedge
  type UIDirectionalRectEdge = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * An overlay view that verifies user interaction for Private Click Measurement.
   * https://developer.apple.com/documentation/uikit/uieventattributionview
   */
  interface UIEventAttributionView extends UIView {
    //
    alloc():UIEventAttributionView;
    //
    init():UIEventAttributionView;
  }
}

declare const UIEventAttributionView: cocoascript.UIEventAttributionView;
declare namespace cocoascript {
  /**
   * An object that contains event attribution information for Private Click Measurement.
   * https://developer.apple.com/documentation/uikit/uieventattribution
   */
  interface UIEventAttribution extends NSObject {
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727313-initwithsourceidentifier
    initWithSourceIdentifier_destinationURL_sourceDescription_purchaser(sourceIdentifier: number, destinationURL: NSURL, sourceDescription: string | cocoascript.NSString, purchaser: string | cocoascript.NSString):UIEventAttribution;
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727312-destinationurl
    destinationURL(): NSURL;
    setDestinationURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727314-purchaser
    purchaser(): string | cocoascript.NSString;
    setPurchaser(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727315-reportendpoint
    reportEndpoint(): NSURL;
    setReportEndpoint(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727316-sourcedescription
    sourceDescription(): string | cocoascript.NSString;
    setSourceDescription(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uieventattribution/3727317-sourceidentifier
    sourceIdentifier(): number;
    setSourceIdentifier(value: number): void;
    //
    alloc():UIEventAttribution;
    //
    init():UIEventAttribution;
  }
}

declare const UIEventAttribution: cocoascript.UIEventAttribution;
declare namespace cocoascript {
  /**
   * A container view controller that defines a stack-based scheme for navigating hierarchical content.
   * https://developer.apple.com/documentation/uikit/uinavigationcontroller
   */
  interface UINavigationController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621858-initwithrootviewcontroller
    initWithRootViewController(rootViewController: UIViewController):UINavigationController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621866-initwithnavigationbarclass
    initWithNavigationBarClass_toolbarClass(navigationBarClass: Class, toolbarClass: Class):UINavigationController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/3043561-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UINavigationController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/3043560-initwithcoder
    initWithCoder(aDecoder: NSCoder):UINavigationController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621876-delegate
    delegate(): UINavigationControllerDelegate;
    setDelegate(value: UINavigationControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621849-topviewcontroller
    topViewController(): UIViewController;
    setTopViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621862-visibleviewcontroller
    visibleViewController(): UIViewController;
    setVisibleViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621873-viewcontrollers
    viewControllers(): UIViewController;
    setViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621861-setviewcontrollers
    setViewControllers_animated(viewControllers: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621887-pushviewcontroller
    pushViewController_animated(viewController: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621886-popviewcontrolleranimated
    popViewControllerAnimated(animated: boolean):UIViewController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621855-poptorootviewcontrolleranimated
    popToRootViewControllerAnimated(animated: boolean):UIViewController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621871-poptoviewcontroller
    popToViewController_animated(viewController: UIViewController, animated: boolean):UIViewController;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621847-interactivepopgesturerecognizer
    interactivePopGestureRecognizer(): UIGestureRecognizer;
    setInteractivePopGestureRecognizer(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621877-navigationbar
    navigationBar(): UINavigationBar;
    setNavigationBar(value: UINavigationBar): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621885-setnavigationbarhidden
    setNavigationBarHidden_animated(hidden: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621882-toolbar
    toolbar(): UIToolbar;
    setToolbar(value: UIToolbar): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621888-settoolbarhidden
    setToolbarHidden_animated(hidden: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621875-toolbarhidden
    toolbarHidden(): boolean;
    setToolbarHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621879-hidesbarsontap
    hidesBarsOnTap(): boolean;
    setHidesBarsOnTap(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621883-hidesbarsonswipe
    hidesBarsOnSwipe(): boolean;
    setHidesBarsOnSwipe(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621869-hidesbarswhenverticallycompact
    hidesBarsWhenVerticallyCompact(): boolean;
    setHidesBarsWhenVerticallyCompact(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621881-hidesbarswhenkeyboardappears
    hidesBarsWhenKeyboardAppears(): boolean;
    setHidesBarsWhenKeyboardAppears(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621850-navigationbarhidden
    navigationBarHidden(): boolean;
    setNavigationBarHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621852-barhideontapgesturerecognizer
    barHideOnTapGestureRecognizer(): UITapGestureRecognizer;
    setBarHideOnTapGestureRecognizer(value: UITapGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621854-barhideonswipegesturerecognizer
    barHideOnSwipeGestureRecognizer(): UIPanGestureRecognizer;
    setBarHideOnSwipeGestureRecognizer(value: UIPanGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontroller/1621872-showviewcontroller
    showViewController_sender(vc: UIViewController, sender: UINavigationController):void;
    //
    alloc():UINavigationController;
    //
    init():UINavigationController;
  }
}

declare const UINavigationController: cocoascript.UINavigationController;
declare namespace cocoascript {
  /**
   * A view controller that specializes in managing a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewcontroller
   */
  interface UITableViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614754-initwithstyle
    initWithStyle(style: UITableViewStyle):UITableViewController;
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614760-initwithcoder
    initWithCoder(coder: NSCoder):UITableViewController;
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614757-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UITableViewController;
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614753-tableview
    tableView(): UITableView;
    setTableView(value: UITableView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614758-clearsselectiononviewwillappear
    clearsSelectionOnViewWillAppear(): boolean;
    setClearsSelectionOnViewWillAppear(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcontroller/1614752-refreshcontrol
    refreshControl(): UIRefreshControl;
    setRefreshControl(value: UIRefreshControl): void;
    //
    alloc():UITableViewController;
    //
    init():UITableViewController;
  }
}

declare const UITableViewController: cocoascript.UITableViewController;
declare namespace cocoascript {
  /**
   * A view controller that specializes in managing a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewcontroller
   */
  interface UICollectionViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623976-initwithcollectionviewlayout
    initWithCollectionViewLayout(layout: UICollectionViewLayout):UICollectionViewController;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623975-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UICollectionViewController;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623981-initwithcoder
    initWithCoder(coder: NSCoder):UICollectionViewController;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623983-collectionview
    collectionView(): UICollectionView;
    setCollectionView(value: UICollectionView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623980-collectionviewlayout
    collectionViewLayout(): UICollectionViewLayout;
    setCollectionViewLayout(value: UICollectionViewLayout): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623977-clearsselectiononviewwillappear
    clearsSelectionOnViewWillAppear(): boolean;
    setClearsSelectionOnViewWillAppear(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623979-installsstandardgestureforintera
    installsStandardGestureForInteractiveMovement(): boolean;
    setInstallsStandardGestureForInteractiveMovement(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcontroller/1623978-uselayouttolayoutnavigationtrans
    useLayoutToLayoutNavigationTransitions(): boolean;
    setUseLayoutToLayoutNavigationTransitions(value: boolean): void;
    //
    alloc():UICollectionViewController;
    //
    init():UICollectionViewController;
  }
}

declare const UICollectionViewController: cocoascript.UICollectionViewController;
declare namespace cocoascript {
  /**
   * A container view controller that implements a hierarchical interface.
   * https://developer.apple.com/documentation/uikit/uisplitviewcontroller
   */
  interface UISplitViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580906-initwithstyle
    initWithStyle(style: UISplitViewControllerStyle):UISplitViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580905-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UISplitViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580904-initwithcoder
    initWithCoder(coder: NSCoder):UISplitViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580915-style
    style(): UISplitViewControllerStyle;
    setStyle(value: UISplitViewControllerStyle): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623167-delegate
    delegate(): UISplitViewControllerDelegate;
    setDelegate(value: UISplitViewControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580911-setviewcontroller
    setViewController_forColumn(vc: UIViewController, column: UISplitViewControllerColumn):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580917-viewcontrollerforcolumn
    viewControllerForColumn(column: UISplitViewControllerColumn):UIViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623181-viewcontrollers
    viewControllers(): UIViewController;
    setViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580912-showcolumn
    showColumn(column: UISplitViewControllerColumn):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580903-hidecolumn
    hideColumn(column: UISplitViewControllerColumn):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623199-showviewcontroller
    showViewController_sender(vc: UIViewController, sender: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623182-showdetailviewcontroller
    showDetailViewController_sender(vc: UIViewController, sender: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623170-preferreddisplaymode
    preferredDisplayMode(): UISplitViewControllerDisplayMode;
    setPreferredDisplayMode(value: UISplitViewControllerDisplayMode): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623194-displaymode
    displayMode(): UISplitViewControllerDisplayMode;
    setDisplayMode(value: UISplitViewControllerDisplayMode): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623196-displaymodebuttonitem
    displayModeButtonItem(): UIBarButtonItem;
    setDisplayModeButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623171-presentswithgesture
    presentsWithGesture(): boolean;
    setPresentsWithGesture(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580913-showssecondaryonlybutton
    showsSecondaryOnlyButton(): boolean;
    setShowsSecondaryOnlyButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3726265-displaymodebuttonvisibility
    displayModeButtonVisibility(): UISplitViewControllerDisplayModeButtonVisibility;
    setDisplayModeButtonVisibility(value: UISplitViewControllerDisplayModeButtonVisibility): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580909-preferredsplitbehavior
    preferredSplitBehavior(): UISplitViewControllerSplitBehavior;
    setPreferredSplitBehavior(value: UISplitViewControllerSplitBehavior): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580914-splitbehavior
    splitBehavior(): UISplitViewControllerSplitBehavior;
    setSplitBehavior(value: UISplitViewControllerSplitBehavior): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623185-collapsed
    collapsed(): boolean;
    setCollapsed(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623183-preferredprimarycolumnwidthfract
    preferredPrimaryColumnWidthFraction(): CGFloat;
    setPreferredPrimaryColumnWidthFraction(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3650234-preferredprimarycolumnwidth
    preferredPrimaryColumnWidth(): CGFloat;
    setPreferredPrimaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623200-primarycolumnwidth
    primaryColumnWidth(): CGFloat;
    setPrimaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623198-minimumprimarycolumnwidth
    minimumPrimaryColumnWidth(): CGFloat;
    setMinimumPrimaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/1623180-maximumprimarycolumnwidth
    maximumPrimaryColumnWidth(): CGFloat;
    setMaximumPrimaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580910-preferredsupplementarycolumnwidt
    preferredSupplementaryColumnWidthFraction(): CGFloat;
    setPreferredSupplementaryColumnWidthFraction(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3650235-preferredsupplementarycolumnwidt
    preferredSupplementaryColumnWidth(): CGFloat;
    setPreferredSupplementaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580916-supplementarycolumnwidth
    supplementaryColumnWidth(): CGFloat;
    setSupplementaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580908-minimumsupplementarycolumnwidth
    minimumSupplementaryColumnWidth(): CGFloat;
    setMinimumSupplementaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3580907-maximumsupplementarycolumnwidth
    maximumSupplementaryColumnWidth(): CGFloat;
    setMaximumSupplementaryColumnWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/2875524-primaryedge
    primaryEdge(): UISplitViewControllerPrimaryEdge;
    setPrimaryEdge(value: UISplitViewControllerPrimaryEdge): void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontroller/3238075-primarybackgroundstyle
    primaryBackgroundStyle(): UISplitViewControllerBackgroundStyle;
    setPrimaryBackgroundStyle(value: UISplitViewControllerBackgroundStyle): void;
    //
    alloc():UISplitViewController;
    //
    init():UISplitViewController;
  }
}

declare const UISplitViewController: cocoascript.UISplitViewController;
declare namespace cocoascript {
  /**
   * The items that a navigation bar displays when the associated view controller is visible.
   * https://developer.apple.com/documentation/uikit/uinavigationitem
   */
  interface UINavigationItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624943-initwithtitle
    initWithTitle(title: string | cocoascript.NSString):UINavigationItem;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624950-initwithcoder
    initWithCoder(coder: NSCoder):UINavigationItem;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624965-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/2909056-largetitledisplaymode
    largeTitleDisplayMode(): UINavigationItemLargeTitleDisplayMode;
    setLargeTitleDisplayMode(value: UINavigationItemLargeTitleDisplayMode): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624958-backbarbuttonitem
    backBarButtonItem(): UIBarButtonItem;
    setBackBarButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3600576-backbuttontitle
    backButtonTitle(): string | cocoascript.NSString;
    setBackButtonTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3656350-backbuttondisplaymode
    backButtonDisplayMode(): UINavigationItemBackButtonDisplayMode;
    setBackButtonDisplayMode(value: UINavigationItemBackButtonDisplayMode): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624947-hidesbackbutton
    hidesBackButton(): boolean;
    setHidesBackButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624934-sethidesbackbutton
    setHidesBackButton_animated(hidesBackButton: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624930-prompt
    prompt(): string | cocoascript.NSString;
    setPrompt(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624933-leftitemssupplementbackbutton
    leftItemsSupplementBackButton(): boolean;
    setLeftItemsSupplementBackButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624935-titleview
    titleView(): UIView;
    setTitleView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624946-leftbarbuttonitems
    leftBarButtonItems(): UIBarButtonItem;
    setLeftBarButtonItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624936-leftbarbuttonitem
    leftBarButtonItem(): UIBarButtonItem;
    setLeftBarButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624956-rightbarbuttonitems
    rightBarButtonItems(): UIBarButtonItem;
    setRightBarButtonItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624957-rightbarbuttonitem
    rightBarButtonItem(): UIBarButtonItem;
    setRightBarButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624949-setleftbarbuttonitems
    setLeftBarButtonItems_animated(items: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624954-setleftbarbuttonitem
    setLeftBarButtonItem_animated(item: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624939-setrightbarbuttonitems
    setRightBarButtonItems_animated(items: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/1624929-setrightbarbuttonitem
    setRightBarButtonItem_animated(item: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3198042-standardappearance
    standardAppearance(): UINavigationBarAppearance;
    setStandardAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3198040-compactappearance
    compactAppearance(): UINavigationBarAppearance;
    setCompactAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3198041-scrolledgeappearance
    scrollEdgeAppearance(): UINavigationBarAppearance;
    setScrollEdgeAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/3750866-compactscrolledgeappearance
    compactScrollEdgeAppearance(): UINavigationBarAppearance;
    setCompactScrollEdgeAppearance(value: UINavigationBarAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/2897305-searchcontroller
    searchController(): UISearchController;
    setSearchController(value: UISearchController): void;
    // https://developer.apple.com/documentation/uikit/uinavigationitem/2897296-hidessearchbarwhenscrolling
    hidesSearchBarWhenScrolling(): boolean;
    setHidesSearchBarWhenScrolling(value: boolean): void;
    //
    alloc():UINavigationItem;
    //
    init():UINavigationItem;
  }
}

declare const UINavigationItem: cocoascript.UINavigationItem;
declare namespace cocoascript {
  /**
   * A container view controller that manages a multiselection interface, where the selection determines which child view controller to display.
   * https://developer.apple.com/documentation/uikit/uitabbarcontroller
   */
  interface UITabBarController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621164-delegate
    delegate(): UITabBarControllerDelegate;
    setDelegate(value: UITabBarControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621174-tabbar
    tabBar(): UITabBar;
    setTabBar(value: UITabBar): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621185-viewcontrollers
    viewControllers(): UIViewController;
    setViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621177-setviewcontrollers
    setViewControllers_animated(viewControllers: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621184-customizableviewcontrollers
    customizableViewControllers(): UIViewController;
    setCustomizableViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621183-morenavigationcontroller
    moreNavigationController(): UINavigationController;
    setMoreNavigationController(value: UINavigationController): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621172-selectedviewcontroller
    selectedViewController(): UIViewController;
    setSelectedViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontroller/1621171-selectedindex
    selectedIndex(): NSUInteger;
    setSelectedIndex(value: NSUInteger): void;
    //
    alloc():UITabBarController;
    //
    init():UITabBarController;
  }
}

declare const UITabBarController: cocoascript.UITabBarController;
declare namespace cocoascript {
  /**
   * A container view controller that manages navigation between pages of content, where a child view controller manages each page.
   * https://developer.apple.com/documentation/uikit/uipageviewcontroller
   */
  interface UIPageViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614105-initwithtransitionstyle
    initWithTransitionStyle_navigationOrientation_options(style: UIPageViewControllerTransitionStyle, navigationOrientation: UIPageViewControllerNavigationOrientation, options: UIPageViewController):UIPageViewController;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614108-initwithcoder
    initWithCoder(coder: NSCoder):UIPageViewController;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614117-datasource
    dataSource(): UIPageViewControllerDataSource;
    setDataSource(value: UIPageViewControllerDataSource): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614089-delegate
    delegate(): UIPageViewControllerDelegate;
    setDelegate(value: UIPageViewControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614087-setviewcontrollers
    setViewControllers_direction_animated_completion(viewControllers: UIViewController, direction: UIPageViewControllerNavigationDirection, animated: boolean, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614106-viewcontrollers
    viewControllers(): UIViewController;
    setViewControllers(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614107-gesturerecognizers
    gestureRecognizers(): UIGestureRecognizer;
    setGestureRecognizers(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614097-navigationorientation
    navigationOrientation(): UIPageViewControllerNavigationOrientation;
    setNavigationOrientation(value: UIPageViewControllerNavigationOrientation): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614085-spinelocation
    spineLocation(): UIPageViewControllerSpineLocation;
    setSpineLocation(value: UIPageViewControllerSpineLocation): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614092-transitionstyle
    transitionStyle(): UIPageViewControllerTransitionStyle;
    setTransitionStyle(value: UIPageViewControllerTransitionStyle): void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontroller/1614098-doublesided
    doubleSided(): boolean;
    setDoubleSided(value: boolean): void;
    //
    alloc():UIPageViewController;
    //
    init():UIPageViewController;
  }
}

declare const UIPageViewController: cocoascript.UIPageViewController;
declare namespace cocoascript {
  /**
   * A presentation controller that manages the appearance and behavior of a sheet.
   * https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller
   */
  interface UISheetPresentationController extends UIPresentationController {
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801903-detents
    detents(): UISheetPresentationControllerDetent;
    setDetents(value: UISheetPresentationControllerDetent): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801908-selecteddetentidentifier
    selectedDetentIdentifier(): UISheetPresentationControllerDetentIdentifier;
    setSelectedDetentIdentifier(value: UISheetPresentationControllerDetentIdentifier): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801902-delegate
    delegate(): UISheetPresentationControllerDelegate;
    setDelegate(value: UISheetPresentationControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3858107-largestundimmeddetentidentifier
    largestUndimmedDetentIdentifier(): UISheetPresentationControllerDetentIdentifier;
    setLargestUndimmedDetentIdentifier(value: UISheetPresentationControllerDetentIdentifier): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801907-prefersscrollingexpandswhenscrol
    prefersScrollingExpandsWhenScrolledToEdge(): boolean;
    setPrefersScrollingExpandsWhenScrolledToEdge(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801906-prefersgrabbervisible
    prefersGrabberVisible(): boolean;
    setPrefersGrabberVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801905-prefersedgeattachedincompactheig
    prefersEdgeAttachedInCompactHeight(): boolean;
    setPrefersEdgeAttachedInCompactHeight(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801911-widthfollowspreferredcontentsize
    widthFollowsPreferredContentSizeWhenEdgeAttached(): boolean;
    setWidthFollowsPreferredContentSizeWhenEdgeAttached(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801904-preferredcornerradius
    preferredCornerRadius(): CGFloat;
    setPreferredCornerRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801910-sourceview
    sourceView(): UIView;
    setSourceView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/3801901-animatechanges
    animateChanges(changes: void):void;
    //
    alloc():UISheetPresentationController;
    //
    init():UISheetPresentationController;
  }
}

declare const UISheetPresentationController: cocoascript.UISheetPresentationController;
declare namespace cocoascript {
  /**
   * A view controller that manages the presentation of search results in your interface.
   * https://developer.apple.com/documentation/uikit/uisearchcontainerviewcontroller
   */
  interface UISearchContainerViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uisearchcontainerviewcontroller/1615746-initwithsearchcontroller
    initWithSearchController(searchController: UISearchController):UISearchContainerViewController;
    // https://developer.apple.com/documentation/uikit/uisearchcontainerviewcontroller/1615748-searchcontroller
    searchController(): UISearchController;
    setSearchController(value: UISearchController): void;
    //
    alloc():UISearchContainerViewController;
    //
    init():UISearchContainerViewController;
  }
}

declare const UISearchContainerViewController: cocoascript.UISearchContainerViewController;
declare namespace cocoascript {
  /**
   * A view controller that manages the display of search results based on interactions with a search bar.
   * https://developer.apple.com/documentation/uikit/uisearchcontroller
   */
  interface UISearchController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618647-initwithsearchresultscontroller
    initWithSearchResultsController(searchResultsController: UIViewController):UISearchController;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3043562-initwithcoder
    initWithCoder(coder: NSCoder):UISearchController;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3043563-initwithnibname
    initWithNibName_bundle(nibNameOrNil: string | cocoascript.NSString, nibBundleOrNil: NSBundle):UISearchController;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618654-delegate
    delegate(): UISearchControllerDelegate;
    setDelegate(value: UISearchControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618657-searchbar
    searchBar(): UISearchBar;
    setSearchBar(value: UISearchBar): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618661-searchresultsupdater
    searchResultsUpdater(): UISearchResultsUpdating;
    setSearchResultsUpdater(value: UISearchResultsUpdating): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618649-searchresultscontroller
    searchResultsController(): UIViewController;
    setSearchResultsController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618659-active
    active(): boolean;
    setActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3584820-searchcontrollerobservedscrollvi
    searchControllerObservedScrollView(): UIScrollView;
    setSearchControllerObservedScrollView(value: UIScrollView): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618656-obscuresbackgroundduringpresenta
    obscuresBackgroundDuringPresentation(): boolean;
    setObscuresBackgroundDuringPresentation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618650-hidesnavigationbarduringpresenta
    hidesNavigationBarDuringPresentation(): boolean;
    setHidesNavigationBarDuringPresentation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3152926-automaticallyshowscancelbutton
    automaticallyShowsCancelButton(): boolean;
    setAutomaticallyShowsCancelButton(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3152927-automaticallyshowsscopebar
    automaticallyShowsScopeBar(): boolean;
    setAutomaticallyShowsScopeBar(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3153160-automaticallyshowssearchresultsc
    automaticallyShowsSearchResultsController(): boolean;
    setAutomaticallyShowsSearchResultsController(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3153161-showssearchresultscontroller
    showsSearchResultsController(): boolean;
    setShowsSearchResultsController(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/1618660-dimsbackgroundduringpresentation
    dimsBackgroundDuringPresentation(): boolean;
    setDimsBackgroundDuringPresentation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchcontroller/3584821-searchsuggestions
    searchSuggestions(): UISearchSuggestion;
    setSearchSuggestions(value: UISearchSuggestion): void;
    //
    alloc():UISearchController;
    //
    init():UISearchController;
  }
}

declare const UISearchController: cocoascript.UISearchController;
declare namespace cocoascript {
  /**
   * A set of methods that let you update search results based on information the user enters into the search bar.
   * https://developer.apple.com/documentation/uikit/uisearchresultsupdating
   */
  interface UISearchResultsUpdating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchresultsupdating/1618658-updatesearchresultsforsearchcont
    updateSearchResultsForSearchController(searchController: UISearchController):void;
    // https://developer.apple.com/documentation/uikit/uisearchresultsupdating/3584822-updatesearchresultsforsearchcont
    updateSearchResultsForSearchController_selectingSearchSuggestion(searchController: UISearchController, searchSuggestion: UISearchSuggestion):void;
  }
}
declare namespace cocoascript {
  /**
   * A view controller that manages the system interface for trimming video frames and encoding a previously recorded movie.
   * https://developer.apple.com/documentation/uikit/uivideoeditorcontroller
   */
  interface UIVideoEditorController extends UINavigationController {
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontroller/1622341-delegate
    delegate(): UIVideoEditorControllerDelegate;
    setDelegate(value: UIVideoEditorControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontroller/1622340-caneditvideoatpath
    canEditVideoAtPath(videoPath: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontroller/1622338-videomaximumduration
    videoMaximumDuration(): NSTimeInterval;
    setVideoMaximumDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontroller/1622343-videopath
    videoPath(): string | cocoascript.NSString;
    setVideoPath(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontroller/1622339-videoquality
    videoQuality(): UIImagePickerControllerQualityType;
    setVideoQuality(value: UIImagePickerControllerQualityType): void;
    //
    alloc():UIVideoEditorController;
    //
    init():UIVideoEditorController;
  }
}

declare const UIVideoEditorController: cocoascript.UIVideoEditorController;
declare namespace cocoascript {
  /**
   * A view controller for browsing and performing actions on documents that you store locally and in the cloud.
   * https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller
   */
  interface UIDocumentBrowserViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3566729-initforopeningcontenttypes
    initForOpeningContentTypes(contentTypes: UTType):UIDocumentBrowserViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874203-initforopeningfileswithcontentty
    initForOpeningFilesWithContentTypes(allowedContentTypes: string | cocoascript.NSString):UIDocumentBrowserViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874185-delegate
    delegate(): UIDocumentBrowserViewControllerDelegate;
    setDelegate(value: UIDocumentBrowserViewControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2927800-importdocumentaturl
    importDocumentAtURL_nextToDocumentAtURL_mode_completionHandler(documentURL: NSURL, neighbourURL: NSURL, importMode: UIDocumentBrowserImportMode, completion: NSError):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874172-allowsdocumentcreation
    allowsDocumentCreation(): boolean;
    setAllowsDocumentCreation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874179-allowspickingmultipleitems
    allowsPickingMultipleItems(): boolean;
    setAllowsPickingMultipleItems(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2915849-revealdocumentaturl
    revealDocumentAtURL_importIfNeeded_completion(url: NSURL, importIfNeeded: boolean, completion: NSError):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3566728-contenttypesforrecentdocuments
    contentTypesForRecentDocuments(): UTType;
    setContentTypesForRecentDocuments(value: UTType): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3356325-recentdocumentscontenttypes
    recentDocumentsContentTypes(): string | cocoascript.NSString;
    setRecentDocumentsContentTypes(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874182-allowedcontenttypes
    allowedContentTypes(): string | cocoascript.NSString;
    setAllowedContentTypes(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2875748-browseruserinterfacestyle
    browserUserInterfaceStyle(): UIDocumentBrowserUserInterfaceStyle;
    setBrowserUserInterfaceStyle(value: UIDocumentBrowserUserInterfaceStyle): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874191-additionalleadingnavigationbarbu
    additionalLeadingNavigationBarButtonItems(): UIBarButtonItem;
    setAdditionalLeadingNavigationBarButtonItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874180-additionaltrailingnavigationbarb
    additionalTrailingNavigationBarButtonItems(): UIBarButtonItem;
    setAdditionalTrailingNavigationBarButtonItems(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3153159-shouldshowfileextensions
    shouldShowFileExtensions(): boolean;
    setShouldShowFileExtensions(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3114622-localizedcreatedocumentactiontit
    localizedCreateDocumentActionTitle(): string | cocoascript.NSString;
    setLocalizedCreateDocumentActionTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3123949-defaultdocumentaspectratio
    defaultDocumentAspectRatio(): CGFloat;
    setDefaultDocumentAspectRatio(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874181-customactions
    customActions(): UIDocumentBrowserAction;
    setCustomActions(value: UIDocumentBrowserAction): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/3019587-transitioncontrollerfordocumenta
    transitionControllerForDocumentAtURL(documentURL: NSURL):UIDocumentBrowserTransitionController;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/2874177-transitioncontrollerfordocumentu
    transitionControllerForDocumentURL(documentURL: NSURL):UIDocumentBrowserTransitionController;
    //
    alloc():UIDocumentBrowserViewController;
    //
    init():UIDocumentBrowserViewController;
  }
}

declare const UIDocumentBrowserViewController: cocoascript.UIDocumentBrowserViewController;
declare namespace cocoascript {
  /**
   * A view controller that provides access to documents or destinations outside your app’s sandbox.
   * https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller
   */
  interface UIDocumentPickerViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/1618686-initwithcoder
    initWithCoder(coder: NSCoder):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3566730-initforexportingurls
    initForExportingURLs(urls: NSURL):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3566731-initforexportingurls
    initForExportingURLs_asCopy(urls: NSURL, asCopy: boolean):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3566732-initforopeningcontenttypes
    initForOpeningContentTypes(contentTypes: UTType):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3566733-initforopeningcontenttypes
    initForOpeningContentTypes_asCopy(contentTypes: UTType, asCopy: boolean):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/1618678-initwithdocumenttypes
    initWithDocumentTypes_inMode(allowedUTIs: string | cocoascript.NSString, mode: UIDocumentPickerMode):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/1618684-initwithurl
    initWithURL_inMode(url: NSURL, mode: UIDocumentPickerMode):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/2921628-initwithurls
    initWithURLs_inMode(urls: NSURL, mode: UIDocumentPickerMode):UIDocumentPickerViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/1618690-delegate
    delegate(): UIDocumentPickerDelegate;
    setDelegate(value: UIDocumentPickerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/2902365-allowsmultipleselection
    allowsMultipleSelection(): boolean;
    setAllowsMultipleSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3183918-directoryurl
    directoryURL(): NSURL;
    setDirectoryURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/3152920-shouldshowfileextensions
    shouldShowFileExtensions(): boolean;
    setShouldShowFileExtensions(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerviewcontroller/1618681-documentpickermode
    documentPickerMode(): UIDocumentPickerMode;
    setDocumentPickerMode(value: UIDocumentPickerMode): void;
    //
    alloc():UIDocumentPickerViewController;
    //
    init():UIDocumentPickerViewController;
  }
}

declare const UIDocumentPickerViewController: cocoascript.UIDocumentPickerViewController;
declare namespace cocoascript {
  /**
   * A view controller that previews, opens, or prints files with a file format that your app can’t handle directly.
   * https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller
   */
  interface UIDocumentInteractionController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616821-interactioncontrollerwithurl
    interactionControllerWithURL(url: NSURL):UIDocumentInteractionController;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616812-delegate
    delegate(): UIDocumentInteractionControllerDelegate;
    setDelegate(value: UIDocumentInteractionControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616828-presentpreviewanimated
    presentPreviewAnimated(animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616815-dismisspreviewanimated
    dismissPreviewAnimated(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616814-presentoptionsmenufromrect
    presentOptionsMenuFromRect_inView_animated(rect: CGRect, view: UIView, animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616811-presentoptionsmenufrombarbuttoni
    presentOptionsMenuFromBarButtonItem_animated(item: UIBarButtonItem, animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616807-presentopeninmenufromrect
    presentOpenInMenuFromRect_inView_animated(rect: CGRect, view: UIView, animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616827-presentopeninmenufrombarbuttonit
    presentOpenInMenuFromBarButtonItem_animated(item: UIBarButtonItem, animated: boolean):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616816-dismissmenuanimated
    dismissMenuAnimated(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616804-url
    URL(): NSURL;
    setURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616802-uti
    UTI(): string | cocoascript.NSString;
    setUTI(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616810-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616801-icons
    icons(): UIImage;
    setIcons(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616820-annotation
    annotation(): id;
    setAnnotation(value: id): void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontroller/1616817-gesturerecognizers
    gestureRecognizers(): UIGestureRecognizer;
    setGestureRecognizers(value: UIGestureRecognizer): void;
    //
    alloc():UIDocumentInteractionController;
    //
    init():UIDocumentInteractionController;
  }
}

declare const UIDocumentInteractionController: cocoascript.UIDocumentInteractionController;
declare namespace cocoascript {
  /**
   * A view controller that presents standard screens for adding and removing people from a CloudKit share record.
   * https://developer.apple.com/documentation/uikit/uicloudsharingcontroller
   */
  interface UICloudSharingController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649607-initwithpreparationhandler
    initWithPreparationHandler(preparationHandler: NSError):UICloudSharingController;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649597-initwithshare
    initWithShare_container(share: CKShare, container: CKContainer):UICloudSharingController;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649595-delegate
    delegate(): UICloudSharingControllerDelegate;
    setDelegate(value: UICloudSharingControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649602-availablepermissions
    availablePermissions(): UICloudSharingPermissionOptions;
    setAvailablePermissions(value: UICloudSharingPermissionOptions): void;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649601-share
    share(): CKShare;
    setShare(value: CKShare): void;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/1649594-activityitemsource
    activityItemSource():UIActivityItemSource;
    //
    alloc():UICloudSharingController;
    //
    init():UICloudSharingController;
  }
}

declare const UICloudSharingController: cocoascript.UICloudSharingController;
declare namespace cocoascript {
  /**
   * An interface that provides a source for shareable content to fulfill user requests to share current content.
   * https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationproviding
   */
  interface UIActivityItemsConfigurationProviding extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationproviding/3780512-activityitemsconfiguration
    activityItemsConfiguration(): UIActivityItemsConfigurationReading;
    setActivityItemsConfiguration(value: UIActivityItemsConfigurationReading): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of optional methods for receiving messages about the user’s interaction with the font picker.
   * https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerdelegate
   */
  interface UIFontPickerViewControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerdelegate/3238101-fontpickerviewcontrollerdidcance
    fontPickerViewControllerDidCancel(viewController: UIFontPickerViewController):void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerdelegate/3238102-fontpickerviewcontrollerdidpickf
    fontPickerViewControllerDidPickFont(viewController: UIFontPickerViewController):void;
  }
}
declare namespace cocoascript {
  /**
   * The filters and display settings a font picker view controller uses to set up a font picker.
   * https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration
   */
  interface UIFontPickerViewControllerConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration/3327296-displayusingsystemfont
    displayUsingSystemFont(): boolean;
    setDisplayUsingSystemFont(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration/3238104-includefaces
    includeFaces(): boolean;
    setIncludeFaces(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration/3327299-filteredtraits
    filteredTraits(): UIFontDescriptorSymbolicTraits;
    setFilteredTraits(value: UIFontDescriptorSymbolicTraits): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration/3327298-filteredlanguagespredicate
    filteredLanguagesPredicate(): NSPredicate;
    setFilteredLanguagesPredicate(value: NSPredicate): void;
    // https://developer.apple.com/documentation/uikit/uifontpickerviewcontrollerconfiguration/3327297-filterpredicateforfilteredlangua
    filterPredicateForFilteredLanguages(filteredLanguages: string | cocoascript.NSString):NSPredicate;
    //
    alloc():UIFontPickerViewControllerConfiguration;
    //
    init():UIFontPickerViewControllerConfiguration;
  }
}

declare const UIFontPickerViewControllerConfiguration: cocoascript.UIFontPickerViewControllerConfiguration;
declare namespace cocoascript {
  /**
   * An interface that manages color picker activity.
   * https://developer.apple.com/documentation/uikit/uicolorpickerviewcontrollerdelegate
   */
  interface UIColorPickerViewControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontrollerdelegate/3600469-colorpickerviewcontrollerdidfini
    colorPickerViewControllerDidFinish(viewController: UIColorPickerViewController):void;
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontrollerdelegate/3600470-colorpickerviewcontrollerdidsele
    colorPickerViewControllerDidSelectColor(viewController: UIColorPickerViewController):void;
    // https://developer.apple.com/documentation/uikit/uicolorpickerviewcontrollerdelegate/3752187-colorpickerviewcontroller
    colorPickerViewController_didSelectColor_continuously(viewController: UIColorPickerViewController, color: UIColor, continuously: boolean):void;
  }
}
declare namespace cocoascript {
  /**
   * A view controller that displays a standard interface for looking up the definition of a word or term.
   * https://developer.apple.com/documentation/uikit/uireferencelibraryviewcontroller
   */
  interface UIReferenceLibraryViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uireferencelibraryviewcontroller/1624810-dictionaryhasdefinitionforterm
    dictionaryHasDefinitionForTerm(term: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uireferencelibraryviewcontroller/1624808-initwithterm
    initWithTerm(term: string | cocoascript.NSString):UIReferenceLibraryViewController;
    // https://developer.apple.com/documentation/uikit/uireferencelibraryviewcontroller/1624809-initwithcoder
    initWithCoder(coder: NSCoder):UIReferenceLibraryViewController;
    //
    alloc():UIReferenceLibraryViewController;
    //
    init():UIReferenceLibraryViewController;
  }
}

declare const UIReferenceLibraryViewController: cocoascript.UIReferenceLibraryViewController;
declare namespace cocoascript {
  /**
   * A view controller that displays the standard interface for selecting a printer.
   * https://developer.apple.com/documentation/uikit/uiprinterpickercontroller
   */
  interface UIPrinterPickerController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620517-printerpickercontrollerwithiniti
    printerPickerControllerWithInitiallySelectedPrinter(printer: UIPrinter):UIPrinterPickerController;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620511-delegate
    delegate(): UIPrinterPickerControllerDelegate;
    setDelegate(value: UIPrinterPickerControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620514-presentanimated
    presentAnimated_completionHandler(animated: boolean, completion: UIPrinterPickerCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620507-presentfrombarbuttonitem
    presentFromBarButtonItem_animated_completionHandler(item: UIBarButtonItem, animated: boolean, completion: UIPrinterPickerCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620515-presentfromrect
    presentFromRect_inView_animated_completionHandler(rect: CGRect, view: UIView, animated: boolean, completion: UIPrinterPickerCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620512-dismissanimated
    dismissAnimated(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontroller/1620516-selectedprinter
    selectedPrinter(): UIPrinter;
    setSelectedPrinter(value: UIPrinter): void;
    //
    alloc():UIPrinterPickerController;
    //
    init():UIPrinterPickerController;
  }
}

declare const UIPrinterPickerController: cocoascript.UIPrinterPickerController;
declare namespace cocoascript {
  /**
   * The methods that objects adopt so that they can act as a "restoration class” for view controllers during state restoration.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollerrestoration
   */
  interface UIViewControllerRestoration {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerrestoration/1616859-viewcontrollerwithrestorationide
    viewControllerWithRestorationIdentifierPath_coder(identifierComponents: string | cocoascript.NSString, coder: NSCoder):UIViewController;
  }
}
declare namespace cocoascript {
  /**
   * The interface that restoration classes use to restore preserved objects.
   * https://developer.apple.com/documentation/uikit/uiobjectrestoration
   */
  interface UIObjectRestoration {
    // https://developer.apple.com/documentation/uikit/uiobjectrestoration/1616855-objectwithrestorationidentifierp
    objectWithRestorationIdentifierPath_coder(identifierComponents: string | cocoascript.NSString, coder: NSCoder):UIStateRestoring;
  }
}
declare namespace cocoascript {
  /**
   * Methods for adding objects to your state restoration archives.
   * https://developer.apple.com/documentation/uikit/uistaterestoring
   */
  interface UIStateRestoring extends NSObject {
    // https://developer.apple.com/documentation/uikit/uistaterestoring/1616867-restorationparent
    restorationParent(): UIStateRestoring;
    setRestorationParent(value: UIStateRestoring): void;
    // https://developer.apple.com/documentation/uikit/uistaterestoring/1616851-objectrestorationclass
    objectRestorationClass(): UIObjectRestoration;
    setObjectRestorationClass(value: UIObjectRestoration): void;
    // https://developer.apple.com/documentation/uikit/uistaterestoring/1616866-encoderestorablestatewithcoder
    encodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uistaterestoring/1616854-decoderestorablestatewithcoder
    decodeRestorableStateWithCoder(coder: NSCoder):void;
    // https://developer.apple.com/documentation/uikit/uistaterestoring/1616864-applicationfinishedrestoringstat
    applicationFinishedRestoringState():void;
  }
}
declare namespace cocoascript {
  /**
   * A collection of methods that gives you access to the appearance proxy for a class.
   * https://developer.apple.com/documentation/uikit/uiappearance
   */
  interface UIAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiappearance/1615010-appearance
    appearance():UIAppearance;
    // https://developer.apple.com/documentation/uikit/uiappearance/1615007-appearancefortraitcollection
    appearanceForTraitCollection(trait: UITraitCollection):UIAppearance;
    // https://developer.apple.com/documentation/uikit/uiappearance/1615013-appearancewhencontainedininstanc
    appearanceWhenContainedInInstancesOfClasses(containerTypes: UIAppearanceContainer):UIAppearance;
    // https://developer.apple.com/documentation/uikit/uiappearance/1615008-appearancefortraitcollection
    appearanceForTraitCollection_whenContainedInInstancesOfClasses(trait: UITraitCollection, containerTypes: UIAppearanceContainer):UIAppearance;
    // https://developer.apple.com/documentation/uikit/uiappearance/1615006-appearancewhencontainedin
    appearanceWhenContainedIn(...ContainerClass: Array<UIAppearanceContainer>):UIAppearance;
    // https://developer.apple.com/documentation/uikit/uiappearance/1615012-appearancefortraitcollection
    appearanceForTraitCollection_whenContainedIn(trait: UITraitCollection, ...ContainerClass: Array<UIAppearanceContainer>):UIAppearance;
  }
}
declare namespace cocoascript {
  /**
   * An object for customizing the appearance of a navigation bar.
   * https://developer.apple.com/documentation/uikit/uinavigationbarappearance
   */
  interface UINavigationBarAppearance extends UIBarAppearance {
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198039-titletextattributes
    titleTextAttributes(): id;
    setTitleTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198035-largetitletextattributes
    largeTitleTextAttributes(): id;
    setLargeTitleTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198038-titlepositionadjustment
    titlePositionAdjustment(): UIOffset;
    setTitlePositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198033-buttonappearance
    buttonAppearance(): UIBarButtonItemAppearance;
    setButtonAppearance(value: UIBarButtonItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198030-backbuttonappearance
    backButtonAppearance(): UIBarButtonItemAppearance;
    setBackButtonAppearance(value: UIBarButtonItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198031-backindicatorimage
    backIndicatorImage(): UIImage;
    setBackIndicatorImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198032-backindicatortransitionmaskimage
    backIndicatorTransitionMaskImage(): UIImage;
    setBackIndicatorTransitionMaskImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198037-setbackindicatorimage
    setBackIndicatorImage_transitionMaskImage(backIndicatorImage: UIImage, backIndicatorTransitionMaskImage: UIImage):void;
    // https://developer.apple.com/documentation/uikit/uinavigationbarappearance/3198034-donebuttonappearance
    doneButtonAppearance(): UIBarButtonItemAppearance;
    setDoneButtonAppearance(value: UIBarButtonItemAppearance): void;
    //
    alloc():UINavigationBarAppearance;
    //
    init():UINavigationBarAppearance;
  }
}

declare const UINavigationBarAppearance: cocoascript.UINavigationBarAppearance;
declare namespace cocoascript {
  /**
   * An object for customizing the appearance of a toolbar.
   * https://developer.apple.com/documentation/uikit/uitoolbarappearance
   */
  interface UIToolbarAppearance extends UIBarAppearance {
    // https://developer.apple.com/documentation/uikit/uitoolbarappearance/3198083-buttonappearance
    buttonAppearance(): UIBarButtonItemAppearance;
    setButtonAppearance(value: UIBarButtonItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitoolbarappearance/3198084-donebuttonappearance
    doneButtonAppearance(): UIBarButtonItemAppearance;
    setDoneButtonAppearance(value: UIBarButtonItemAppearance): void;
    //
    alloc():UIToolbarAppearance;
    //
    init():UIToolbarAppearance;
  }
}

declare const UIToolbarAppearance: cocoascript.UIToolbarAppearance;
declare namespace cocoascript {
  /**
   * An object for customizing the appearance of a tab bar.
   * https://developer.apple.com/documentation/uikit/uitabbarappearance
   */
  interface UITabBarAppearance extends UIBarAppearance {
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198055-stackedlayoutappearance
    stackedLayoutAppearance(): UITabBarItemAppearance;
    setStackedLayoutAppearance(value: UITabBarItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198052-stackeditempositioning
    stackedItemPositioning(): UITabBarItemPositioning;
    setStackedItemPositioning(value: UITabBarItemPositioning): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198053-stackeditemspacing
    stackedItemSpacing(): CGFloat;
    setStackedItemSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198054-stackeditemwidth
    stackedItemWidth(): CGFloat;
    setStackedItemWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198049-inlinelayoutappearance
    inlineLayoutAppearance(): UITabBarItemAppearance;
    setInlineLayoutAppearance(value: UITabBarItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198048-compactinlinelayoutappearance
    compactInlineLayoutAppearance(): UITabBarItemAppearance;
    setCompactInlineLayoutAppearance(value: UITabBarItemAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198051-selectionindicatortintcolor
    selectionIndicatorTintColor(): UIColor;
    setSelectionIndicatorTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitabbarappearance/3198050-selectionindicatorimage
    selectionIndicatorImage(): UIImage;
    setSelectionIndicatorImage(value: UIImage): void;
    //
    alloc():UITabBarAppearance;
    //
    init():UITabBarAppearance;
  }
}

declare const UITabBarAppearance: cocoascript.UITabBarAppearance;
declare namespace cocoascript {
  /**
   * An object for customizing the appearance of tab bar items.
   * https://developer.apple.com/documentation/uikit/uitabbaritemappearance
   */
  interface UITabBarItemAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198062-initwithstyle
    initWithStyle(style: UITabBarItemAppearanceStyle):UITabBarItemAppearance;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198060-init
    init():UITabBarItemAppearance;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198061-initwithcoder
    initWithCoder(coder: NSCoder):UITabBarItemAppearance;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198057-configurewithdefaultforstyle
    configureWithDefaultForStyle(style: UITabBarItemAppearanceStyle):void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198064-normal
    normal(): UITabBarItemStateAppearance;
    setNormal(value: UITabBarItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198065-selected
    selected(): UITabBarItemStateAppearance;
    setSelected(value: UITabBarItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198058-disabled
    disabled(): UITabBarItemStateAppearance;
    setDisabled(value: UITabBarItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198059-focused
    focused(): UITabBarItemStateAppearance;
    setFocused(value: UITabBarItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3368163-copy
    copy():UITabBarItemAppearance;
    //
    alloc():UITabBarItemAppearance;
    //
    init():UITabBarItemAppearance;
  }
}

declare const UITabBarItemAppearance: cocoascript.UITabBarItemAppearance;
declare namespace cocoascript {
  /**
   * A data object containing the specific customizations for tab bar items in a particular state.
   * https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance
   */
  interface UITabBarItemStateAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198078-titletextattributes
    titleTextAttributes(): id;
    setTitleTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198077-titlepositionadjustment
    titlePositionAdjustment(): UIOffset;
    setTitlePositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198076-iconcolor
    iconColor(): UIColor;
    setIconColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198074-badgetextattributes
    badgeTextAttributes(): id;
    setBadgeTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198072-badgebackgroundcolor
    badgeBackgroundColor(): UIColor;
    setBadgeBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198075-badgetitlepositionadjustment
    badgeTitlePositionAdjustment(): UIOffset;
    setBadgeTitlePositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uitabbaritemstateappearance/3198073-badgepositionadjustment
    badgePositionAdjustment(): UIOffset;
    setBadgePositionAdjustment(value: UIOffset): void;
    //
    alloc():UITabBarItemStateAppearance;
    //
    init():UITabBarItemStateAppearance;
  }
}

declare const UITabBarItemStateAppearance: cocoascript.UITabBarItemStateAppearance;
declare namespace cocoascript {
  /**
   * An object for customizing the basic appearance of system bars.
   * https://developer.apple.com/documentation/uikit/uibarappearance
   */
  interface UIBarAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198004-initwithidiom
    initWithIdiom(idiom: UIUserInterfaceIdiom):UIBarAppearance;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198002-initwithbarappearance
    initWithBarAppearance(barAppearance: UIBarAppearance):UIBarAppearance;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198001-init
    init():UIBarAppearance;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198003-initwithcoder
    initWithCoder(coder: NSCoder):UIBarAppearance;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197997-configurewithdefaultbackground
    configureWithDefaultBackground():void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197998-configurewithopaquebackground
    configureWithOpaqueBackground():void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197999-configurewithtransparentbackgrou
    configureWithTransparentBackground():void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197994-backgroundeffect
    backgroundEffect(): UIBlurEffect;
    setBackgroundEffect(value: UIBlurEffect): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197993-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197995-backgroundimage
    backgroundImage(): UIImage;
    setBackgroundImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3197996-backgroundimagecontentmode
    backgroundImageContentMode(): UIViewContentMode;
    setBackgroundImageContentMode(value: UIViewContentMode): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198008-shadowcolor
    shadowColor(): UIColor;
    setShadowColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198009-shadowimage
    shadowImage(): UIImage;
    setShadowImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3198000-idiom
    idiom(): UIUserInterfaceIdiom;
    setIdiom(value: UIUserInterfaceIdiom): void;
    // https://developer.apple.com/documentation/uikit/uibarappearance/3368150-copy
    copy():UIBarAppearance;
    //
    alloc():UIBarAppearance;
    //
    init():UIBarAppearance;
  }
}

declare const UIBarAppearance: cocoascript.UIBarAppearance;
declare namespace cocoascript {
  /**
   * An object for customizing the appearance of bar button items.
   * https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance
   */
  interface UIBarButtonItemAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198018-initwithstyle
    initWithStyle(style: UIBarButtonItemStyle):UIBarButtonItemAppearance;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198015-init
    init():UIBarButtonItemAppearance;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198017-initwithcoder
    initWithCoder(coder: NSCoder):UIBarButtonItemAppearance;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198011-configurewithdefaultforstyle
    configureWithDefaultForStyle(style: UIBarButtonItemStyle):void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198019-normal
    normal(): UIBarButtonItemStateAppearance;
    setNormal(value: UIBarButtonItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198012-disabled
    disabled(): UIBarButtonItemStateAppearance;
    setDisabled(value: UIBarButtonItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198014-highlighted
    highlighted(): UIBarButtonItemStateAppearance;
    setHighlighted(value: UIBarButtonItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3198013-focused
    focused(): UIBarButtonItemStateAppearance;
    setFocused(value: UIBarButtonItemStateAppearance): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemappearance/3368152-copy
    copy():UIBarButtonItemAppearance;
    //
    alloc():UIBarButtonItemAppearance;
    //
    init():UIBarButtonItemAppearance;
  }
}

declare const UIBarButtonItemAppearance: cocoascript.UIBarButtonItemAppearance;
declare namespace cocoascript {
  /**
   * A data object containing the specific customizations for a bar button item in a particular state.
   * https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance
   */
  interface UIBarButtonItemStateAppearance extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance/3198025-titletextattributes
    titleTextAttributes(): id;
    setTitleTextAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance/3198024-titlepositionadjustment
    titlePositionAdjustment(): UIOffset;
    setTitlePositionAdjustment(value: UIOffset): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance/3198022-backgroundimage
    backgroundImage(): UIImage;
    setBackgroundImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibarbuttonitemstateappearance/3198023-backgroundimagepositionadjustmen
    backgroundImagePositionAdjustment(): UIOffset;
    setBackgroundImagePositionAdjustment(value: UIOffset): void;
    //
    alloc():UIBarButtonItemStateAppearance;
    //
    init():UIBarButtonItemStateAppearance;
  }
}

declare const UIBarButtonItemStateAppearance: cocoascript.UIBarButtonItemStateAppearance;
declare namespace cocoascript {
  /**
   * A protocol that a class must adopt to allow appearance customization using the
   * https://developer.apple.com/documentation/uikit/uiappearancecontainer
   */
  interface UIAppearanceContainer extends NSObject {
  }
}
declare namespace cocoascript {
  /**
   * The abstract superclass for all feedback generators.
   * https://developer.apple.com/documentation/uikit/uifeedbackgenerator
   */
  interface UIFeedbackGenerator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifeedbackgenerator/2369818-prepare
    prepare():void;
    //
    alloc():UIFeedbackGenerator;
    //
    init():UIFeedbackGenerator;
  }
}

declare const UIFeedbackGenerator: cocoascript.UIFeedbackGenerator;
declare namespace cocoascript {
  /**
   * A concrete
   * https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator
   */
  interface UIImpactFeedbackGenerator extends UIFeedbackGenerator {
    // https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/2374286-initwithstyle
    initWithStyle(style: UIImpactFeedbackStyle):UIImpactFeedbackGenerator;
    // https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/2374287-impactoccurred
    impactOccurred():void;
    // https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/3183920-impactoccurredwithintensity
    impactOccurredWithIntensity(intensity: CGFloat):void;
    //
    alloc():UIImpactFeedbackGenerator;
    //
    init():UIImpactFeedbackGenerator;
  }
}

declare const UIImpactFeedbackGenerator: cocoascript.UIImpactFeedbackGenerator;
declare namespace cocoascript {
  /**
   * A concrete
   * https://developer.apple.com/documentation/uikit/uinotificationfeedbackgenerator
   */
  interface UINotificationFeedbackGenerator extends UIFeedbackGenerator {
    // https://developer.apple.com/documentation/uikit/uinotificationfeedbackgenerator/2369826-notificationoccurred
    notificationOccurred(notificationType: UINotificationFeedbackType):void;
    //
    alloc():UINotificationFeedbackGenerator;
    //
    init():UINotificationFeedbackGenerator;
  }
}

declare const UINotificationFeedbackGenerator: cocoascript.UINotificationFeedbackGenerator;
declare namespace cocoascript {
  /**
   * A concrete
   * https://developer.apple.com/documentation/uikit/uiselectionfeedbackgenerator
   */
  interface UISelectionFeedbackGenerator extends UIFeedbackGenerator {
    // https://developer.apple.com/documentation/uikit/uiselectionfeedbackgenerator/2374284-selectionchanged
    selectionChanged():void;
    //
    alloc():UISelectionFeedbackGenerator;
    //
    init():UISelectionFeedbackGenerator;
  }
}

declare const UISelectionFeedbackGenerator: cocoascript.UISelectionFeedbackGenerator;
declare namespace cocoascript {
  /**
   * An object that defines the properties associated with a hardware-based display.
   * https://developer.apple.com/documentation/uikit/uiscreen
   */
  interface UIScreen extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscreen/1617815-mainscreen
    mainScreen(): UIScreen;
    setMainScreen(value: UIScreen): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617812-screens
    screens(): UIScreen;
    setScreens(value: UIScreen): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617829-mirroredscreen
    mirroredScreen(): UIScreen;
    setMirroredScreen(value: UIScreen): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617833-coordinatespace
    coordinateSpace(): UICoordinateSpace;
    setCoordinateSpace(value: UICoordinateSpace): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617819-fixedcoordinatespace
    fixedCoordinateSpace(): UICoordinateSpace;
    setFixedCoordinateSpace(value: UICoordinateSpace): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617838-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617835-applicationframe
    applicationFrame(): CGRect;
    setApplicationFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617810-nativebounds
    nativeBounds(): CGRect;
    setNativeBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617825-nativescale
    nativeScale(): CGFloat;
    setNativeScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617836-scale
    scale(): CGFloat;
    setScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617817-currentmode
    currentMode(): UIScreenMode;
    setCurrentMode(value: UIScreenMode): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617823-preferredmode
    preferredMode(): UIScreenMode;
    setPreferredMode(value: UIScreenMode): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617839-availablemodes
    availableModes(): UIScreenMode;
    setAvailableModes(value: UIScreenMode): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617820-displaylinkwithtarget
    displayLinkWithTarget_selector(target: UIScreen, sel: SEL):CADisplayLink;
    // https://developer.apple.com/documentation/uikit/uiscreen/2806814-maximumframespersecond
    maximumFramesPerSecond(): NSInteger;
    setMaximumFramesPerSecond(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617830-brightness
    brightness(): CGFloat;
    setBrightness(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617821-wantssoftwaredimming
    wantsSoftwareDimming(): boolean;
    setWantsSoftwareDimming(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617824-overscancompensationinsets
    overscanCompensationInsets(): UIEdgeInsets;
    setOverscanCompensationInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617818-overscancompensation
    overscanCompensation(): UIScreenOverscanCompensation;
    setOverscanCompensation(value: UIScreenOverscanCompensation): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617814-snapshotviewafterscreenupdates
    snapshotViewAfterScreenUpdates(afterUpdates: boolean):UIView;
    // https://developer.apple.com/documentation/uikit/uiscreen/2921651-captured
    captured(): boolean;
    setCaptured(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1649175-focuseditem
    focusedItem(): UIFocusItem;
    setFocusedItem(value: UIFocusItem): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617831-focusedview
    focusedView(): UIView;
    setFocusedView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/1617816-supportsfocus
    supportsFocus(): boolean;
    setSupportsFocus(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscreen/3368162-calibratedlatency
    calibratedLatency(): CFTimeInterval;
    setCalibratedLatency(value: CFTimeInterval): void;
    //
    alloc():UIScreen;
    //
    init():UIScreen;
  }
}

declare const UIScreen: cocoascript.UIScreen;
declare namespace cocoascript {
  /**
   * The backdrop for your app’s user interface and the object that dispatches events to your views.
   * https://developer.apple.com/documentation/uikit/uiwindow
   */
  interface UIWindow extends UIView {
    // https://developer.apple.com/documentation/uikit/uiwindow/3197961-initwithwindowscene
    initWithWindowScene(windowScene: UIWindowScene):UIWindow;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621581-rootviewcontroller
    rootViewController(): UIViewController;
    setRootViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621593-windowlevel
    windowLevel(): UIWindowLevel;
    setWindowLevel(value: UIWindowLevel): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621597-setscreen
    screen(): UIScreen;
    setScreen(value: UIScreen): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/3368165-canresizetofitcontent
    canResizeToFitContent(): boolean;
    setCanResizeToFitContent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621612-keywindow
    keyWindow(): boolean;
    setKeyWindow(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/3750931-canbecomekeywindow
    canBecomeKeyWindow(): boolean;
    setCanBecomeKeyWindow(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621601-makekeyandvisible
    makeKeyAndVisible():void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621610-makekeywindow
    makeKeyWindow():void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621596-becomekeywindow
    becomeKeyWindow():void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621618-resignkeywindow
    resignKeyWindow():void;
    // https://developer.apple.com/documentation/uikit/uiwindow/3197962-windowscene
    windowScene(): UIWindowScene;
    setWindowScene(value: UIWindowScene): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/2935634-avdisplaymanager
    avDisplayManager(): AVDisplayManager;
    setAvDisplayManager(value: AVDisplayManager): void;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621589-convertpoint
    convertPoint_toWindow(point: CGPoint, window: UIWindow):CGPoint;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621583-convertpoint
    convertPoint_fromWindow(point: CGPoint, window: UIWindow):CGPoint;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621609-convertrect
    convertRect_toWindow(rect: CGRect, window: UIWindow):CGRect;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621604-convertrect
    convertRect_fromWindow(rect: CGRect, window: UIWindow):CGRect;
    // https://developer.apple.com/documentation/uikit/uiwindow/1621614-sendevent
    sendEvent(event: UIEvent):void;
    //
    alloc():UIWindow;
    //
    init():UIWindow;
  }
}

declare const UIWindow: cocoascript.UIWindow;
// https://developer.apple.com/documentation/uikit/uikeyboardanimationcurveuserinfokey
declare const UIKeyboardAnimationCurveUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardanimationdurationuserinfokey
declare const UIKeyboardAnimationDurationUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardislocaluserinfokey
declare const UIKeyboardIsLocalUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardcenterbeginuserinfokey
declare const UIKeyboardCenterBeginUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardcenterenduserinfokey
declare const UIKeyboardCenterEndUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardboundsuserinfokey
declare const UIKeyboardBoundsUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardframebeginuserinfokey
declare const UIKeyboardFrameBeginUserInfoKey: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uikeyboardframeenduserinfokey
declare const UIKeyboardFrameEndUserInfoKey: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * The background appearance for a popover.
   * https://developer.apple.com/documentation/uikit/uipopoverbackgroundview
   */
  interface UIPopoverBackgroundView extends UIView {
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundview/1619347-arrowoffset
    arrowOffset(): CGFloat;
    setArrowOffset(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundview/1619355-arrowdirection
    arrowDirection(): UIPopoverArrowDirection;
    setArrowDirection(value: UIPopoverArrowDirection): void;
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundview/1619357-wantsdefaultcontentappearance
    wantsDefaultContentAppearance(): boolean;
    setWantsDefaultContentAppearance(value: boolean): void;
    //
    alloc():UIPopoverBackgroundView;
    //
    init():UIPopoverBackgroundView;
  }
}

declare const UIPopoverBackgroundView: cocoascript.UIPopoverBackgroundView;
declare namespace cocoascript {
  /**
   * A set of methods for converting between different frames of reference on a screen.
   * https://developer.apple.com/documentation/uikit/uicoordinatespace
   */
  interface UICoordinateSpace extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicoordinatespace/1622443-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uicoordinatespace/1622609-convertpoint
    convertPoint_toCoordinateSpace(point: CGPoint, coordinateSpace: UICoordinateSpace):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicoordinatespace/1622550-convertpoint
    convertPoint_fromCoordinateSpace(point: CGPoint, coordinateSpace: UICoordinateSpace):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicoordinatespace/1622564-convertrect
    convertRect_toCoordinateSpace(rect: CGRect, coordinateSpace: UICoordinateSpace):CGRect;
    // https://developer.apple.com/documentation/uikit/uicoordinatespace/1622661-convertrect
    convertRect_fromCoordinateSpace(rect: CGRect, coordinateSpace: UICoordinateSpace):CGRect;
  }
}
declare namespace cocoascript {
  /**
   * An object that manages the display of content in a popover.
   * https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller
   */
  interface UIPopoverPresentationController extends UIPresentationController {
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622320-delegate
    delegate(): UIPopoverPresentationControllerDelegate;
    setDelegate(value: UIPopoverPresentationControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622323-popoverlayoutmargins
    popoverLayoutMargins(): UIEdgeInsets;
    setPopoverLayoutMargins(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622316-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622312-passthroughviews
    passthroughViews(): UIView;
    setPassthroughViews(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622318-popoverbackgroundviewclass
    popoverBackgroundViewClass(): UIPopoverBackgroundViewMethods;
    setPopoverBackgroundViewClass(value: UIPopoverBackgroundViewMethods): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622325-canoverlapsourceviewrect
    canOverlapSourceViewRect(): boolean;
    setCanOverlapSourceViewRect(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622314-barbuttonitem
    barButtonItem(): UIBarButtonItem;
    setBarButtonItem(value: UIBarButtonItem): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622313-sourceview
    sourceView(): UIView;
    setSourceView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622324-sourcerect
    sourceRect(): CGRect;
    setSourceRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622319-permittedarrowdirections
    permittedArrowDirections(): UIPopoverArrowDirection;
    setPermittedArrowDirections(value: UIPopoverArrowDirection): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/1622315-arrowdirection
    arrowDirection(): UIPopoverArrowDirection;
    setArrowDirection(value: UIPopoverArrowDirection): void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontroller/3810055-adaptivesheetpresentationcontrol
    adaptiveSheetPresentationController(): UISheetPresentationController;
    setAdaptiveSheetPresentationController(value: UISheetPresentationController): void;
    //
    alloc():UIPopoverPresentationController;
    //
    init():UIPopoverPresentationController;
  }
}

declare const UIPopoverPresentationController: cocoascript.UIPopoverPresentationController;
declare namespace cocoascript {
  /**
   * A set of methods that
   * https://developer.apple.com/documentation/uikit/uipopoverbackgroundviewmethods
   */
  interface UIPopoverBackgroundViewMethods {
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundviewmethods/1619349-contentviewinsets
    contentViewInsets():UIEdgeInsets;
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundviewmethods/1619351-arrowbase
    arrowBase():CGFloat;
    // https://developer.apple.com/documentation/uikit/uipopoverbackgroundviewmethods/1619354-arrowheight
    arrowHeight():CGFloat;
  }
}
declare namespace cocoascript {
  /**
   * An action that can be taken when the user taps a button in an alert.
   * https://developer.apple.com/documentation/uikit/uialertaction
   */
  interface UIAlertAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uialertaction/1620097-actionwithtitle
    actionWithTitle_style_handler(title: string | cocoascript.NSString, style: UIAlertActionStyle, handler: UIAlertAction):UIAlertAction;
    // https://developer.apple.com/documentation/uikit/uialertaction/1620098-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uialertaction/1620107-style
    style(): UIAlertActionStyle;
    setStyle(value: UIAlertActionStyle): void;
    // https://developer.apple.com/documentation/uikit/uialertaction/1620109-enabled
    enabled(): boolean;
    setEnabled(value: boolean): void;
    //
    alloc():UIAlertAction;
    //
    init():UIAlertAction;
  }
}

declare const UIAlertAction: cocoascript.UIAlertAction;
declare namespace cocoascript {
  /**
   * A possible set of attributes that can be applied to a screen object.
   * https://developer.apple.com/documentation/uikit/uiscreenmode
   */
  interface UIScreenMode extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscreenmode/1620083-size
    size(): CGSize;
    setSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiscreenmode/1620082-pixelaspectratio
    pixelAspectRatio(): CGFloat;
    setPixelAspectRatio(value: CGFloat): void;
    //
    alloc():UIScreenMode;
    //
    init():UIScreenMode;
  }
}

declare const UIScreenMode: cocoascript.UIScreenMode;
declare namespace cocoascript {
  /**
   * An object that contains the specific font, size, style, and weight attributes to apply to a symbol image.
   * https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration
   */
  interface UIImageSymbolConfiguration extends UIImageConfiguration {
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294241-configurationwithpointsize
    configurationWithPointSize(pointSize: CGFloat):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294242-configurationwithpointsize
    configurationWithPointSize_weight(pointSize: CGFloat, weight: UIImageSymbolWeight):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294243-configurationwithpointsize
    configurationWithPointSize_weight_scale(pointSize: CGFloat, weight: UIImageSymbolWeight, scale: UIImageSymbolScale):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294244-configurationwithscale
    configurationWithScale(scale: UIImageSymbolScale):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294245-configurationwithtextstyle
    configurationWithTextStyle(textStyle: UIFontTextStyle):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294246-configurationwithtextstyle
    configurationWithTextStyle_scale(textStyle: UIFontTextStyle, scale: UIImageSymbolScale):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294247-configurationwithweight
    configurationWithWeight(weight: UIImageSymbolWeight):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294239-configurationwithfont
    configurationWithFont(font: UIFont):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294240-configurationwithfont
    configurationWithFont_scale(font: UIFont, scale: UIImageSymbolScale):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810053-configurationwithhierarchicalcol
    configurationWithHierarchicalColor(hierarchicalColor: UIColor):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810054-configurationwithpalettecolors
    configurationWithPaletteColors(paletteColors: UIColor):UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810052-configurationpreferringmulticolo
    configurationPreferringMulticolor():UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294253-unspecifiedconfiguration
    unspecifiedConfiguration(): UIImageSymbolConfiguration;
    setUnspecifiedConfiguration(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294248-configurationwithoutpointsizeand
    configurationWithoutPointSizeAndWeight():UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294249-configurationwithoutscale
    configurationWithoutScale():UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294250-configurationwithouttextstyle
    configurationWithoutTextStyle():UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294251-configurationwithoutweight
    configurationWithoutWeight():UIImageSymbolConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294252-isequaltoconfiguration
    isEqualToConfiguration(otherConfiguration: UIImageSymbolConfiguration):boolean;
    //
    alloc():UIImageSymbolConfiguration;
    //
    init():UIImageSymbolConfiguration;
  }
}

declare const UIImageSymbolConfiguration: cocoascript.UIImageSymbolConfiguration;
declare namespace cocoascript {
  /**
   * A configuration object that contains the traits that the system uses when selecting the current image variant.
   * https://developer.apple.com/documentation/uikit/uiimageconfiguration
   */
  interface UIImageConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiimageconfiguration/3294236-configurationbyapplyingconfigura
    configurationByApplyingConfiguration(otherConfiguration: UIImageConfiguration):UIImageConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimageconfiguration/3295946-configurationwithtraitcollection
    configurationWithTraitCollection(traitCollection: UITraitCollection):UIImageConfiguration;
    // https://developer.apple.com/documentation/uikit/uiimageconfiguration/3295947-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    //
    alloc():UIImageConfiguration;
    //
    init():UIImageConfiguration;
  }
}

declare const UIImageConfiguration: cocoascript.UIImageConfiguration;
declare namespace cocoascript {
  /**
   * An object that coordinates the creation of PDF screenshots of an app’s content.
   * https://developer.apple.com/documentation/uikit/uiscreenshotservice
   */
  interface UIScreenshotService extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscreenshotservice/3213934-delegate
    delegate(): UIScreenshotServiceDelegate;
    setDelegate(value: UIScreenshotServiceDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiscreenshotservice/3213935-windowscene
    windowScene(): UIWindowScene;
    setWindowScene(value: UIWindowScene): void;
    //
    alloc():UIScreenshotService;
    //
    init():UIScreenshotService;
  }
}

declare const UIScreenshotService: cocoascript.UIScreenshotService;
declare namespace cocoascript {
  /**
   * An abstract base class for creating graphics renderers.
   * https://developer.apple.com/documentation/uikit/uigraphicsrenderer
   */
  interface UIGraphicsRenderer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1648548-initwithbounds
    initWithBounds(bounds: CGRect):UIGraphicsRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1648558-initwithbounds
    initWithBounds_format(bounds: CGRect, format: UIGraphicsRendererFormat):UIGraphicsRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1648553-allowsimageoutput
    allowsImageOutput(): boolean;
    setAllowsImageOutput(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1648556-format
    format(): UIGraphicsRendererFormat;
    setFormat(value: UIGraphicsRendererFormat): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1649839-rundrawingactions
    runDrawingActions_completionActions_error(drawingActions: UIGraphicsDrawingActions, completionActions: UIGraphicsDrawingActions, error: NSError):boolean;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1649838-contextwithformat
    contextWithFormat(format: UIGraphicsRendererFormat):CGContextRef;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1649837-preparecgcontext
    prepareCGContext_withRendererContext(context: CGContextRef, rendererContext: UIGraphicsRendererContext):void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderer/1649730-renderercontextclass
    rendererContextClass():Class;
    //
    alloc():UIGraphicsRenderer;
    //
    init():UIGraphicsRenderer;
  }
}

declare const UIGraphicsRenderer: cocoascript.UIGraphicsRenderer;
declare namespace cocoascript {
  /**
   * The base class for the drawing environments for graphics renderers.
   * https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext
   */
  interface UIGraphicsRendererContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648560-cgcontext
    CGContext(): CGContextRef;
    setCGContext(value: CGContextRef): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648557-format
    format(): UIGraphicsRendererFormat;
    setFormat(value: UIGraphicsRendererFormat): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648555-strokerect
    strokeRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648562-strokerect
    strokeRect_blendMode(rect: CGRect, blendMode: CGBlendMode):void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648552-fillrect
    fillRect_blendMode(rect: CGRect, blendMode: CGBlendMode):void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648554-fillrect
    fillRect(rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uigraphicsrenderercontext/1648549-cliptorect
    clipToRect(rect: CGRect):void;
    //
    alloc():UIGraphicsRendererContext;
    //
    init():UIGraphicsRendererContext;
  }
}

declare const UIGraphicsRendererContext: cocoascript.UIGraphicsRendererContext;
declare namespace cocoascript {
  /**
   * A set of drawing attributes that represents the configuration of a graphics renderer context.
   * https://developer.apple.com/documentation/uikit/uigraphicsrendererformat
   */
  interface UIGraphicsRendererFormat extends NSObject {
    // https://developer.apple.com/documentation/uikit/uigraphicsrendererformat/1648550-defaultformat
    defaultFormat():UIGraphicsRendererFormat;
    // https://developer.apple.com/documentation/uikit/uigraphicsrendererformat/2928214-preferredformat
    preferredFormat():UIGraphicsRendererFormat;
    // https://developer.apple.com/documentation/uikit/uigraphicsrendererformat/1648563-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    //
    alloc():UIGraphicsRendererFormat;
    //
    init():UIGraphicsRendererFormat;
  }
}

declare const UIGraphicsRendererFormat: cocoascript.UIGraphicsRendererFormat;
declare namespace cocoascript {
  /**
   * A graphics renderer for creating Core Graphics-backed images.
   * https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer
   */
  interface UIGraphicsImageRenderer extends UIGraphicsRenderer {
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649229-initwithbounds
    initWithBounds_format(bounds: CGRect, format: UIGraphicsImageRendererFormat):UIGraphicsImageRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649231-initwithsize
    initWithSize(size: CGSize):UIGraphicsImageRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649236-initwithsize
    initWithSize_format(size: CGSize, format: UIGraphicsImageRendererFormat):UIGraphicsImageRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649230-imagewithactions
    imageWithActions(actions: UIGraphicsImageDrawingActions):UIImage;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649234-jpegdatawithcompressionquality
    JPEGDataWithCompressionQuality_actions(compressionQuality: CGFloat, actions: UIGraphicsImageDrawingActions):NSData;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderer/1649233-pngdatawithactions
    PNGDataWithActions(actions: UIGraphicsImageDrawingActions):NSData;
    //
    alloc():UIGraphicsImageRenderer;
    //
    init():UIGraphicsImageRenderer;
  }
}

declare const UIGraphicsImageRenderer: cocoascript.UIGraphicsImageRenderer;
declare namespace cocoascript {
  /**
   * The drawing environment for an image renderer.
   * https://developer.apple.com/documentation/uikit/uigraphicsimagerenderercontext
   */
  interface UIGraphicsImageRendererContext extends UIGraphicsRendererContext {
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerenderercontext/1649237-currentimage
    currentImage(): UIImage;
    setCurrentImage(value: UIImage): void;
    //
    alloc():UIGraphicsImageRendererContext;
    //
    init():UIGraphicsImageRendererContext;
  }
}

declare const UIGraphicsImageRendererContext: cocoascript.UIGraphicsImageRendererContext;
declare namespace cocoascript {
  /**
   * A set of drawing attributes that represents the configuration of an image renderer context.
   * https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat
   */
  interface UIGraphicsImageRendererFormat extends UIGraphicsRendererFormat {
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat/2887477-formatfortraitcollection
    formatForTraitCollection(traitCollection: UITraitCollection):UIGraphicsImageRendererFormat;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat/1649238-opaque
    opaque(): boolean;
    setOpaque(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat/1649228-scale
    scale(): CGFloat;
    setScale(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat/2998464-preferredrange
    preferredRange(): UIGraphicsImageRendererFormatRange;
    setPreferredRange(value: UIGraphicsImageRendererFormatRange): void;
    // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformat/1649227-prefersextendedrange
    prefersExtendedRange(): boolean;
    setPrefersExtendedRange(value: boolean): void;
    //
    alloc():UIGraphicsImageRendererFormat;
    //
    init():UIGraphicsImageRendererFormat;
  }
}

declare const UIGraphicsImageRendererFormat: cocoascript.UIGraphicsImageRendererFormat;
declare namespace cocoascript {
  /**
   * A graphics renderer for creating PDFs.
   * https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer
   */
  interface UIGraphicsPDFRenderer extends UIGraphicsRenderer {
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649127-initwithbounds
    initWithBounds_format(bounds: CGRect, format: UIGraphicsPDFRendererFormat):UIGraphicsPDFRenderer;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649120-pdfdatawithactions
    PDFDataWithActions(actions: UIGraphicsPDFDrawingActions):NSData;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649119-writepdftourl
    writePDFToURL_withActions_error(url: NSURL, actions: UIGraphicsPDFDrawingActions, error: NSError):boolean;
    //
    alloc():UIGraphicsPDFRenderer;
    //
    init():UIGraphicsPDFRenderer;
  }
}

declare const UIGraphicsPDFRenderer: cocoascript.UIGraphicsPDFRenderer;
declare namespace cocoascript {
  /**
   * The drawing environment for a PDF renderer.
   * https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext
   */
  interface UIGraphicsPDFRendererContext extends UIGraphicsRendererContext {
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649124-beginpage
    beginPage():void;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649126-beginpagewithbounds
    beginPageWithBounds_pageInfo(bounds: CGRect, pageInfo: UIGraphicsPDFRendererContext):void;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649122-pdfcontextbounds
    pdfContextBounds(): CGRect;
    setPdfContextBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649128-adddestinationwithname
    addDestinationWithName_atPoint(name: string | cocoascript.NSString, point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649118-setdestinationwithname
    setDestinationWithName_forRect(name: string | cocoascript.NSString, rect: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrenderercontext/1649125-seturl
    setURL_forRect(url: NSURL, rect: CGRect):void;
    //
    alloc():UIGraphicsPDFRendererContext;
    //
    init():UIGraphicsPDFRendererContext;
  }
}

declare const UIGraphicsPDFRendererContext: cocoascript.UIGraphicsPDFRendererContext;
declare namespace cocoascript {
  /**
   * A set of drawing attributes that represents the configuration of a PDF renderer context.
   * https://developer.apple.com/documentation/uikit/uigraphicspdfrendererformat
   */
  interface UIGraphicsPDFRendererFormat extends UIGraphicsRendererFormat {
    // https://developer.apple.com/documentation/uikit/uigraphicspdfrendererformat/1649130-documentinfo
    documentInfo(): id;
    setDocumentInfo(value: id): void;
    //
    alloc():UIGraphicsPDFRendererFormat;
    //
    init():UIGraphicsPDFRendererFormat;
  }
}

declare const UIGraphicsPDFRendererFormat: cocoascript.UIGraphicsPDFRendererFormat;
declare namespace cocoascript {
  /**
   * A path that consists of straight and curved line segments that you can render in your custom views.
   * https://developer.apple.com/documentation/uikit/uibezierpath
   */
  interface UIBezierPath extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624355-bezierpath
    bezierPath():UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624359-bezierpathwithrect
    bezierPathWithRect(rect: CGRect):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624379-bezierpathwithovalinrect
    bezierPathWithOvalInRect(rect: CGRect):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624356-bezierpathwithroundedrect
    bezierPathWithRoundedRect_cornerRadius(rect: CGRect, cornerRadius: CGFloat):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624368-bezierpathwithroundedrect
    bezierPathWithRoundedRect_byRoundingCorners_cornerRadii(rect: CGRect, corners: UIRectCorner, cornerRadii: CGSize):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624358-bezierpathwitharccenter
    bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat, clockwise: boolean):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624362-bezierpathwithcgpath
    bezierPathWithCGPath(CGPath: CGPathRef):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624348-bezierpathbyreversingpath
    bezierPathByReversingPath():UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624381-init
    init():UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624346-initwithcoder
    initWithCoder(coder: NSCoder):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624343-movetopoint
    moveToPoint(point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624354-addlinetopoint
    addLineToPoint(point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624367-addarcwithcenter
    addArcWithCenter_radius_startAngle_endAngle_clockwise(center: CGPoint, radius: CGFloat, startAngle: CGFloat, endAngle: CGFloat, clockwise: boolean):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624357-addcurvetopoint
    addCurveToPoint_controlPoint1_controlPoint2(endPoint: CGPoint, controlPoint1: CGPoint, controlPoint2: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624351-addquadcurvetopoint
    addQuadCurveToPoint_controlPoint(endPoint: CGPoint, controlPoint: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624338-closepath
    closePath():void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624363-removeallpoints
    removeAllPoints():void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624377-appendpath
    appendPath(bezierPath: UIBezierPath):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624342-cgpath
    CGPath(): CGPathRef;
    setCGPath(value: CGPathRef): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624376-cgpath
    CGPath():CGPathRef;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624352-currentpoint
    currentPoint(): CGPoint;
    setCurrentPoint(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624349-linewidth
    lineWidth(): CGFloat;
    setLineWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624347-linecapstyle
    lineCapStyle(): CGLineCap;
    setLineCapStyle(value: CGLineCap): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624378-linejoinstyle
    lineJoinStyle(): CGLineJoin;
    setLineJoinStyle(value: CGLineJoin): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624370-miterlimit
    miterLimit(): CGFloat;
    setMiterLimit(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624344-flatness
    flatness(): CGFloat;
    setFlatness(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624360-usesevenoddfillrule
    usesEvenOddFillRule(): boolean;
    setUsesEvenOddFillRule(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624373-setlinedash
    setLineDash_count_phase(pattern: CGFloat, count: NSInteger, phase: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624374-getlinedash
    getLineDash_count_phase(pattern: CGFloat, count: NSInteger, phase: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624371-fill
    fill():void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624366-fillwithblendmode
    fillWithBlendMode_alpha(blendMode: CGBlendMode, alpha: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624365-stroke
    stroke():void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624380-strokewithblendmode
    strokeWithBlendMode_alpha(blendMode: CGBlendMode, alpha: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624341-addclip
    addClip():void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624345-containspoint
    containsPoint(point: CGPoint):boolean;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624382-empty
    empty(): boolean;
    setEmpty(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624350-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uibezierpath/1624340-applytransform
    applyTransform(transform: CGAffineTransform):void;
    //
    alloc():UIBezierPath;
    //
    init():UIBezierPath;
  }
}

declare const UIBezierPath: cocoascript.UIBezierPath;
declare namespace cocoascript {
  /**
   * A user interface that manages the printing of documents, images, and other printable content in iOS.
   * https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller
   */
  interface UIPrintInteractionController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618159-sharedprintcontroller
    sharedPrintController(): UIPrintInteractionController;
    setSharedPrintController(value: UIPrintInteractionController): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618153-delegate
    delegate(): UIPrintInteractionControllerDelegate;
    setDelegate(value: UIPrintInteractionControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618183-printingavailable
    printingAvailable(): boolean;
    setPrintingAvailable(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618184-canprintdata
    canPrintData(data: NSData):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618155-canprinturl
    canPrintURL(url: NSURL):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618150-printableutis
    printableUTIs(): string | cocoascript.NSString;
    setPrintableUTIs(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618157-printingitem
    printingItem(): id;
    setPrintingItem(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618156-printingitems
    printingItems(): NSArray;
    setPrintingItems(value: NSArray): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618148-printpagerenderer
    printPageRenderer(): UIPrintPageRenderer;
    setPrintPageRenderer(value: UIPrintPageRenderer): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618152-printformatter
    printFormatter(): UIPrintFormatter;
    setPrintFormatter(value: UIPrintFormatter): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618149-presentanimated
    presentAnimated_completionHandler(animated: boolean, completion: UIPrintInteractionCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618169-presentfrombarbuttonitem
    presentFromBarButtonItem_animated_completionHandler(item: UIBarButtonItem, animated: boolean, completion: UIPrintInteractionCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618176-presentfromrect
    presentFromRect_inView_animated_completionHandler(rect: CGRect, view: UIView, animated: boolean, completion: UIPrintInteractionCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618166-dismissanimated
    dismissAnimated(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618174-printtoprinter
    printToPrinter_completionHandler(printer: UIPrinter, completion: UIPrintInteractionCompletionHandler):boolean;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618171-printinfo
    printInfo(): UIPrintInfo;
    setPrintInfo(value: UIPrintInfo): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618165-printpaper
    printPaper(): UIPrintPaper;
    setPrintPaper(value: UIPrintPaper): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618177-showsnumberofcopies
    showsNumberOfCopies(): boolean;
    setShowsNumberOfCopies(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618164-showspaperselectionforloadedpape
    showsPaperSelectionForLoadedPapers(): boolean;
    setShowsPaperSelectionForLoadedPapers(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/1618180-showspagerange
    showsPageRange(): boolean;
    setShowsPageRange(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontroller/3791479-showspaperorientation
    showsPaperOrientation(): boolean;
    setShowsPaperOrientation(value: boolean): void;
    //
    alloc():UIPrintInteractionController;
    //
    init():UIPrintInteractionController;
  }
}

declare const UIPrintInteractionController: cocoascript.UIPrintInteractionController;
declare namespace cocoascript {
  /**
   * A printer on the network.
   * https://developer.apple.com/documentation/uikit/uiprinter
   */
  interface UIPrinter extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprinter/1620442-printerwithurl
    printerWithURL(url: NSURL):UIPrinter;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620440-url
    URL(): NSURL;
    setURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620427-displayname
    displayName(): string | cocoascript.NSString;
    setDisplayName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620426-displaylocation
    displayLocation(): string | cocoascript.NSString;
    setDisplayLocation(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620438-makeandmodel
    makeAndModel(): string | cocoascript.NSString;
    setMakeAndModel(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620436-supportedjobtypes
    supportedJobTypes(): UIPrinterJobTypes;
    setSupportedJobTypes(value: UIPrinterJobTypes): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620429-supportscolor
    supportsColor(): boolean;
    setSupportsColor(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620434-supportsduplex
    supportsDuplex(): boolean;
    setSupportsDuplex(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiprinter/1620431-contactprinter
    contactPrinter(completionHandler: boolean):void;
    //
    alloc():UIPrinter;
    //
    init():UIPrinter;
  }
}

declare const UIPrinter: cocoascript.UIPrinter;
declare namespace cocoascript {
  /**
   * Information about a print job.
   * https://developer.apple.com/documentation/uikit/uiprintinfo
   */
  interface UIPrintInfo extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623545-printinfo
    printInfo():UIPrintInfo;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623553-printinfowithdictionary
    printInfoWithDictionary(dictionary: NSDictionary):UIPrintInfo;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623539-dictionaryrepresentation
    dictionaryRepresentation(): NSDictionary;
    setDictionaryRepresentation(value: NSDictionary): void;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623546-initwithcoder
    initWithCoder(coder: NSCoder):UIPrintInfo;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623549-duplex
    duplex(): UIPrintInfoDuplex;
    setDuplex(value: UIPrintInfoDuplex): void;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623543-jobname
    jobName(): string | cocoascript.NSString;
    setJobName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623550-orientation
    orientation(): UIPrintInfoOrientation;
    setOrientation(value: UIPrintInfoOrientation): void;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623552-outputtype
    outputType(): UIPrintInfoOutputType;
    setOutputType(value: UIPrintInfoOutputType): void;
    // https://developer.apple.com/documentation/uikit/uiprintinfo/1623535-printerid
    printerID(): string | cocoascript.NSString;
    setPrinterID(value: string | cocoascript.NSString): void;
    //
    alloc():UIPrintInfo;
    //
    init():UIPrintInfo;
  }
}

declare const UIPrintInfo: cocoascript.UIPrintInfo;
declare namespace cocoascript {
  /**
   * The size of paper for a print job, and the rectangular area that the content prints within.
   * https://developer.apple.com/documentation/uikit/uiprintpaper
   */
  interface UIPrintPaper extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintpaper/1623529-papersize
    paperSize(): CGSize;
    setPaperSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiprintpaper/1623530-printablerect
    printableRect(): CGRect;
    setPrintableRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiprintpaper/1623527-bestpaperforpagesize
    bestPaperForPageSize_withPapersFromArray(contentSize: CGSize, paperList: UIPrintPaper):UIPrintPaper;
    // https://developer.apple.com/documentation/uikit/uiprintpaper/1623528-printrect
    printRect():CGRect;
    //
    alloc():UIPrintPaper;
    //
    init():UIPrintPaper;
  }
}

declare const UIPrintPaper: cocoascript.UIPrintPaper;
declare namespace cocoascript {
  /**
   * An abstract base class for print formatters, which are objects that lay out custom printable content that can cross page boundaries.
   * https://developer.apple.com/documentation/uikit/uiprintformatter
   */
  interface UIPrintFormatter extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621831-perpagecontentinsets
    perPageContentInsets(): UIEdgeInsets;
    setPerPageContentInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621826-maximumcontentheight
    maximumContentHeight(): CGFloat;
    setMaximumContentHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621840-maximumcontentwidth
    maximumContentWidth(): CGFloat;
    setMaximumContentWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621823-contentinsets
    contentInsets(): UIEdgeInsets;
    setContentInsets(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621827-startpage
    startPage(): NSInteger;
    setStartPage(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621843-pagecount
    pageCount(): NSInteger;
    setPageCount(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621841-drawinrect
    drawInRect_forPageAtIndex(rect: CGRect, pageIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621829-rectforpageatindex
    rectForPageAtIndex(pageIndex: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621834-removefromprintpagerenderer
    removeFromPrintPageRenderer():void;
    // https://developer.apple.com/documentation/uikit/uiprintformatter/1621821-printpagerenderer
    printPageRenderer(): UIPrintPageRenderer;
    setPrintPageRenderer(value: UIPrintPageRenderer): void;
    //
    alloc():UIPrintFormatter;
    //
    init():UIPrintFormatter;
  }
}

declare const UIPrintFormatter: cocoascript.UIPrintFormatter;
declare namespace cocoascript {
  /**
   * An object that lays out the drawn content (which can span multiple pages) of a view for printing.
   * https://developer.apple.com/documentation/uikit/uiviewprintformatter
   */
  interface UIViewPrintFormatter extends UIPrintFormatter {
    // https://developer.apple.com/documentation/uikit/uiviewprintformatter/1621824-view
    view(): UIView;
    setView(value: UIView): void;
    //
    alloc():UIViewPrintFormatter;
    //
    init():UIViewPrintFormatter;
  }
}

declare const UIViewPrintFormatter: cocoascript.UIViewPrintFormatter;
declare namespace cocoascript {
  /**
   * An object that lays out plain text for printing, possibly over multiple pages.
   * https://developer.apple.com/documentation/uikit/uisimpletextprintformatter
   */
  interface UISimpleTextPrintFormatter extends UIPrintFormatter {
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621838-initwithattributedtext
    initWithAttributedText(attributedText: NSAttributedString):UISimpleTextPrintFormatter;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621822-initwithtext
    initWithText(text: string | cocoascript.NSString):UISimpleTextPrintFormatter;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621820-attributedtext
    attributedText(): NSAttributedString;
    setAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621833-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621837-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621830-color
    color(): UIColor;
    setColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uisimpletextprintformatter/1621832-textalignment
    textAlignment(): NSTextAlignment;
    setTextAlignment(value: NSTextAlignment): void;
    //
    alloc():UISimpleTextPrintFormatter;
    //
    init():UISimpleTextPrintFormatter;
  }
}

declare const UISimpleTextPrintFormatter: cocoascript.UISimpleTextPrintFormatter;
declare namespace cocoascript {
  /**
   * An object that lays out HTML text for a multipage print job.
   * https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter
   */
  interface UIMarkupTextPrintFormatter extends UIPrintFormatter {
    // https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter/1621845-initwithmarkuptext
    initWithMarkupText(markupText: string | cocoascript.NSString):UIMarkupTextPrintFormatter;
    // https://developer.apple.com/documentation/uikit/uimarkuptextprintformatter/1621842-markuptext
    markupText(): string | cocoascript.NSString;
    setMarkupText(value: string | cocoascript.NSString): void;
    //
    alloc():UIMarkupTextPrintFormatter;
    //
    init():UIMarkupTextPrintFormatter;
  }
}

declare const UIMarkupTextPrintFormatter: cocoascript.UIMarkupTextPrintFormatter;
declare namespace cocoascript {
  /**
   * An extension that locates and sets up a printer without a configuration profile.
   * https://developer.apple.com/documentation/uikit/uiprintserviceextension
   */
  interface UIPrintServiceExtension extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintserviceextension/3727330-printerdestinationsforprintinfo
    printerDestinationsForPrintInfo(printInfo: UIPrintInfo):UIPrinterDestination;
    //
    alloc():UIPrintServiceExtension;
    //
    init():UIPrintServiceExtension;
  }
}

declare const UIPrintServiceExtension: cocoascript.UIPrintServiceExtension;
declare namespace cocoascript {
  /**
   * A description of a single printer.
   * https://developer.apple.com/documentation/uikit/uiprinterdestination
   */
  interface UIPrinterDestination extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprinterdestination/3727334-initwithurl
    initWithURL(url: NSURL):UIPrinterDestination;
    // https://developer.apple.com/documentation/uikit/uiprinterdestination/3727333-displayname
    displayName(): string | cocoascript.NSString;
    setDisplayName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiprinterdestination/3727335-txtrecord
    txtRecord(): NSData;
    setTxtRecord(value: NSData): void;
    // https://developer.apple.com/documentation/uikit/uiprinterdestination/3727332-url
    URL(): NSURL;
    setURL(value: NSURL): void;
    //
    alloc():UIPrinterDestination;
    //
    init():UIPrinterDestination;
  }
}

declare const UIPrinterDestination: cocoascript.UIPrinterDestination;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextattributesconversionhandler
  type UITextAttributesConversionHandler = cocoascript.id;
}
declare namespace cocoascript {
  /**
   * An object that provides access to the font’s characteristics.
   * https://developer.apple.com/documentation/uikit/uifont
   */
  interface UIFont extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifont/1619030-preferredfontfortextstyle
    preferredFontForTextStyle(style: UIFontTextStyle):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1771762-preferredfontfortextstyle
    preferredFontForTextStyle_compatibleWithTraitCollection(style: UIFontTextStyle, traitCollection: UITraitCollection):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619041-fontwithname
    fontWithName_size(fontName: string | cocoascript.NSString, fontSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619025-fontwithdescriptor
    fontWithDescriptor_size(descriptor: UIFontDescriptor, pointSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619032-fontwithsize
    fontWithSize(fontSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619042-systemfontofsize
    systemFontOfSize(fontSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619027-systemfontofsize
    systemFontOfSize_weight(fontSize: CGFloat, weight: UIFontWeight):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619039-boldsystemfontofsize
    boldSystemFontOfSize(fontSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619043-italicsystemfontofsize
    italicSystemFontOfSize(fontSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/3042484-monospacedsystemfontofsize
    monospacedSystemFontOfSize_weight(fontSize: CGFloat, weight: UIFontWeight):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619022-monospaceddigitsystemfontofsize
    monospacedDigitSystemFontOfSize_weight(fontSize: CGFloat, weight: UIFontWeight):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/1619040-familynames
    familyNames(): string | cocoascript.NSString;
    setFamilyNames(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619023-fontnamesforfamilyname
    fontNamesForFamilyName(familyName: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uifont/1619033-familyname
    familyName(): string | cocoascript.NSString;
    setFamilyName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619024-fontname
    fontName(): string | cocoascript.NSString;
    setFontName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619031-pointsize
    pointSize(): CGFloat;
    setPointSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619034-ascender
    ascender(): CGFloat;
    setAscender(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619036-descender
    descender(): CGFloat;
    setDescender(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619026-leading
    leading(): CGFloat;
    setLeading(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619035-capheight
    capHeight(): CGFloat;
    setCapHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619028-xheight
    xHeight(): CGFloat;
    setXHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619038-lineheight
    lineHeight(): CGFloat;
    setLineHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1623398-labelfontsize
    labelFontSize(): CGFloat;
    setLabelFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1623410-buttonfontsize
    buttonFontSize(): CGFloat;
    setButtonFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1623399-smallsystemfontsize
    smallSystemFontSize(): CGFloat;
    setSmallSystemFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1623395-systemfontsize
    systemFontSize(): CGFloat;
    setSystemFontSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifont/1619037-fontdescriptor
    fontDescriptor(): UIFontDescriptor;
    setFontDescriptor(value: UIFontDescriptor): void;
    // https://developer.apple.com/documentation/uikit/uifont/3255206-ek_defaultoccurrencesecondarytex
    ek_defaultOccurrenceSecondaryTextFont(): UIFont;
    setEk_defaultOccurrenceSecondaryTextFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uifont/3255205-ek_defaultoccurrenceprimarytextf
    ek_defaultOccurrencePrimaryTextFontForSizeClass(sizeClass: UIUserInterfaceSizeClass):UIFont;
    // https://developer.apple.com/documentation/uikit/uifont/3255207-ek_defaultoccurrencesmallprimary
    ek_defaultOccurrenceSmallPrimaryTextFontForSizeClass(sizeClass: UIUserInterfaceSizeClass):UIFont;
    //
    alloc():UIFont;
    //
    init():UIFont;
  }
}

declare const UIFont: cocoascript.UIFont;
declare namespace cocoascript {
  /**
   * A collection of attributes that describes a font.
   * https://developer.apple.com/documentation/uikit/uifontdescriptor
   */
  interface UIFontDescriptor extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616705-preferredfontdescriptorwithtexts
    preferredFontDescriptorWithTextStyle(style: UIFontTextStyle):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1771750-preferredfontdescriptorwithtexts
    preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection(style: UIFontTextStyle, traitCollection: UITraitCollection):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616717-fontdescriptorwithfontattributes
    fontDescriptorWithFontAttributes(attributes: UIFontDescriptor):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616670-fontdescriptorwithname
    fontDescriptorWithName_matrix(fontName: string | cocoascript.NSString, matrix: CGAffineTransform):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616674-fontdescriptorwithname
    fontDescriptorWithName_size(fontName: string | cocoascript.NSString, size: CGFloat):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616666-fontdescriptorbyaddingattributes
    fontDescriptorByAddingAttributes(attributes: UIFontDescriptor):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/3151797-fontdescriptorwithdesign
    fontDescriptorWithDesign(design: UIFontDescriptorSystemDesign):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616676-fontdescriptorwithfamily
    fontDescriptorWithFamily(newFamily: string | cocoascript.NSString):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616681-fontdescriptorwithface
    fontDescriptorWithFace(newFace: string | cocoascript.NSString):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616731-fontdescriptorwithmatrix
    fontDescriptorWithMatrix(matrix: CGAffineTransform):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616675-fontdescriptorwithsize
    fontDescriptorWithSize(newPointSize: CGFloat):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616665-fontdescriptorwithsymbolictraits
    fontDescriptorWithSymbolicTraits(symbolicTraits: UIFontDescriptorSymbolicTraits):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616679-initwithfontattributes
    initWithFontAttributes(attributes: UIFontDescriptor):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616667-init
    init():UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616662-initwithcoder
    initWithCoder(coder: NSCoder):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616699-matchingfontdescriptorswithmanda
    matchingFontDescriptorsWithMandatoryKeys(mandatoryKeys: UIFontDescriptorAttributeName):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616698-fontattributes
    fontAttributes(): id;
    setFontAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616713-matrix
    matrix(): CGAffineTransform;
    setMatrix(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616733-objectforkey
    objectForKey(anAttribute: UIFontDescriptorAttributeName):UIFontDescriptor;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616696-pointsize
    pointSize(): CGFloat;
    setPointSize(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616693-postscriptname
    postscriptName(): string | cocoascript.NSString;
    setPostscriptName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uifontdescriptor/1616723-symbolictraits
    symbolicTraits(): UIFontDescriptorSymbolicTraits;
    setSymbolicTraits(value: UIFontDescriptorSymbolicTraits): void;
    //
    alloc():UIFontDescriptor;
    //
    init():UIFontDescriptor;
  }
}

declare const UIFontDescriptor: cocoascript.UIFontDescriptor;
declare namespace cocoascript {
  /**
   * A utility object for obtaining custom fonts that scale to support Dynamic Type.
   * https://developer.apple.com/documentation/uikit/uifontmetrics
   */
  interface UIFontMetrics extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877391-initfortextstyle
    initForTextStyle(textStyle: UIFontTextStyle):UIFontMetrics;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877384-metricsfortextstyle
    metricsForTextStyle(textStyle: UIFontTextStyle):UIFontMetrics;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877382-defaultmetrics
    defaultMetrics(): UIFontMetrics;
    setDefaultMetrics(value: UIFontMetrics): void;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877385-scaledfontforfont
    scaledFontForFont(font: UIFont):UIFont;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877389-scaledfontforfont
    scaledFontForFont_compatibleWithTraitCollection(font: UIFont, traitCollection: UITraitCollection):UIFont;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877383-scaledfontforfont
    scaledFontForFont_maximumPointSize(font: UIFont, maximumPointSize: CGFloat):UIFont;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877390-scaledfontforfont
    scaledFontForFont_maximumPointSize_compatibleWithTraitCollection(font: UIFont, maximumPointSize: CGFloat, traitCollection: UITraitCollection):UIFont;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877387-scaledvalueforvalue
    scaledValueForValue(value: CGFloat):CGFloat;
    // https://developer.apple.com/documentation/uikit/uifontmetrics/2877388-scaledvalueforvalue
    scaledValueForValue_compatibleWithTraitCollection(value: CGFloat, traitCollection: UITraitCollection):CGFloat;
    //
    alloc():UIFontMetrics;
    //
    init():UIFontMetrics;
  }
}

declare const UIFontMetrics: cocoascript.UIFontMetrics;
declare namespace cocoascript {
  /**
   * An object to check a string (usually the text of a document) for misspelled words.
   * https://developer.apple.com/documentation/uikit/uitextchecker
   */
  interface UITextChecker extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621029-rangeofmisspelledwordinstring
    rangeOfMisspelledWordInString_range_startingAt_wrap_language(stringToCheck: string | cocoascript.NSString, range: NSRange, startingOffset: NSInteger, wrapFlag: boolean, language: string | cocoascript.NSString):NSRange;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621037-guessesforwordrange
    guessesForWordRange_inString_language(range: NSRange, string: string | cocoascript.NSString, language: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621034-completionsforpartialwordrange
    completionsForPartialWordRange_inString_language(range: NSRange, string: string | cocoascript.NSString, language: string | cocoascript.NSString):NSString;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621031-ignoreword
    ignoreWord(wordToIgnore: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621032-ignoredwords
    ignoredWords(): string | cocoascript.NSString;
    setIgnoredWords(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621028-learnword
    learnWord(word: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621036-unlearnword
    unlearnWord(word: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621027-haslearnedword
    hasLearnedWord(word: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uitextchecker/1621033-availablelanguages
    availableLanguages(): string | cocoascript.NSString;
    setAvailableLanguages(value: string | cocoascript.NSString): void;
    //
    alloc():UITextChecker;
    //
    init():UITextChecker;
  }
}

declare const UITextChecker: cocoascript.UITextChecker;
declare namespace cocoascript {
  /**
   * A position in a text container—that is, an index into the backing string in a text-display view.
   * https://developer.apple.com/documentation/uikit/uitextposition
   */
  interface UITextPosition extends NSObject {
    //
    alloc():UITextPosition;
    //
    init():UITextPosition;
  }
}

declare const UITextPosition: cocoascript.UITextPosition;
declare namespace cocoascript {
  /**
   * A range of characters in a text container with a starting index and an ending index in string backing a text-entry object.
   * https://developer.apple.com/documentation/uikit/uitextrange
   */
  interface UITextRange extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextrange/1614459-start
    start(): UITextPosition;
    setStart(value: UITextPosition): void;
    // https://developer.apple.com/documentation/uikit/uitextrange/1614544-end
    end(): UITextPosition;
    setEnd(value: UITextPosition): void;
    // https://developer.apple.com/documentation/uikit/uitextrange/1614556-empty
    empty(): boolean;
    setEmpty(value: boolean): void;
    //
    alloc():UITextRange;
    //
    init():UITextRange;
  }
}

declare const UITextRange: cocoascript.UITextRange;
declare namespace cocoascript {
  /**
   * An encapsulation of information about a selected range of text in a document.
   * https://developer.apple.com/documentation/uikit/uitextselectionrect
   */
  interface UITextSelectionRect extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextselectionrect/1614461-rect
    rect(): CGRect;
    setRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uitextselectionrect/1614569-writingdirection
    writingDirection(): NSWritingDirection;
    setWritingDirection(value: NSWritingDirection): void;
    // https://developer.apple.com/documentation/uikit/uitextselectionrect/1614561-isvertical
    isVertical(): boolean;
    setIsVertical(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextselectionrect/1614560-containsstart
    containsStart(): boolean;
    setContainsStart(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextselectionrect/1614516-containsend
    containsEnd(): boolean;
    setContainsEnd(value: boolean): void;
    //
    alloc():UITextSelectionRect;
    //
    init():UITextSelectionRect;
  }
}

declare const UITextSelectionRect: cocoascript.UITextSelectionRect;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextscalingtype
  type NSTextScalingType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A set of methods for interacting with the text input system and enabling features, such as autocorrect and multistage text input, in documents.
   * https://developer.apple.com/documentation/uikit/uitextinput
   */
  interface UITextInput extends UIKeyInput {
    // https://developer.apple.com/documentation/uikit/uitextinput/1614508-inputdelegate
    inputDelegate(): UITextInputDelegate;
    setInputDelegate(value: UITextInputDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614527-textinrange
    textInRange(range: UITextRange):NSString;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614558-replacerange
    replaceRange_withText(range: UITextRange, text: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614495-shouldchangetextinrange
    shouldChangeTextInRange_replacementText(range: UITextRange, text: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614541-selectedtextrange
    selectedTextRange(): UITextRange;
    setSelectedTextRange(value: UITextRange): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614489-markedtextrange
    markedTextRange(): UITextRange;
    setMarkedTextRange(value: UITextRange): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614500-markedtextstyle
    markedTextStyle(): id;
    setMarkedTextStyle(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614465-setmarkedtext
    setMarkedText_selectedRange(markedText: string | cocoascript.NSString, selectedRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/3213955-setattributedmarkedtext
    setAttributedMarkedText_selectedRange(markedText: NSAttributedString, selectedRange: NSRange):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614512-unmarktext
    unmarkText():void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614539-selectionaffinity
    selectionAffinity(): UITextStorageDirection;
    setSelectionAffinity(value: UITextStorageDirection): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614573-textrangefromposition
    textRangeFromPosition_toPosition(fromPosition: UITextPosition, toPosition: UITextPosition):UITextRange;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614511-positionfromposition
    positionFromPosition_offset(position: UITextPosition, offset: NSInteger):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614515-positionfromposition
    positionFromPosition_inDirection_offset(position: UITextPosition, direction: UITextLayoutDirection, offset: NSInteger):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614528-beginningofdocument
    beginningOfDocument(): UITextPosition;
    setBeginningOfDocument(value: UITextPosition): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614555-endofdocument
    endOfDocument(): UITextPosition;
    setEndOfDocument(value: UITextPosition): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614526-compareposition
    comparePosition_toPosition(position: UITextPosition, other: UITextPosition):NSComparisonResult;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614473-offsetfromposition
    offsetFromPosition_toPosition(from: UITextPosition, toPosition: UITextPosition):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614547-positionwithinrange
    positionWithinRange_farthestInDirection(range: UITextRange, direction: UITextLayoutDirection):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614462-characterrangebyextendingpositio
    characterRangeByExtendingPosition_inDirection(position: UITextPosition, direction: UITextLayoutDirection):UITextRange;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614502-basewritingdirectionforposition
    baseWritingDirectionForPosition_inDirection(position: UITextPosition, direction: UITextStorageDirection):NSWritingDirection;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614563-setbasewritingdirection
    setBaseWritingDirection_forRange(writingDirection: NSWritingDirection, range: UITextRange):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614570-firstrectforrange
    firstRectForRange(range: UITextRange):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614518-caretrectforposition
    caretRectForPosition(position: UITextPosition):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614523-closestpositiontopoint
    closestPositionToPoint(point: CGPoint):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614458-selectionrectsforrange
    selectionRectsForRange(range: UITextRange):UITextSelectionRect;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614533-closestpositiontopoint
    closestPositionToPoint_withinRange(point: CGPoint, range: UITextRange):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614574-characterrangeatpoint
    characterRangeAtPoint(point: CGPoint):UITextRange;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614537-tokenizer
    tokenizer(): UITextInputTokenizer;
    setTokenizer(value: UITextInputTokenizer): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614557-beginfloatingcursoratpoint
    beginFloatingCursorAtPoint(point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614550-updatefloatingcursoratpoint
    updateFloatingCursorAtPoint(point: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614497-endfloatingcursor
    endFloatingCursor():void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614507-dictationrecordingdidend
    dictationRecordingDidEnd():void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614519-dictationrecognitionfailed
    dictationRecognitionFailed():void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614568-insertdictationresult
    insertDictationResult(dictationResult: UIDictationPhrase):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614466-insertdictationresultplaceholder
    insertDictationResultPlaceholder(): id;
    setInsertDictationResultPlaceholder(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614493-framefordictationresultplacehold
    frameForDictationResultPlaceholder(placeholder: UITextInput):CGRect;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614546-removedictationresultplaceholder
    removeDictationResultPlaceholder_willInsertResult(placeholder: UITextInput, willInsertResult: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/3213953-inserttextplaceholderwithsize
    insertTextPlaceholderWithSize(size: CGSize):UITextPlaceholder;
    // https://developer.apple.com/documentation/uikit/uitextinput/3213954-removetextplaceholder
    removeTextPlaceholder(textPlaceholder: UITextPlaceholder):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/3213952-inserttext
    insertText_alternatives_style(text: string | cocoascript.NSString, alternatives: string | cocoascript.NSString, style: UITextAlternativeStyle):void;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614566-textstylingatposition
    textStylingAtPosition_inDirection(position: UITextPosition, direction: UITextStorageDirection):UITextInput;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614542-positionwithinrange
    positionWithinRange_atCharacterOffset(range: UITextRange, offset: NSInteger):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614545-characteroffsetofposition
    characterOffsetOfPosition_withinRange(position: UITextPosition, range: UITextRange):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitextinput/1614564-textinputview
    textInputView(): UIView;
    setTextInputView(value: UIView): void;
  }
}
declare namespace cocoascript {
  /**
   * An intermediary between a document and the text input system.
   * https://developer.apple.com/documentation/uikit/uitextinputdelegate
   */
  interface UITextInputDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputdelegate/1614520-textwillchange
    textWillChange(textInput: UITextInput):void;
    // https://developer.apple.com/documentation/uikit/uitextinputdelegate/1614499-textdidchange
    textDidChange(textInput: UITextInput):void;
    // https://developer.apple.com/documentation/uikit/uitextinputdelegate/1614540-selectionwillchange
    selectionWillChange(textInput: UITextInput):void;
    // https://developer.apple.com/documentation/uikit/uitextinputdelegate/1614551-selectiondidchange
    selectionDidChange(textInput: UITextInput):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods a responder uses to implement simple text entry.
   * https://developer.apple.com/documentation/uikit/uikeyinput
   */
  interface UIKeyInput extends UITextInputTraits {
    // https://developer.apple.com/documentation/uikit/uikeyinput/1614543-inserttext
    insertText(text: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uikeyinput/1614572-deletebackward
    deleteBackward():void;
    // https://developer.apple.com/documentation/uikit/uikeyinput/1614457-hastext
    hasText(): boolean;
    setHasText(value: boolean): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that defines features for keyboard input to a text object.
   * https://developer.apple.com/documentation/uikit/uitextinputtraits
   */
  interface UITextInputTraits extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624457-keyboardtype
    keyboardType(): UIKeyboardType;
    setKeyboardType(value: UIKeyboardType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624434-keyboardappearance
    keyboardAppearance(): UIKeyboardAppearance;
    setKeyboardAppearance(value: UIKeyboardAppearance): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624446-returnkeytype
    returnKeyType(): UIReturnKeyType;
    setReturnKeyType(value: UIReturnKeyType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1649656-textcontenttype
    textContentType(): UITextContentType;
    setTextContentType(value: UITextContentType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624427-securetextentry
    secureTextEntry(): boolean;
    setSecureTextEntry(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624432-enablesreturnkeyautomatically
    enablesReturnKeyAutomatically(): boolean;
    setEnablesReturnKeyAutomatically(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624447-autocapitalizationtype
    autocapitalizationType(): UITextAutocapitalizationType;
    setAutocapitalizationType(value: UITextAutocapitalizationType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624453-autocorrectiontype
    autocorrectionType(): UITextAutocorrectionType;
    setAutocorrectionType(value: UITextAutocorrectionType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/1624461-spellcheckingtype
    spellCheckingType(): UITextSpellCheckingType;
    setSpellCheckingType(value: UITextSpellCheckingType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/2865931-smartquotestype
    smartQuotesType(): UITextSmartQuotesType;
    setSmartQuotesType(value: UITextSmartQuotesType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/2866013-smartdashestype
    smartDashesType(): UITextSmartDashesType;
    setSmartDashesType(value: UITextSmartDashesType): void;
    // https://developer.apple.com/documentation/uikit/uitextinputtraits/2865828-smartinsertdeletetype
    smartInsertDeleteType(): UITextSmartInsertDeleteType;
    setSmartInsertDeleteType(value: UITextSmartInsertDeleteType): void;
  }
}
declare namespace cocoascript {
  /**
   * The current text input mode.
   * https://developer.apple.com/documentation/uikit/uitextinputmode
   */
  interface UITextInputMode extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputmode/1614522-activeinputmodes
    activeInputModes(): UITextInputMode;
    setActiveInputModes(value: UITextInputMode): void;
    // https://developer.apple.com/documentation/uikit/uitextinputmode/1614538-currentinputmode
    currentInputMode():UITextInputMode;
    // https://developer.apple.com/documentation/uikit/uitextinputmode/1614535-primarylanguage
    primaryLanguage(): string | cocoascript.NSString;
    setPrimaryLanguage(value: string | cocoascript.NSString): void;
    //
    alloc():UITextInputMode;
    //
    init():UITextInputMode;
  }
}

declare const UITextInputMode: cocoascript.UITextInputMode;
declare namespace cocoascript {
  /**
   * An object that manages bar button items that display in the shortcuts bar above the keyboard on iPad.
   * https://developer.apple.com/documentation/uikit/uitextinputassistantitem
   */
  interface UITextInputAssistantItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputassistantitem/1614575-leadingbarbuttongroups
    leadingBarButtonGroups(): UIBarButtonItemGroup;
    setLeadingBarButtonGroups(value: UIBarButtonItemGroup): void;
    // https://developer.apple.com/documentation/uikit/uitextinputassistantitem/1614532-trailingbarbuttongroups
    trailingBarButtonGroups(): UIBarButtonItemGroup;
    setTrailingBarButtonGroups(value: UIBarButtonItemGroup): void;
    // https://developer.apple.com/documentation/uikit/uitextinputassistantitem/1614529-allowshidingshortcuts
    allowsHidingShortcuts(): boolean;
    setAllowsHidingShortcuts(value: boolean): void;
    //
    alloc():UITextInputAssistantItem;
    //
    init():UITextInputAssistantItem;
  }
}

declare const UITextInputAssistantItem: cocoascript.UITextInputAssistantItem;
declare namespace cocoascript {
  /**
   * An object that represents the textual interpretation of a spoken phrase that the user dictates.
   * https://developer.apple.com/documentation/uikit/uidictationphrase
   */
  interface UIDictationPhrase extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidictationphrase/1614510-alternativeinterpretations
    alternativeInterpretations(): string | cocoascript.NSString;
    setAlternativeInterpretations(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidictationphrase/1614456-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    //
    alloc():UIDictationPhrase;
    //
    init():UIDictationPhrase;
  }
}

declare const UIDictationPhrase: cocoascript.UIDictationPhrase;
declare namespace cocoascript {
  /**
   * A tokenizer, which is an object that allows the text input system to evaluate text units of different granularities.
   * https://developer.apple.com/documentation/uikit/uitextinputtokenizer
   */
  interface UITextInputTokenizer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputtokenizer/1614553-isposition
    isPosition_atBoundary_inDirection(position: UITextPosition, granularity: UITextGranularity, direction: UITextDirection):boolean;
    // https://developer.apple.com/documentation/uikit/uitextinputtokenizer/1614491-isposition
    isPosition_withinTextUnit_inDirection(position: UITextPosition, granularity: UITextGranularity, direction: UITextDirection):boolean;
    // https://developer.apple.com/documentation/uikit/uitextinputtokenizer/1614513-positionfromposition
    positionFromPosition_toBoundary_inDirection(position: UITextPosition, granularity: UITextGranularity, direction: UITextDirection):UITextPosition;
    // https://developer.apple.com/documentation/uikit/uitextinputtokenizer/1614464-rangeenclosingposition
    rangeEnclosingPosition_withGranularity_inDirection(position: UITextPosition, granularity: UITextGranularity, direction: UITextDirection):UITextRange;
  }
}
declare namespace cocoascript {
  /**
   * A base implementation of the text-input tokenizer protocol.
   * https://developer.apple.com/documentation/uikit/uitextinputstringtokenizer
   */
  interface UITextInputStringTokenizer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputstringtokenizer/1614469-initwithtextinput
    initWithTextInput(textInput: UITextInput):UITextInputStringTokenizer;
    //
    alloc():UITextInputStringTokenizer;
    //
    init():UITextInputStringTokenizer;
  }
}

declare const UITextInputStringTokenizer: cocoascript.UITextInputStringTokenizer;
declare namespace cocoascript {
  /**
   * An interaction that provides text selection gestures and UI to custom text views.
   * https://developer.apple.com/documentation/uikit/uitextinteraction
   */
  interface UITextInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinteraction/3255085-textinteractionformode
    textInteractionForMode(mode: UITextInteractionMode):UITextInteraction;
    // https://developer.apple.com/documentation/uikit/uitextinteraction/3255084-textinput
    textInput(): UITextInput;
    setTextInput(value: UITextInput): void;
    // https://developer.apple.com/documentation/uikit/uitextinteraction/3255082-delegate
    delegate(): UITextInteractionDelegate;
    setDelegate(value: UITextInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitextinteraction/3255083-gesturesforfailurerequirements
    gesturesForFailureRequirements(): UIGestureRecognizer;
    setGesturesForFailureRequirements(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uitextinteraction/3255086-textinteractionmode
    textInteractionMode(): UITextInteractionMode;
    setTextInteractionMode(value: UITextInteractionMode): void;
    //
    alloc():UITextInteraction;
    //
    init():UITextInteraction;
  }
}

declare const UITextInteraction: cocoascript.UITextInteraction;
declare namespace cocoascript {
  /**
   * An interface that an object implements to receive information about text interaction events.
   * https://developer.apple.com/documentation/uikit/uitextinteractiondelegate
   */
  interface UITextInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinteractiondelegate/3255089-interactionshouldbegin
    interactionShouldBegin_atPoint(interaction: UITextInteraction, point: CGPoint):boolean;
    // https://developer.apple.com/documentation/uikit/uitextinteractiondelegate/3255090-interactionwillbegin
    interactionWillBegin(interaction: UITextInteraction):void;
    // https://developer.apple.com/documentation/uikit/uitextinteractiondelegate/3255088-interactiondidend
    interactionDidEnd(interaction: UITextInteraction):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextinteractionmode
  type UITextInteractionMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A layout guide that represents the space the keyboard occupies in your app’s layout.
   * https://developer.apple.com/documentation/uikit/uikeyboardlayoutguide
   */
  interface UIKeyboardLayoutGuide extends UITrackingLayoutGuide {
    // https://developer.apple.com/documentation/uikit/uikeyboardlayoutguide/3752189-followsundockedkeyboard
    followsUndockedKeyboard(): boolean;
    setFollowsUndockedKeyboard(value: boolean): void;
    //
    alloc():UIKeyboardLayoutGuide;
    //
    init():UIKeyboardLayoutGuide;
  }
}

declare const UIKeyboardLayoutGuide: cocoascript.UIKeyboardLayoutGuide;
declare namespace cocoascript {
  /**
   * A layout guide that automatically activates and deactivates layout constraints depending on its proximity to edges.
   * https://developer.apple.com/documentation/uikit/uitrackinglayoutguide
   */
  interface UITrackingLayoutGuide extends UILayoutGuide {
    // https://developer.apple.com/documentation/uikit/uitrackinglayoutguide/3752220-setconstraints
    setConstraints_activeWhenNearEdge(trackingConstraints: NSLayoutConstraint, edge: NSDirectionalRectEdge):void;
    // https://developer.apple.com/documentation/uikit/uitrackinglayoutguide/3752219-setconstraints
    setConstraints_activeWhenAwayFromEdge(trackingConstraints: NSLayoutConstraint, edge: NSDirectionalRectEdge):void;
    // https://developer.apple.com/documentation/uikit/uitrackinglayoutguide/3752217-constraintsactivewhennearedge
    constraintsActiveWhenNearEdge(edge: NSDirectionalRectEdge):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/uitrackinglayoutguide/3752216-constraintsactivewhenawayfromedg
    constraintsActiveWhenAwayFromEdge(edge: NSDirectionalRectEdge):NSLayoutConstraint;
    // https://developer.apple.com/documentation/uikit/uitrackinglayoutguide/3752218-removealltrackedconstraints
    removeAllTrackedConstraints():void;
    //
    alloc():UITrackingLayoutGuide;
    //
    init():UITrackingLayoutGuide;
  }
}

declare const UITrackingLayoutGuide: cocoascript.UITrackingLayoutGuide;
declare namespace cocoascript {
  /**
   * An object that displays and manages custom input for a view when that view becomes the first responder.
   * https://developer.apple.com/documentation/uikit/uiinputview
   */
  interface UIInputView extends UIView {
    // https://developer.apple.com/documentation/uikit/uiinputview/1619477-initwithframe
    initWithFrame_inputViewStyle(frame: CGRect, inputViewStyle: UIInputViewStyle):UIInputView;
    // https://developer.apple.com/documentation/uikit/uiinputview/1619475-initwithcoder
    initWithCoder(coder: NSCoder):UIInputView;
    // https://developer.apple.com/documentation/uikit/uiinputview/1619471-inputviewstyle
    inputViewStyle(): UIInputViewStyle;
    setInputViewStyle(value: UIInputViewStyle): void;
    // https://developer.apple.com/documentation/uikit/uiinputview/1619473-allowsselfsizing
    allowsSelfSizing(): boolean;
    setAllowsSelfSizing(value: boolean): void;
    //
    alloc():UIInputView;
    //
    init():UIInputView;
  }
}

declare const UIInputView: cocoascript.UIInputView;
declare namespace cocoascript {
  /**
   * An object that provides information about the state of a keyboard key.
   * https://developer.apple.com/documentation/uikit/uikey
   */
  interface UIKey extends NSObject {
    // https://developer.apple.com/documentation/uikit/uikey/3526132-keycode
    keyCode(): UIKeyboardHIDUsage;
    setKeyCode(value: UIKeyboardHIDUsage): void;
    // https://developer.apple.com/documentation/uikit/uikey/3526133-modifierflags
    modifierFlags(): UIKeyModifierFlags;
    setModifierFlags(value: UIKeyModifierFlags): void;
    // https://developer.apple.com/documentation/uikit/uikey/3526130-characters
    characters(): string | cocoascript.NSString;
    setCharacters(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uikey/3526131-charactersignoringmodifiers
    charactersIgnoringModifiers(): string | cocoascript.NSString;
    setCharactersIgnoringModifiers(value: string | cocoascript.NSString): void;
    //
    alloc():UIKey;
    //
    init():UIKey;
  }
}

declare const UIKey: cocoascript.UIKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uikeyboardhidusage
  type UIKeyboardHIDUsage = cocoascript.CFIndex;
}
declare namespace cocoascript {
  /**
   * An interaction for customizing the behavior of Scribble on text input views, or for suppressing it entirely in specific cases.
   * https://developer.apple.com/documentation/uikit/uiscribbleinteraction
   */
  interface UIScribbleInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscribbleinteraction/3566749-initwithdelegate
    initWithDelegate(delegate: UIScribbleInteractionDelegate):UIScribbleInteraction;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteraction/3566747-delegate
    delegate(): UIScribbleInteractionDelegate;
    setDelegate(value: UIScribbleInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteraction/3566748-handlingwriting
    handlingWriting(): boolean;
    setHandlingWriting(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteraction/3566750-pencilinputexpected
    pencilInputExpected(): boolean;
    setPencilInputExpected(value: boolean): void;
    //
    alloc():UIScribbleInteraction;
    //
    init():UIScribbleInteraction;
  }
}

declare const UIScribbleInteraction: cocoascript.UIScribbleInteraction;
declare namespace cocoascript {
  /**
   * Methods for customizing or suppressing Scribble behavior within text input views.
   * https://developer.apple.com/documentation/uikit/uiscribbleinteractiondelegate
   */
  interface UIScribbleInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscribbleinteractiondelegate/3566752-scribbleinteraction
    scribbleInteraction_shouldBeginAtLocation(interaction: UIScribbleInteraction, location: CGPoint):boolean;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteractiondelegate/3566754-scribbleinteractionshoulddelayfo
    scribbleInteractionShouldDelayFocus(interaction: UIScribbleInteraction):boolean;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteractiondelegate/3566755-scribbleinteractionwillbeginwrit
    scribbleInteractionWillBeginWriting(interaction: UIScribbleInteraction):void;
    // https://developer.apple.com/documentation/uikit/uiscribbleinteractiondelegate/3566753-scribbleinteractiondidfinishwrit
    scribbleInteractionDidFinishWriting(interaction: UIScribbleInteraction):void;
  }
}
declare namespace cocoascript {
  /**
   * An interaction for using Scribble to enter text by writing on a view that isn’t formally a text input.
   * https://developer.apple.com/documentation/uikit/uiindirectscribbleinteraction
   */
  interface UIIndirectScribbleInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteraction/3566737-initwithdelegate
    initWithDelegate(delegate: UIIndirectScribbleInteractionDelegate):UIIndirectScribbleInteraction;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteraction/3566735-delegate
    delegate(): UIIndirectScribbleInteractionDelegate;
    setDelegate(value: UIIndirectScribbleInteractionDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteraction/3566736-handlingwriting
    handlingWriting(): boolean;
    setHandlingWriting(value: boolean): void;
    //
    alloc():UIIndirectScribbleInteraction;
    //
    init():UIIndirectScribbleInteraction;
  }
}

declare const UIIndirectScribbleInteraction: cocoascript.UIIndirectScribbleInteraction;
declare namespace cocoascript {
  /**
   * Methods that customize behavior on views that aren’t formally text input views.
   * https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate
   */
  interface UIIndirectScribbleInteractionDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566742-indirectscribbleinteraction
    indirectScribbleInteraction_isElementFocused(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier):boolean;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566740-indirectscribbleinteraction
    indirectScribbleInteraction_focusElementIfNeeded_referencePoint_completion(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier, focusReferencePoint: CGPoint, completion: UITextInput):void;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566744-indirectscribbleinteraction
    indirectScribbleInteraction_shouldDelayFocusForElement(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier):boolean;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566745-indirectscribbleinteraction
    indirectScribbleInteraction_willBeginWritingInElement(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566739-indirectscribbleinteraction
    indirectScribbleInteraction_didFinishWritingInElement(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier):void;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566741-indirectscribbleinteraction
    indirectScribbleInteraction_frameForElement(interaction: UIIndirectScribbleInteraction, elementIdentifier: UIScribbleElementIdentifier):CGRect;
    // https://developer.apple.com/documentation/uikit/uiindirectscribbleinteractiondelegate/3566743-indirectscribbleinteraction
    indirectScribbleInteraction_requestElementsInRect_completion(interaction: UIIndirectScribbleInteraction, rect: CGRect, completion: UIScribbleElementIdentifier):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscribbleelementidentifier
  type UIScribbleElementIdentifier = cocoascript.NSObject;
}
declare namespace cocoascript {
  /**
   * A preview action, or
   * https://developer.apple.com/documentation/uikit/uipreviewaction
   */
  interface UIPreviewAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewaction/1621445-actionwithtitle
    actionWithTitle_style_handler(title: string | cocoascript.NSString, style: UIPreviewActionStyle, handler: UIViewController):UIPreviewAction;
    // https://developer.apple.com/documentation/uikit/uipreviewaction/1621447-handler
    handler(): UIViewController;
    setHandler(value: UIViewController): void;
    //
    alloc():UIPreviewAction;
    //
    init():UIPreviewAction;
  }
}

declare const UIPreviewAction: cocoascript.UIPreviewAction;
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uiaccelerometer
   */
  interface UIAccelerometer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccelerometer/1620648-sharedaccelerometer
    sharedAccelerometer():UIAccelerometer;
    // https://developer.apple.com/documentation/uikit/uiaccelerometer/1620651-updateinterval
    updateInterval(): NSTimeInterval;
    setUpdateInterval(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiaccelerometer/1620646-delegate
    delegate(): UIAccelerometerDelegate;
    setDelegate(value: UIAccelerometerDelegate): void;
    //
    alloc():UIAccelerometer;
    //
    init():UIAccelerometer;
  }
}

declare const UIAccelerometer: cocoascript.UIAccelerometer;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiactionsheet
   */
  interface UIActionSheet extends UIView {
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622875-initwithtitle
    initWithTitle_delegate_cancelButtonTitle_destructiveButtonTitle_otherButtonTitles(title: string | cocoascript.NSString, delegate: UIActionSheetDelegate, cancelButtonTitle: string | cocoascript.NSString, destructiveButtonTitle: string | cocoascript.NSString, ...otherButtonTitles: Array<string | cocoascript.NSString>):UIActionSheet;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622878-delegate
    delegate(): UIActionSheetDelegate;
    setDelegate(value: UIActionSheetDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622882-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622885-visible
    visible(): boolean;
    setVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622881-actionsheetstyle
    actionSheetStyle(): UIActionSheetStyle;
    setActionSheetStyle(value: UIActionSheetStyle): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622864-addbuttonwithtitle
    addButtonWithTitle(title: string | cocoascript.NSString):NSInteger;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622891-numberofbuttons
    numberOfButtons(): NSInteger;
    setNumberOfButtons(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622871-buttontitleatindex
    buttonTitleAtIndex(buttonIndex: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622866-cancelbuttonindex
    cancelButtonIndex(): NSInteger;
    setCancelButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622863-destructivebuttonindex
    destructiveButtonIndex(): NSInteger;
    setDestructiveButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622870-firstotherbuttonindex
    firstOtherButtonIndex(): NSInteger;
    setFirstOtherButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622872-showfromtabbar
    showFromTabBar(view: UITabBar):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622874-showfromtoolbar
    showFromToolbar(view: UIToolbar):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622886-showinview
    showInView(view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622869-showfrombarbuttonitem
    showFromBarButtonItem_animated(item: UIBarButtonItem, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622892-showfromrect
    showFromRect_inView_animated(rect: CGRect, view: UIView, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheet/1622888-dismisswithclickedbuttonindex
    dismissWithClickedButtonIndex_animated(buttonIndex: NSInteger, animated: boolean):void;
    //
    alloc():UIActionSheet;
    //
    init():UIActionSheet;
  }
}

declare const UIActionSheet: cocoascript.UIActionSheet;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiactionsheetdelegate
   */
  interface UIActionSheetDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622876-actionsheet
    actionSheet_clickedButtonAtIndex(actionSheet: UIActionSheet, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622865-willpresentactionsheet
    willPresentActionSheet(actionSheet: UIActionSheet):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622877-didpresentactionsheet
    didPresentActionSheet(actionSheet: UIActionSheet):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622884-actionsheet
    actionSheet_willDismissWithButtonIndex(actionSheet: UIActionSheet, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622879-actionsheet
    actionSheet_didDismissWithButtonIndex(actionSheet: UIActionSheet, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uiactionsheetdelegate/1622867-actionsheetcancel
    actionSheetCancel(actionSheet: UIActionSheet):void;
  }
}
declare namespace cocoascript {
  /**
   * In apps that run in versions of iOS prior to iOS 8, use the
   * https://developer.apple.com/documentation/uikit/uialertview
   */
  interface UIAlertView extends UIView {
    // https://developer.apple.com/documentation/uikit/uialertview/1620779-initwithcoder
    initWithCoder(coder: NSCoder):UIAlertView;
    // https://developer.apple.com/documentation/uikit/uialertview/1620759-initwithframe
    initWithFrame(frame: CGRect):UIAlertView;
    // https://developer.apple.com/documentation/uikit/uialertview/1620765-initwithtitle
    initWithTitle_message_delegate_cancelButtonTitle_otherButtonTitles(title: string | cocoascript.NSString, message: string | cocoascript.NSString, delegate: UIAlertView, cancelButtonTitle: string | cocoascript.NSString, ...otherButtonTitles: Array<string | cocoascript.NSString>):UIAlertView;
    // https://developer.apple.com/documentation/uikit/uialertview/1620769-delegate
    delegate(): id;
    setDelegate(value: id): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620780-alertviewstyle
    alertViewStyle(): UIAlertViewStyle;
    setAlertViewStyle(value: UIAlertViewStyle): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620768-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620758-message
    message(): string | cocoascript.NSString;
    setMessage(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620764-visible
    visible(): boolean;
    setVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620761-addbuttonwithtitle
    addButtonWithTitle(title: string | cocoascript.NSString):NSInteger;
    // https://developer.apple.com/documentation/uikit/uialertview/1620753-numberofbuttons
    numberOfButtons(): NSInteger;
    setNumberOfButtons(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620756-buttontitleatindex
    buttonTitleAtIndex(buttonIndex: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uialertview/1620757-textfieldatindex
    textFieldAtIndex(textFieldIndex: NSInteger):UITextField;
    // https://developer.apple.com/documentation/uikit/uialertview/1620766-cancelbuttonindex
    cancelButtonIndex(): NSInteger;
    setCancelButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620771-firstotherbuttonindex
    firstOtherButtonIndex(): NSInteger;
    setFirstOtherButtonIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620751-show
    show():void;
    // https://developer.apple.com/documentation/uikit/uialertview/1620754-dismisswithclickedbuttonindex
    dismissWithClickedButtonIndex_animated(buttonIndex: NSInteger, animated: boolean):void;
    //
    alloc():UIAlertView;
    //
    init():UIAlertView;
  }
}

declare const UIAlertView: cocoascript.UIAlertView;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiusernotificationaction
   */
  interface UIUserNotificationAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615361-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615358-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615329-activationmode
    activationMode(): UIUserNotificationActivationMode;
    setActivationMode(value: UIUserNotificationActivationMode): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615381-authenticationrequired
    authenticationRequired(): boolean;
    setAuthenticationRequired(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615385-destructive
    destructive(): boolean;
    setDestructive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615399-behavior
    behavior(): UIUserNotificationActionBehavior;
    setBehavior(value: UIUserNotificationActionBehavior): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615337-parameters
    parameters(): NSDictionary;
    setParameters(value: NSDictionary): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615368-init
    init():UIUserNotificationAction;
    // https://developer.apple.com/documentation/uikit/uiusernotificationaction/1615366-initwithcoder
    initWithCoder(coder: NSCoder):UIUserNotificationAction;
    //
    alloc():UIUserNotificationAction;
    //
    init():UIUserNotificationAction;
  }
}

declare const UIUserNotificationAction: cocoascript.UIUserNotificationAction;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller
   */
  interface UISearchDisplayController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620411-initwithsearchbar
    initWithSearchBar_contentsController(searchBar: UISearchBar, viewController: UIViewController):UISearchDisplayController;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620406-active
    active(): boolean;
    setActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620397-setactive
    setActive_animated(visible: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620388-delegate
    delegate(): UISearchDisplayDelegate;
    setDelegate(value: UISearchDisplayDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620387-searchbar
    searchBar(): UISearchBar;
    setSearchBar(value: UISearchBar): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620393-searchcontentscontroller
    searchContentsController(): UIViewController;
    setSearchContentsController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620400-searchresultstableview
    searchResultsTableView(): UITableView;
    setSearchResultsTableView(value: UITableView): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620390-searchresultsdatasource
    searchResultsDataSource(): UITableViewDataSource;
    setSearchResultsDataSource(value: UITableViewDataSource): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620404-searchresultsdelegate
    searchResultsDelegate(): UITableViewDelegate;
    setSearchResultsDelegate(value: UITableViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620386-searchresultstitle
    searchResultsTitle(): string | cocoascript.NSString;
    setSearchResultsTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620394-displayssearchbarinnavigationbar
    displaysSearchBarInNavigationBar(): boolean;
    setDisplaysSearchBarInNavigationBar(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaycontroller/1620408-navigationitem
    navigationItem(): UINavigationItem;
    setNavigationItem(value: UINavigationItem): void;
    //
    alloc():UISearchDisplayController;
    //
    init():UISearchDisplayController;
  }
}

declare const UISearchDisplayController: cocoascript.UISearchDisplayController;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate
   */
  interface UISearchDisplayDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620399-searchdisplaycontrollerwillbegin
    searchDisplayControllerWillBeginSearch(controller: UISearchDisplayController):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620410-searchdisplaycontrollerdidbegins
    searchDisplayControllerDidBeginSearch(controller: UISearchDisplayController):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620389-searchdisplaycontrollerwillendse
    searchDisplayControllerWillEndSearch(controller: UISearchDisplayController):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620402-searchdisplaycontrollerdidendsea
    searchDisplayControllerDidEndSearch(controller: UISearchDisplayController):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620398-searchdisplaycontroller
    searchDisplayController_didLoadSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620401-searchdisplaycontroller
    searchDisplayController_willUnloadSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620391-searchdisplaycontroller
    searchDisplayController_willShowSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620396-searchdisplaycontroller
    searchDisplayController_didShowSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620407-searchdisplaycontroller
    searchDisplayController_willHideSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620395-searchdisplaycontroller
    searchDisplayController_didHideSearchResultsTableView(controller: UISearchDisplayController, tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620403-searchdisplaycontroller
    searchDisplayController_shouldReloadTableForSearchString(controller: UISearchDisplayController, searchString: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uisearchdisplaydelegate/1620409-searchdisplaycontroller
    searchDisplayController_shouldReloadTableForSearchScope(controller: UISearchDisplayController, searchOption: NSInteger):boolean;
  }
}
declare namespace cocoascript {
  /**
   * For apps that run in versions of iOS prior to iOS 8, the
   * https://developer.apple.com/documentation/uikit/uialertviewdelegate
   */
  interface UIAlertViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620752-alertview
    alertView_clickedButtonAtIndex(alertView: UIAlertView, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620774-alertviewshouldenablefirstotherb
    alertViewShouldEnableFirstOtherButton(alertView: UIAlertView):boolean;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620767-willpresentalertview
    willPresentAlertView(alertView: UIAlertView):void;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620750-didpresentalertview
    didPresentAlertView(alertView: UIAlertView):void;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620763-alertview
    alertView_willDismissWithButtonIndex(alertView: UIAlertView, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620772-alertview
    alertView_didDismissWithButtonIndex(alertView: UIAlertView, buttonIndex: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uialertviewdelegate/1620778-alertviewcancel
    alertViewCancel(alertView: UIAlertView):void;
  }
}
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uipopovercontroller
   */
  interface UIPopoverController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624669-initwithcontentviewcontroller
    initWithContentViewController(viewController: UIViewController):UIPopoverController;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624660-presentpopoverfromrect
    presentPopoverFromRect_inView_permittedArrowDirections_animated(rect: CGRect, view: UIView, arrowDirections: UIPopoverArrowDirection, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624668-presentpopoverfrombarbuttonitem
    presentPopoverFromBarButtonItem_permittedArrowDirections_animated(item: UIBarButtonItem, arrowDirections: UIPopoverArrowDirection, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624662-dismisspopoveranimated
    dismissPopoverAnimated(animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624672-contentviewcontroller
    contentViewController(): UIViewController;
    setContentViewController(value: UIViewController): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624655-setcontentviewcontroller
    setContentViewController_animated(viewController: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624667-popovercontentsize
    popoverContentSize(): CGSize;
    setPopoverContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624670-setpopovercontentsize
    setPopoverContentSize_animated(size: CGSize, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624654-passthroughviews
    passthroughViews(): UIView;
    setPassthroughViews(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624656-popovervisible
    popoverVisible(): boolean;
    setPopoverVisible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624665-popoverarrowdirection
    popoverArrowDirection(): UIPopoverArrowDirection;
    setPopoverArrowDirection(value: UIPopoverArrowDirection): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624666-delegate
    delegate(): UIPopoverControllerDelegate;
    setDelegate(value: UIPopoverControllerDelegate): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624657-popoverlayoutmargins
    popoverLayoutMargins(): UIEdgeInsets;
    setPopoverLayoutMargins(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624659-popoverbackgroundviewclass
    popoverBackgroundViewClass(): Class;
    setPopoverBackgroundViewClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uipopovercontroller/1624673-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    //
    alloc():UIPopoverController;
    //
    init():UIPopoverController;
  }
}

declare const UIPopoverController: cocoascript.UIPopoverController;
declare namespace cocoascript {
  /**
   * A set of delegate methods for search controller objects.
   * https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate
   */
  interface UISearchControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate/1618651-diddismisssearchcontroller
    didDismissSearchController(searchController: UISearchController):void;
    // https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate/1618646-didpresentsearchcontroller
    didPresentSearchController(searchController: UISearchController):void;
    // https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate/1618648-presentsearchcontroller
    presentSearchController(searchController: UISearchController):void;
    // https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate/1618655-willdismisssearchcontroller
    willDismissSearchController(searchController: UISearchController):void;
    // https://developer.apple.com/documentation/uikit/uisearchcontrollerdelegate/1618652-willpresentsearchcontroller
    willPresentSearchController(searchController: UISearchController):void;
  }
}
declare namespace cocoascript {
  /**
   * A group of one or more child quick actions, each an instance of the
   * https://developer.apple.com/documentation/uikit/uipreviewactiongroup
   */
  interface UIPreviewActionGroup extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipreviewactiongroup/1621514-actiongroupwithtitle
    actionGroupWithTitle_style_actions(title: string | cocoascript.NSString, style: UIPreviewActionStyle, actions: UIPreviewAction):UIPreviewActionGroup;
    //
    alloc():UIPreviewActionGroup;
    //
    init():UIPreviewActionGroup;
  }
}

declare const UIPreviewActionGroup: cocoascript.UIPreviewActionGroup;
declare namespace cocoascript {
  /**
   * An instance of the
   * https://developer.apple.com/documentation/uikit/uiacceleration
   */
  interface UIAcceleration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiacceleration/1620652-x
    x(): UIAccelerationValue;
    setX(value: UIAccelerationValue): void;
    // https://developer.apple.com/documentation/uikit/uiacceleration/1620644-y
    y(): UIAccelerationValue;
    setY(value: UIAccelerationValue): void;
    // https://developer.apple.com/documentation/uikit/uiacceleration/1620643-z
    z(): UIAccelerationValue;
    setZ(value: UIAccelerationValue): void;
    // https://developer.apple.com/documentation/uikit/uiacceleration/1620650-timestamp
    timestamp(): NSTimeInterval;
    setTimestamp(value: NSTimeInterval): void;
    //
    alloc():UIAcceleration;
    //
    init():UIAcceleration;
  }
}

declare const UIAcceleration: cocoascript.UIAcceleration;
declare namespace cocoascript {
  /**
   * A list of all the available document providers for a given file type and mode, in addition to custom menu items that you add.
   * https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller
   */
  interface UIDocumentMenuViewController extends UIViewController {
    // https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller/1614187-initwithdocumenttypes
    initWithDocumentTypes_inMode(allowedUTIs: string | cocoascript.NSString, mode: UIDocumentPickerMode):UIDocumentMenuViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller/1614191-initwithurl
    initWithURL_inMode(url: NSURL, mode: UIDocumentPickerMode):UIDocumentMenuViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller/1614182-initwithcoder
    initWithCoder(coder: NSCoder):UIDocumentMenuViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller/1614192-delegate
    delegate(): UIDocumentMenuDelegate;
    setDelegate(value: UIDocumentMenuDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidocumentmenuviewcontroller/1614193-addoptionwithtitle
    addOptionWithTitle_image_order_handler(title: string | cocoascript.NSString, image: UIImage, order: UIDocumentMenuOrder, handler: void):void;
    //
    alloc():UIDocumentMenuViewController;
    //
    init():UIDocumentMenuViewController;
  }
}

declare const UIDocumentMenuViewController: cocoascript.UIDocumentMenuViewController;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uilocalnotification
   */
  interface UILocalNotification extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616650-firedate
    fireDate(): NSDate;
    setFireDate(value: NSDate): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616659-timezone
    timeZone(): NSTimeZone;
    setTimeZone(value: NSTimeZone): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616643-repeatinterval
    repeatInterval(): NSCalendarUnit;
    setRepeatInterval(value: NSCalendarUnit): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616656-repeatcalendar
    repeatCalendar(): NSCalendar;
    setRepeatCalendar(value: NSCalendar): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616644-region
    region(): CLRegion;
    setRegion(value: CLRegion): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616654-regiontriggersonce
    regionTriggersOnce(): boolean;
    setRegionTriggersOnce(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616646-alertbody
    alertBody(): string | cocoascript.NSString;
    setAlertBody(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616648-alertaction
    alertAction(): string | cocoascript.NSString;
    setAlertAction(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616647-alerttitle
    alertTitle(): string | cocoascript.NSString;
    setAlertTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616649-hasaction
    hasAction(): boolean;
    setHasAction(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616660-alertlaunchimage
    alertLaunchImage(): string | cocoascript.NSString;
    setAlertLaunchImage(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616655-category
    category(): string | cocoascript.NSString;
    setCategory(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616658-applicationiconbadgenumber
    applicationIconBadgeNumber(): NSInteger;
    setApplicationIconBadgeNumber(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616651-soundname
    soundName(): string | cocoascript.NSString;
    setSoundName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616657-userinfo
    userInfo(): NSDictionary;
    setUserInfo(value: NSDictionary): void;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616645-init
    init():UILocalNotification;
    // https://developer.apple.com/documentation/uikit/uilocalnotification/1616653-initwithcoder
    initWithCoder(coder: NSCoder):UILocalNotification;
    //
    alloc():UILocalNotification;
    //
    init():UILocalNotification;
  }
}

declare const UILocalNotification: cocoascript.UILocalNotification;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uimutableusernotificationaction
   */
  interface UIMutableUserNotificationAction extends UIUserNotificationAction {
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615379-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615370-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615372-activationmode
    activationMode(): UIUserNotificationActivationMode;
    setActivationMode(value: UIUserNotificationActivationMode): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615389-authenticationrequired
    authenticationRequired(): boolean;
    setAuthenticationRequired(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615322-destructive
    destructive(): boolean;
    setDestructive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615395-behavior
    behavior(): UIUserNotificationActionBehavior;
    setBehavior(value: UIUserNotificationActionBehavior): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationaction/1615354-parameters
    parameters(): NSDictionary;
    setParameters(value: NSDictionary): void;
    //
    alloc():UIMutableUserNotificationAction;
    //
    init():UIMutableUserNotificationAction;
  }
}

declare const UIMutableUserNotificationAction: cocoascript.UIMutableUserNotificationAction;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uimutableusernotificationcategory
   */
  interface UIMutableUserNotificationCategory extends UIUserNotificationCategory {
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationcategory/1615376-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uimutableusernotificationcategory/1615397-setactions
    setActions_forContext(actions: UIUserNotificationAction, context: UIUserNotificationActionContext):void;
    //
    alloc():UIMutableUserNotificationCategory;
    //
    init():UIMutableUserNotificationCategory;
  }
}

declare const UIMutableUserNotificationCategory: cocoascript.UIMutableUserNotificationCategory;
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uistoryboardpopoversegue
   */
  interface UIStoryboardPopoverSegue extends UIStoryboardSegue {
    // https://developer.apple.com/documentation/uikit/uistoryboardpopoversegue/1624759-popovercontroller
    popoverController(): UIPopoverController;
    setPopoverController(value: UIPopoverController): void;
    //
    alloc():UIStoryboardPopoverSegue;
    //
    init():UIStoryboardPopoverSegue;
  }
}

declare const UIStoryboardPopoverSegue: cocoascript.UIStoryboardPopoverSegue;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiusernotificationcategory
   */
  interface UIUserNotificationCategory extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiusernotificationcategory/1615383-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationcategory/1615374-actionsforcontext
    actionsForContext(context: UIUserNotificationActionContext):UIUserNotificationAction;
    // https://developer.apple.com/documentation/uikit/uiusernotificationcategory/1615327-init
    init():UIUserNotificationCategory;
    // https://developer.apple.com/documentation/uikit/uiusernotificationcategory/1615391-initwithcoder
    initWithCoder(coder: NSCoder):UIUserNotificationCategory;
    //
    alloc():UIUserNotificationCategory;
    //
    init():UIUserNotificationCategory;
  }
}

declare const UIUserNotificationCategory: cocoascript.UIUserNotificationCategory;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiusernotificationsettings
   */
  interface UIUserNotificationSettings extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiusernotificationsettings/1615401-settingsfortypes
    settingsForTypes_categories(types: UIUserNotificationType, categories: UIUserNotificationCategory):UIUserNotificationSettings;
    // https://developer.apple.com/documentation/uikit/uiusernotificationsettings/1615321-types
    types(): UIUserNotificationType;
    setTypes(value: UIUserNotificationType): void;
    // https://developer.apple.com/documentation/uikit/uiusernotificationsettings/1615365-categories
    categories(): UIUserNotificationCategory;
    setCategories(value: UIUserNotificationCategory): void;
    //
    alloc():UIUserNotificationSettings;
    //
    init():UIUserNotificationSettings;
  }
}

declare const UIUserNotificationSettings: cocoascript.UIUserNotificationSettings;
declare namespace cocoascript {
  /**
   * A set of methods that define the interface for configuring a previewing view controller on devices that support 3D Touch.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewing
   */
  interface UIViewControllerPreviewing extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewing/1621431-sourcerect
    sourceRect(): CGRect;
    setSourceRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewing/1621467-previewinggesturerecognizerforfa
    previewingGestureRecognizerForFailureRelationship(): UIGestureRecognizer;
    setPreviewingGestureRecognizerForFailureRelationship(value: UIGestureRecognizer): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewing/1621422-delegate
    delegate(): UIViewControllerPreviewingDelegate;
    setDelegate(value: UIViewControllerPreviewingDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewing/1621436-sourceview
    sourceView(): UIView;
    setSourceView(value: UIView): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods used by the delegate to respond, with a preview view controller and a commit view controller, to the user pressing a view object on the screen of a device that supports 3D Touch.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewingdelegate
   */
  interface UIViewControllerPreviewingDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewingdelegate/1621464-previewingcontext
    previewingContext_viewControllerForLocation(previewingContext: UIViewControllerPreviewing, location: CGPoint):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerpreviewingdelegate/1621366-previewingcontext
    previewingContext_commitViewController(previewingContext: UIViewControllerPreviewing, viewControllerToCommit: UIViewController):void;
  }
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uiaccelerometerdelegate
   */
  interface UIAccelerometerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiaccelerometerdelegate/1620653-accelerometer
    accelerometer_didAccelerate(accelerometer: UIAccelerometer, acceleration: UIAcceleration):void;
  }
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uipopovercontrollerdelegate
   */
  interface UIPopoverControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipopovercontrollerdelegate/1624664-popovercontroller
    popoverController_willRepositionPopoverToRect_inView(popoverController: UIPopoverController, rect: CGRect, view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uipopovercontrollerdelegate/1624661-popovercontrollershoulddismisspo
    popoverControllerShouldDismissPopover(popoverController: UIPopoverController):boolean;
    // https://developer.apple.com/documentation/uikit/uipopovercontrollerdelegate/1624671-popovercontrollerdiddismisspopov
    popoverControllerDidDismissPopover(popoverController: UIPopoverController):void;
  }
}
declare namespace cocoascript {
  /**
   * An interface for providing the timing information needed to perform animations.
   * https://developer.apple.com/documentation/uikit/uitimingcurveprovider
   */
  interface UITimingCurveProvider extends NSCoding {
    // https://developer.apple.com/documentation/uikit/uitimingcurveprovider/1648030-timingcurvetype
    timingCurveType(): UITimingCurveType;
    setTimingCurveType(value: UITimingCurveType): void;
    // https://developer.apple.com/documentation/uikit/uitimingcurveprovider/1648036-cubictimingparameters
    cubicTimingParameters(): UICubicTimingParameters;
    setCubicTimingParameters(value: UICubicTimingParameters): void;
    // https://developer.apple.com/documentation/uikit/uitimingcurveprovider/1648031-springtimingparameters
    springTimingParameters(): UISpringTimingParameters;
    setSpringTimingParameters(value: UISpringTimingParameters): void;
  }
}
declare namespace cocoascript {
  /**
   * A view that presents data using rows in a single column.
   * https://developer.apple.com/documentation/uikit/uitableview
   */
  interface UITableView extends UIScrollView {
    // https://developer.apple.com/documentation/uikit/uitableview/1614886-initwithframe
    initWithFrame_style(frame: CGRect, style: UITableViewStyle):UITableView;
    // https://developer.apple.com/documentation/uikit/uitableview/1614859-initwithcoder
    initWithCoder(coder: NSCoder):UITableView;
    // https://developer.apple.com/documentation/uikit/uitableview/1614955-datasource
    dataSource(): UITableViewDataSource;
    setDataSource(value: UITableViewDataSource): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1771763-prefetchdatasource
    prefetchDataSource(): UITableViewDataSourcePrefetching;
    setPrefetchDataSource(value: UITableViewDataSourcePrefetching): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614937-registernib
    registerNib_forCellReuseIdentifier(nib: UINib, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614888-registerclass
    registerClass_forCellReuseIdentifier(cellClass: Class, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614878-dequeuereusablecellwithidentifie
    dequeueReusableCellWithIdentifier_forIndexPath(identifier: string | cocoascript.NSString, indexPath: NSIndexPath):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableview/1614891-dequeuereusablecellwithidentifie
    dequeueReusableCellWithIdentifier(identifier: string | cocoascript.NSString):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableview/1614921-registernib
    registerNib_forHeaderFooterViewReuseIdentifier(nib: UINib, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614964-registerclass
    registerClass_forHeaderFooterViewReuseIdentifier(aClass: Class, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614975-dequeuereusableheaderfootervieww
    dequeueReusableHeaderFooterViewWithIdentifier(identifier: string | cocoascript.NSString):UITableViewHeaderFooterView;
    // https://developer.apple.com/documentation/uikit/uitableview/1614894-delegate
    delegate(): UITableViewDelegate;
    setDelegate(value: UITableViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614913-style
    style(): UITableViewStyle;
    setStyle(value: UITableViewStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614904-tableheaderview
    tableHeaderView(): UIView;
    setTableHeaderView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614976-tablefooterview
    tableFooterView(): UIView;
    setTableFooterView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614986-backgroundview
    backgroundView(): UIView;
    setBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614852-rowheight
    rowHeight(): CGFloat;
    setRowHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614925-estimatedrowheight
    estimatedRowHeight(): CGFloat;
    setEstimatedRowHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614849-celllayoutmarginsfollowreadablew
    cellLayoutMarginsFollowReadableWidth(): boolean;
    setCellLayoutMarginsFollowReadableWidth(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2921665-insetscontentviewstosafearea
    insetsContentViewsToSafeArea(): boolean;
    setInsetsContentViewsToSafeArea(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614863-sectionheaderheight
    sectionHeaderHeight(): CGFloat;
    setSectionHeaderHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614846-sectionfooterheight
    sectionFooterHeight(): CGFloat;
    setSectionFooterHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614957-estimatedsectionheaderheight
    estimatedSectionHeaderHeight(): CGFloat;
    setEstimatedSectionHeaderHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614979-estimatedsectionfooterheight
    estimatedSectionFooterHeight(): CGFloat;
    setEstimatedSectionFooterHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3750914-sectionheadertoppadding
    sectionHeaderTopPadding(): CGFloat;
    setSectionHeaderTopPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614909-separatorstyle
    separatorStyle(): UITableViewCellSeparatorStyle;
    setSeparatorStyle(value: UITableViewCellSeparatorStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614984-separatorcolor
    separatorColor(): UIColor;
    setSeparatorColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614865-separatoreffect
    separatorEffect(): UIVisualEffect;
    setSeparatorEffect(value: UIVisualEffect): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614851-separatorinset
    separatorInset(): UIEdgeInsets;
    setSeparatorInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2887517-separatorinsetreference
    separatorInsetReference(): UITableViewSeparatorInsetReference;
    setSeparatorInsetReference(value: UITableViewSeparatorInsetReference): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614952-numberofrowsinsection
    numberOfRowsInSection(section: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitableview/1614924-numberofsections
    numberOfSections(): NSInteger;
    setNumberOfSections(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614983-cellforrowatindexpath
    cellForRowAtIndexPath(indexPath: NSIndexPath):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableview/1614965-headerviewforsection
    headerViewForSection(section: NSInteger):UITableViewHeaderFooterView;
    // https://developer.apple.com/documentation/uikit/uitableview/1614972-footerviewforsection
    footerViewForSection(section: NSInteger):UITableViewHeaderFooterView;
    // https://developer.apple.com/documentation/uikit/uitableview/1614881-indexpathforcell
    indexPathForCell(cell: UITableViewCell):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableview/1614874-indexpathforrowatpoint
    indexPathForRowAtPoint(point: CGPoint):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableview/1614991-indexpathsforrowsinrect
    indexPathsForRowsInRect(rect: CGRect):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableview/1614896-visiblecells
    visibleCells(): UITableViewCell;
    setVisibleCells(value: UITableViewCell): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614885-indexpathsforvisiblerows
    indexPathsForVisibleRows(): NSIndexPath;
    setIndexPathsForVisibleRows(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1615000-indexpathforselectedrow
    indexPathForSelectedRow(): NSIndexPath;
    setIndexPathForSelectedRow(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614864-indexpathsforselectedrows
    indexPathsForSelectedRows(): NSIndexPath;
    setIndexPathsForSelectedRows(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614875-selectrowatindexpath
    selectRowAtIndexPath_animated_scrollPosition(indexPath: NSIndexPath, animated: boolean, scrollPosition: UITableViewScrollPosition):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614989-deselectrowatindexpath
    deselectRowAtIndexPath_animated(indexPath: NSIndexPath, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614911-allowsselection
    allowsSelection(): boolean;
    setAllowsSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614938-allowsmultipleselection
    allowsMultipleSelection(): boolean;
    setAllowsMultipleSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614889-allowsselectionduringediting
    allowsSelectionDuringEditing(): boolean;
    setAllowsSelectionDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614944-allowsmultipleselectionduringedi
    allowsMultipleSelectionDuringEditing(): boolean;
    setAllowsMultipleSelectionDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3573921-selectionfollowsfocus
    selectionFollowsFocus(): boolean;
    setSelectionFollowsFocus(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614879-insertrowsatindexpaths
    insertRowsAtIndexPaths_withRowAnimation(indexPaths: NSIndexPath, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614960-deleterowsatindexpaths
    deleteRowsAtIndexPaths_withRowAnimation(indexPaths: NSIndexPath, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614892-insertsections
    insertSections_withRowAnimation(sections: NSIndexSet, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614922-deletesections
    deleteSections_withRowAnimation(sections: NSIndexSet, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614987-moverowatindexpath
    moveRowAtIndexPath_toIndexPath(indexPath: NSIndexPath, newIndexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614940-movesection
    moveSection_toSection(section: NSInteger, newSection: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableview/2887515-performbatchupdates
    performBatchUpdates_completion(updates: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614908-beginupdates
    beginUpdates():void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614890-endupdates
    endUpdates():void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614903-sectionindexminimumdisplayrowcou
    sectionIndexMinimumDisplayRowCount(): NSInteger;
    setSectionIndexMinimumDisplayRowCount(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614915-sectionindexcolor
    sectionIndexColor(): UIColor;
    setSectionIndexColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614918-sectionindexbackgroundcolor
    sectionIndexBackgroundColor(): UIColor;
    setSectionIndexBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614992-sectionindextrackingbackgroundco
    sectionIndexTrackingBackgroundColor(): UIColor;
    setSectionIndexTrackingBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2891097-hasuncommittedupdates
    hasUncommittedUpdates(): boolean;
    setHasUncommittedUpdates(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3801923-reconfigurerowsatindexpaths
    reconfigureRowsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614862-reloaddata
    reloadData():void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614935-reloadrowsatindexpaths
    reloadRowsAtIndexPaths_withRowAnimation(indexPaths: NSIndexPath, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614954-reloadsections
    reloadSections_withRowAnimation(sections: NSIndexSet, animation: UITableViewRowAnimation):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614932-reloadsectionindextitles
    reloadSectionIndexTitles():void;
    // https://developer.apple.com/documentation/uikit/uitableview/2897362-dragdelegate
    dragDelegate(): UITableViewDragDelegate;
    setDragDelegate(value: UITableViewDragDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2897381-hasactivedrag
    hasActiveDrag(): boolean;
    setHasActiveDrag(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2909064-draginteractionenabled
    dragInteractionEnabled(): boolean;
    setDragInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2897372-dropdelegate
    dropDelegate(): UITableViewDropDelegate;
    setDropDelegate(value: UITableViewDropDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitableview/2897323-hasactivedrop
    hasActiveDrop(): boolean;
    setHasActiveDrop(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614997-scrolltorowatindexpath
    scrollToRowAtIndexPath_atScrollPosition_animated(indexPath: NSIndexPath, scrollPosition: UITableViewScrollPosition, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614910-scrolltonearestselectedrowatscro
    scrollToNearestSelectedRowAtScrollPosition_animated(scrollPosition: UITableViewScrollPosition, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614876-setediting
    setEditing_animated(editing: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableview/1615001-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/1614951-rectforsection
    rectForSection(section: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uitableview/1614974-rectforrowatindexpath
    rectForRowAtIndexPath(indexPath: NSIndexPath):CGRect;
    // https://developer.apple.com/documentation/uikit/uitableview/1614999-rectforfooterinsection
    rectForFooterInSection(section: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uitableview/1614872-rectforheaderinsection
    rectForHeaderInSection(section: NSInteger):CGRect;
    // https://developer.apple.com/documentation/uikit/uitableview/1614858-rememberslastfocusedindexpath
    remembersLastFocusedIndexPath(): boolean;
    setRemembersLastFocusedIndexPath(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3795594-allowsfocus
    allowsFocus(): boolean;
    setAllowsFocus(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3795595-allowsfocusduringediting
    allowsFocusDuringEditing(): boolean;
    setAllowsFocusDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3867097-contextmenuinteraction
    contextMenuInteraction(): UIContextMenuInteraction;
    setContextMenuInteraction(value: UIContextMenuInteraction): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3801921-fillerrowheight
    fillerRowHeight(): CGFloat;
    setFillerRowHeight(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableview/3801922-prefetchingenabled
    prefetchingEnabled(): boolean;
    setPrefetchingEnabled(value: boolean): void;
    //
    alloc():UITableView;
    //
    init():UITableView;
  }
}

declare const UITableView: cocoascript.UITableView;
// https://developer.apple.com/documentation/uikit/uitableviewindexsearch
declare const UITableViewIndexSearch: cocoascript.NSString;
declare namespace cocoascript {
  /**
   * An abstract base class for generating layout information for a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewlayout
   */
  interface UICollectionViewLayout extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617734-init
    init():UICollectionViewLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617766-initwithcoder
    initWithCoder(coder: NSCoder):UICollectionViewLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617751-collectionview
    collectionView(): UICollectionView;
    setCollectionView(value: UICollectionView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617796-collectionviewcontentsize
    collectionViewContentSize(): CGSize;
    setCollectionViewContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617774-layoutattributesclass
    layoutAttributesClass(): Class;
    setLayoutAttributesClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617752-preparelayout
    prepareLayout():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617769-layoutattributesforelementsinrec
    layoutAttributesForElementsInRect(rect: CGRect):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617797-layoutattributesforitematindexpa
    layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617788-layoutattributesforinteractively
    layoutAttributesForInteractivelyMovingItemAtIndexPath_withTargetPosition(indexPath: NSIndexPath, position: CGPoint):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617792-layoutattributesforsupplementary
    layoutAttributesForSupplementaryViewOfKind_atIndexPath(elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617809-layoutattributesfordecorationvie
    layoutAttributesForDecorationViewOfKind_atIndexPath(elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617724-targetcontentoffsetforproposedco
    targetContentOffsetForProposedContentOffset(proposedContentOffset: CGPoint):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617729-targetcontentoffsetforproposedco
    targetContentOffsetForProposedContentOffset_withScrollingVelocity(proposedContentOffset: CGPoint, velocity: CGPoint):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617784-prepareforcollectionviewupdates
    prepareForCollectionViewUpdates(updateItems: UICollectionViewUpdateItem):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617787-finalizecollectionviewupdates
    finalizeCollectionViewUpdates():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617770-indexpathstoinsertforsupplementa
    indexPathsToInsertForSupplementaryViewOfKind(elementKind: string | cocoascript.NSString):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617750-indexpathstoinsertfordecorationv
    indexPathsToInsertForDecorationViewOfKind(elementKind: string | cocoascript.NSString):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617789-initiallayoutattributesforappear
    initialLayoutAttributesForAppearingItemAtIndexPath(itemIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617737-initiallayoutattributesforappear
    initialLayoutAttributesForAppearingSupplementaryElementOfKind_atIndexPath(elementKind: string | cocoascript.NSString, elementIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617726-initiallayoutattributesforappear
    initialLayoutAttributesForAppearingDecorationElementOfKind_atIndexPath(elementKind: string | cocoascript.NSString, decorationIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617807-indexpathstodeleteforsupplementa
    indexPathsToDeleteForSupplementaryViewOfKind(elementKind: string | cocoascript.NSString):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617730-indexpathstodeletefordecorationv
    indexPathsToDeleteForDecorationViewOfKind(elementKind: string | cocoascript.NSString):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617740-finallayoutattributesfordisappea
    finalLayoutAttributesForDisappearingItemAtIndexPath(itemIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617742-finallayoutattributesfordisappea
    finalLayoutAttributesForDisappearingSupplementaryElementOfKind_atIndexPath(elementKind: string | cocoascript.NSString, elementIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617762-finallayoutattributesfordisappea
    finalLayoutAttributesForDisappearingDecorationElementOfKind_atIndexPath(elementKind: string | cocoascript.NSString, decorationIndexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617778-targetindexpathforinteractivelym
    targetIndexPathForInteractivelyMovingItem_withPosition(previousIndexPath: NSIndexPath, position: CGPoint):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617728-invalidatelayout
    invalidateLayout():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617771-invalidatelayoutwithcontext
    invalidateLayoutWithContext(context: UICollectionViewLayoutInvalidationContext):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617790-invalidationcontextclass
    invalidationContextClass(): Class;
    setInvalidationContextClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617781-shouldinvalidatelayoutforboundsc
    shouldInvalidateLayoutForBoundsChange(newBounds: CGRect):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617754-invalidationcontextforboundschan
    invalidationContextForBoundsChange(newBounds: CGRect):UICollectionViewLayoutInvalidationContext;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617746-shouldinvalidatelayoutforpreferr
    shouldInvalidateLayoutForPreferredLayoutAttributes_withOriginalAttributes(preferredAttributes: UICollectionViewLayoutAttributes, originalAttributes: UICollectionViewLayoutAttributes):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617767-invalidationcontextforpreferredl
    invalidationContextForPreferredLayoutAttributes_withOriginalAttributes(preferredAttributes: UICollectionViewLayoutAttributes, originalAttributes: UICollectionViewLayoutAttributes):UICollectionViewLayoutInvalidationContext;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617757-invalidationcontextforinteractiv
    invalidationContextForInteractivelyMovingItems_withTargetPosition_previousIndexPaths_previousPosition(targetIndexPaths: NSIndexPath, targetPosition: CGPoint, previousIndexPaths: NSIndexPath, previousPosition: CGPoint):UICollectionViewLayoutInvalidationContext;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617755-invalidationcontextforendinginte
    invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths_previousIndexPaths_movementCancelled(indexPaths: NSIndexPath, previousIndexPaths: NSIndexPath, movementCancelled: boolean):UICollectionViewLayoutInvalidationContext;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617761-prepareforanimatedboundschange
    prepareForAnimatedBoundsChange(oldBounds: CGRect):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617745-finalizeanimatedboundschange
    finalizeAnimatedBoundsChange():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617802-preparefortransitionfromlayout
    prepareForTransitionFromLayout(oldLayout: UICollectionViewLayout):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617791-preparefortransitiontolayout
    prepareForTransitionToLayout(newLayout: UICollectionViewLayout):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617794-finalizelayouttransition
    finalizeLayoutTransition():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617739-registerclass
    registerClass_forDecorationViewOfKind(viewClass: Class, elementKind: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617732-registernib
    registerNib_forDecorationViewOfKind(nib: UINib, elementKind: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/2891100-developmentlayoutdirection
    developmentLayoutDirection(): UIUserInterfaceLayoutDirection;
    setDevelopmentLayoutDirection(value: UIUserInterfaceLayoutDirection): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayout/2891099-flipshorizontallyinoppositelayou
    flipsHorizontallyInOppositeLayoutDirection(): boolean;
    setFlipsHorizontallyInOppositeLayoutDirection(value: boolean): void;
    //
    alloc():UICollectionViewLayout;
    //
    init():UICollectionViewLayout;
  }
}

declare const UICollectionViewLayout: cocoascript.UICollectionViewLayout;
declare namespace cocoascript {
  /**
   * A shape for use in UIKit Dynamics.
   * https://developer.apple.com/documentation/uikit/uiregion
   */
  interface UIRegion extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiregion/1621896-infiniteregion
    infiniteRegion(): UIRegion;
    setInfiniteRegion(value: UIRegion): void;
    // https://developer.apple.com/documentation/uikit/uiregion/1621891-initwithsize
    initWithSize(size: CGSize):UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621889-initwithradius
    initWithRadius(radius: CGFloat):UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621894-inverseregion
    inverseRegion():UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621892-regionbydifferencefromregion
    regionByDifferenceFromRegion(region: UIRegion):UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621895-regionbyintersectionwithregion
    regionByIntersectionWithRegion(region: UIRegion):UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621890-regionbyunionwithregion
    regionByUnionWithRegion(region: UIRegion):UIRegion;
    // https://developer.apple.com/documentation/uikit/uiregion/1621893-containspoint
    containsPoint(point: CGPoint):boolean;
    //
    alloc():UIRegion;
    //
    init():UIRegion;
  }
}

declare const UIRegion: cocoascript.UIRegion;
declare namespace cocoascript {
  /**
   * An abstract superclass for defining motion-based modifiers for views.
   * https://developer.apple.com/documentation/uikit/uimotioneffect
   */
  interface UIMotionEffect extends NSObject {
    // https://developer.apple.com/documentation/uikit/uimotioneffect/1622375-init
    init():UIMotionEffect;
    // https://developer.apple.com/documentation/uikit/uimotioneffect/1622371-initwithcoder
    initWithCoder(coder: NSCoder):UIMotionEffect;
    // https://developer.apple.com/documentation/uikit/uimotioneffect/1622380-keypathsandrelativevaluesforview
    keyPathsAndRelativeValuesForViewerOffset(viewerOffset: UIOffset):UIMotionEffect;
    //
    alloc():UIMotionEffect;
    //
    init():UIMotionEffect;
  }
}

declare const UIMotionEffect: cocoascript.UIMotionEffect;
declare namespace cocoascript {
  /**
   * The visual representation of a single row in a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewcell
   */
  interface UITableViewCell extends UIView {
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623276-initwithstyle
    initWithStyle_reuseIdentifier(style: UITableViewCellStyle, reuseIdentifier: string | cocoascript.NSString):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623220-initwithcoder
    initWithCoder(coder: NSCoder):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623246-reuseidentifier
    reuseIdentifier(): string | cocoascript.NSString;
    setReuseIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623223-prepareforreuse
    prepareForReuse():void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600586-backgroundconfiguration
    backgroundConfiguration(): UIBackgroundConfiguration;
    setBackgroundConfiguration(value: UIBackgroundConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600584-automaticallyupdatesbackgroundco
    automaticallyUpdatesBackgroundConfiguration(): boolean;
    setAutomaticallyUpdatesBackgroundConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623260-backgroundview
    backgroundView(): UIView;
    setBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623226-selectedbackgroundview
    selectedBackgroundView(): UIView;
    setSelectedBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623275-multipleselectionbackgroundview
    multipleSelectionBackgroundView(): UIView;
    setMultipleSelectionBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600589-defaultcontentconfiguration
    defaultContentConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600588-contentconfiguration
    contentConfiguration(): UIContentConfiguration;
    setContentConfiguration(value: UIContentConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600585-automaticallyupdatescontentconfi
    automaticallyUpdatesContentConfiguration(): boolean;
    setAutomaticallyUpdatesContentConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623229-contentview
    contentView(): UIView;
    setContentView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623210-textlabel
    textLabel(): UILabel;
    setTextLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623273-detailtextlabel
    detailTextLabel(): UILabel;
    setDetailTextLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623270-imageview
    imageView(): UIImageView;
    setImageView(value: UIImageView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600587-configurationstate
    configurationState(): UICellConfigurationState;
    setConfigurationState(value: UICellConfigurationState): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600590-setneedsupdateconfiguration
    setNeedsUpdateConfiguration():void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3600591-updateconfigurationusingstate
    updateConfigurationUsingState(state: UICellConfigurationState):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/3750915-configurationupdatehandler
    configurationUpdateHandler(): UITableViewCellConfigurationUpdateHandler;
    setConfigurationUpdateHandler(value: UITableViewCellConfigurationUpdateHandler): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623228-accessorytype
    accessoryType(): UITableViewCellAccessoryType;
    setAccessoryType(value: UITableViewCellAccessoryType): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623219-accessoryview
    accessoryView(): UIView;
    setAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623266-editingaccessorytype
    editingAccessoryType(): UITableViewCellAccessoryType;
    setEditingAccessoryType(value: UITableViewCellAccessoryType): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623264-editingaccessoryview
    editingAccessoryView(): UIView;
    setEditingAccessoryView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623221-selectionstyle
    selectionStyle(): UITableViewCellSelectionStyle;
    setSelectionStyle(value: UITableViewCellSelectionStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623263-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623255-setselected
    setSelected_animated(selected: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623241-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623280-sethighlighted
    setHighlighted_animated(highlighted: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623268-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623222-setediting
    setEditing_animated(editing: boolean, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623234-editingstyle
    editingStyle(): UITableViewCellEditingStyle;
    setEditingStyle(value: UITableViewCellEditingStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623211-showingdeleteconfirmation
    showingDeleteConfirmation(): boolean;
    setShowingDeleteConfirmation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623243-showsreordercontrol
    showsReorderControl(): boolean;
    setShowsReorderControl(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/2897414-userinteractionenabledwhiledragg
    userInteractionEnabledWhileDragging(): boolean;
    setUserInteractionEnabledWhileDragging(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/2897452-dragstatedidchange
    dragStateDidChange(dragState: UITableViewCellDragState):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623240-willtransitiontostate
    willTransitionToState(state: UITableViewCellStateMask):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623274-didtransitiontostate
    didTransitionToState(state: UITableViewCellStateMask):void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623252-indentationlevel
    indentationLevel(): NSInteger;
    setIndentationLevel(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623247-indentationwidth
    indentationWidth(): CGFloat;
    setIndentationWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623214-shouldindentwhileediting
    shouldIndentWhileEditing(): boolean;
    setShouldIndentWhileEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623250-separatorinset
    separatorInset(): UIEdgeInsets;
    setSeparatorInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623248-focusstyle
    focusStyle(): UITableViewCellFocusStyle;
    setFocusStyle(value: UITableViewCellFocusStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623218-initwithframe
    initWithFrame_reuseIdentifier(frame: CGRect, reuseIdentifier: string | cocoascript.NSString):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623237-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623236-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623284-textalignment
    textAlignment(): NSTextAlignment;
    setTextAlignment(value: NSTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623235-textcolor
    textColor(): UIColor;
    setTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623251-selectedtextcolor
    selectedTextColor(): UIColor;
    setSelectedTextColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623259-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623213-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623215-selectedimage
    selectedImage(): UIImage;
    setSelectedImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623230-hidesaccessorywhenediting
    hidesAccessoryWhenEditing(): boolean;
    setHidesAccessoryWhenEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623272-target
    target(): id;
    setTarget(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623206-editaction
    editAction(): SEL;
    setEditAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uitableviewcell/1623249-accessoryaction
    accessoryAction(): SEL;
    setAccessoryAction(value: SEL): void;
    //
    alloc():UITableViewCell;
    //
    init():UITableViewCell;
  }
}

declare const UITableViewCell: cocoascript.UITableViewCell;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttontype
  type UIButtonType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A configuration that specifies the appearance and behavior of a button and its contents.
   * https://developer.apple.com/documentation/uikit/uibuttonconfiguration
   */
  interface UIButtonConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750793-plainbuttonconfiguration
    plainButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750786-filledbuttonconfiguration
    filledButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750787-graybuttonconfiguration
    grayButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750798-tintedbuttonconfiguration
    tintedButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750803-updatedconfigurationforbutton
    updatedConfigurationForButton(button: UIButton):UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750799-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750796-subtitle
    subtitle(): string | cocoascript.NSString;
    setSubtitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750779-attributedtitle
    attributedTitle(): NSAttributedString;
    setAttributedTitle(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750778-attributedsubtitle
    attributedSubtitle(): NSAttributedString;
    setAttributedSubtitle(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750802-titletextattributestransformer
    titleTextAttributesTransformer(): UIConfigurationTextAttributesTransformer;
    setTitleTextAttributesTransformer(value: UIConfigurationTextAttributesTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750797-subtitletextattributestransforme
    subtitleTextAttributesTransformer(): UIConfigurationTextAttributesTransformer;
    setSubtitleTextAttributesTransformer(value: UIConfigurationTextAttributesTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750801-titlepadding
    titlePadding(): CGFloat;
    setTitlePadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750800-titlealignment
    titleAlignment(): UIButtonConfigurationTitleAlignment;
    setTitleAlignment(value: UIButtonConfigurationTitleAlignment): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750788-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750790-imagepadding
    imagePadding(): CGFloat;
    setImagePadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750795-showsactivityindicator
    showsActivityIndicator(): boolean;
    setShowsActivityIndicator(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750791-imageplacement
    imagePlacement(): NSDirectionalRectEdge;
    setImagePlacement(value: NSDirectionalRectEdge): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750789-imagecolortransformer
    imageColorTransformer(): UIConfigurationColorTransformer;
    setImageColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750794-preferredsymbolconfigurationfori
    preferredSymbolConfigurationForImage(): UIImageSymbolConfiguration;
    setPreferredSymbolConfigurationForImage(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750783-buttonsize
    buttonSize(): UIButtonConfigurationSize;
    setButtonSize(value: UIButtonConfigurationSize): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750784-contentinsets
    contentInsets(): NSDirectionalEdgeInsets;
    setContentInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750781-basebackgroundcolor
    baseBackgroundColor(): UIColor;
    setBaseBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750782-baseforegroundcolor
    baseForegroundColor(): UIColor;
    setBaseForegroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750780-background
    background(): UIBackgroundConfiguration;
    setBackground(value: UIBackgroundConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750785-cornerstyle
    cornerStyle(): UIButtonConfigurationCornerStyle;
    setCornerStyle(value: UIButtonConfigurationCornerStyle): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750792-macidiomstyle
    macIdiomStyle(): UIButtonConfigurationMacIdiomStyle;
    setMacIdiomStyle(value: UIButtonConfigurationMacIdiomStyle): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867087-activityindicatorcolortransforme
    activityIndicatorColorTransformer(): UIConfigurationColorTransformer;
    setActivityIndicatorColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867088-automaticallyupdateforselection
    automaticallyUpdateForSelection(): boolean;
    setAutomaticallyUpdateForSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867093-setdefaultcontentinsets
    setDefaultContentInsets():void;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867089-borderedbuttonconfiguration
    borderedButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867090-borderedprominentbuttonconfigura
    borderedProminentButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867091-borderedtintedbuttonconfiguratio
    borderedTintedButtonConfiguration():UIButtonConfiguration;
    // https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867092-borderlessbuttonconfiguration
    borderlessButtonConfiguration():UIButtonConfiguration;
    //
    alloc():UIButtonConfiguration;
    //
    init():UIButtonConfiguration;
  }
}

declare const UIButtonConfiguration: cocoascript.UIButtonConfiguration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonconfigurationupdatehandler
  type UIButtonConfigurationUpdateHandler = cocoascript.UIButton;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonrole
  type UIButtonRole = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibehavioralstyle
  type UIBehavioralStyle = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonpointerstyleprovider
  type UIButtonPointerStyleProvider = cocoascript.UIPointerShape;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiswitchstyle
  type UISwitchStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipagecontrolbackgroundstyle
  type UIPageControlBackgroundStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipagecontrolinteractionstate
  type UIPageControlInteractionState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The methods that an object adopts to manage data and provide cells for a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdatasource
   */
  interface UITableViewDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614931-tableview
    tableView_numberOfRowsInSection(tableView: UITableView, section: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614860-numberofsectionsintableview
    numberOfSectionsInTableView(tableView: UITableView):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614861-tableview
    tableView_cellForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UITableViewCell;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614850-tableview
    tableView_titleForHeaderInSection(tableView: UITableView, section: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614994-tableview
    tableView_titleForFooterInSection(tableView: UITableView, section: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614871-tableview
    tableView_commitEditingStyle_forRowAtIndexPath(tableView: UITableView, editingStyle: UITableViewCellEditingStyle, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614900-tableview
    tableView_canEditRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614927-tableview
    tableView_canMoveRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614867-tableview
    tableView_moveRowAtIndexPath_toIndexPath(tableView: UITableView, sourceIndexPath: NSIndexPath, destinationIndexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614857-sectionindextitlesfortableview
    sectionIndexTitlesForTableView(tableView: UITableView):NSString;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614933-tableview
    tableView_sectionForSectionIndexTitle_atIndex(tableView: UITableView, title: string | cocoascript.NSString, index: NSInteger):NSInteger;
  }
}
declare namespace cocoascript {
  /**
   * A protocol that provides advance warning of the data requirements for a table view, allowing you to start potentially long-running data operations early.
   * https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching
   */
  interface UITableViewDataSourcePrefetching extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching/1771764-tableview
    tableView_prefetchRowsAtIndexPaths(tableView: UITableView, indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching/1771765-tableview
    tableView_cancelPrefetchingForRowsAtIndexPaths(tableView: UITableView, indexPaths: NSIndexPath):void;
  }
}
declare namespace cocoascript {
  /**
   * The object you use to manage data and provide cells for a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource
   */
  interface UITableViewDiffableDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182933-initwithtableview
    initWithTableView_cellProvider(tableView: UITableView, cellProvider: UITableViewDiffableDataSourceCellProvider):UITableViewDiffableDataSource;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182934-itemidentifierforindexpath
    itemIdentifierForIndexPath(indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182932-indexpathforitemidentifier
    indexPathForItemIdentifier(identifier: any):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3801898-sectionidentifierforindex
    sectionIdentifierForIndex(index: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3801897-indexforsectionidentifier
    indexForSectionIdentifier(identifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182935-snapshot
    snapshot():NSDiffableDataSourceSnapshot;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182930-applysnapshot
    applySnapshot_animatingDifferences(snapshot: any, animatingDifferences: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3356326-applysnapshot
    applySnapshot_animatingDifferences_completion(snapshot: any, animatingDifferences: boolean, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3801895-applysnapshotusingreloaddata
    applySnapshotUsingReloadData(snapshot: any):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3801896-applysnapshotusingreloaddata
    applySnapshotUsingReloadData_completion(snapshot: any, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3182931-defaultrowanimation
    defaultRowAnimation(): UITableViewRowAnimation;
    setDefaultRowAnimation(value: UITableViewRowAnimation): void;
    //
    alloc():UITableViewDiffableDataSource;
    //
    init():UITableViewDiffableDataSource;
  }
}

declare const UITableViewDiffableDataSource: cocoascript.UITableViewDiffableDataSource;
declare namespace cocoascript {
  /**
   * An object that organizes, sorts, and localizes the data for a table view that has a section index.
   * https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation
   */
  interface UILocalizedIndexedCollation extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620384-currentcollation
    currentCollation():UILocalizedIndexedCollation;
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620378-sectionforobject
    sectionForObject_collationStringSelector(object: UILocalizedIndexedCollation, selector: SEL):NSInteger;
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620382-sortedarrayfromarray
    sortedArrayFromArray_collationStringSelector(array: NSArray, selector: SEL):NSArray;
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620379-sectiontitles
    sectionTitles(): string | cocoascript.NSString;
    setSectionTitles(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620383-sectionindextitles
    sectionIndexTitles(): string | cocoascript.NSString;
    setSectionIndexTitles(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620380-sectionforsectionindextitleatind
    sectionForSectionIndexTitleAtIndex(indexTitleIndex: NSInteger):NSInteger;
    //
    alloc():UILocalizedIndexedCollation;
    //
    init():UILocalizedIndexedCollation;
  }
}

declare const UILocalizedIndexedCollation: cocoascript.UILocalizedIndexedCollation;
declare namespace cocoascript {
  /**
   * An advanced interface for managing a data source object.
   * https://developer.apple.com/documentation/uikit/uidatasourcetranslating
   */
  interface UIDataSourceTranslating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897405-presentationindexpathfordatasour
    presentationIndexPathForDataSourceIndexPath(dataSourceIndexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897315-datasourceindexpathforpresentati
    dataSourceIndexPathForPresentationIndexPath(presentationIndexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897352-presentationsectionindexfordatas
    presentationSectionIndexForDataSourceSectionIndex(dataSourceSectionIndex: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897423-datasourcesectionindexforpresent
    dataSourceSectionIndexForPresentationSectionIndex(presentationSectionIndex: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897368-performusingpresentationvalues
    performUsingPresentationValues(actionsToTranslate: void):void;
  }
}
declare namespace cocoascript {
  /**
   * An object representing an alternative action for a command.
   * https://developer.apple.com/documentation/uikit/uicommandalternate
   */
  interface UICommandAlternate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicommandalternate/3175315-alternatewithtitle
    alternateWithTitle_action_modifierFlags(title: string | cocoascript.NSString, action: SEL, modifierFlags: UIKeyModifierFlags):UICommandAlternate;
    // https://developer.apple.com/documentation/uikit/uicommandalternate/3175316-initwithcoder
    initWithCoder(coder: NSCoder):UICommandAlternate;
    // https://developer.apple.com/documentation/uikit/uicommandalternate/3175318-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicommandalternate/3175314-action
    action(): SEL;
    setAction(value: SEL): void;
    // https://developer.apple.com/documentation/uikit/uicommandalternate/3175317-modifierflags
    modifierFlags(): UIKeyModifierFlags;
    setModifierFlags(value: UIKeyModifierFlags): void;
    //
    alloc():UICommandAlternate;
    //
    init():UICommandAlternate;
  }
}

declare const UICommandAlternate: cocoascript.UICommandAlternate;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uikeymodifierflags
  type UIKeyModifierFlags = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfacestyle
  type UIUserInterfaceStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfacelevel
  type UIUserInterfaceLevel = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitraitenvironmentlayoutdirection
  type UITraitEnvironmentLayoutDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycontrast
  type UIAccessibilityContrast = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilegibilityweight
  type UILegibilityWeight = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfaceactiveappearance
  type UIUserInterfaceActiveAppearance = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontrolstate
  type UIControlState = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerbackgroundstyle
  type UISplitViewControllerBackgroundStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactionidentifier
  type UIActionIdentifier = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactionhandler
  type UIActionHandler = cocoascript.UIAction;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimenuidentifier
  type UIMenuIdentifier = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimenuoptions
  type UIMenuOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityindicatorviewstyle
  type UIActivityIndicatorViewStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uialertcontrollerstyle
  type UIAlertControllerStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidatepickerstyle
  type UIDatePickerStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidatepickermode
  type UIDatePickerMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uipickerviewdatasource
   */
  interface UIPickerViewDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipickerviewdatasource/1614377-numberofcomponentsinpickerview
    numberOfComponentsInPickerView(pickerView: UIPickerView):NSInteger;
    // https://developer.apple.com/documentation/uikit/uipickerviewdatasource/1614388-pickerview
    pickerView_numberOfRowsInComponent(pickerView: UIPickerView, component: NSInteger):NSInteger;
  }
}
declare namespace cocoascript {
  /**
   * The delegate of a
   * https://developer.apple.com/documentation/uikit/uipickerviewdelegate
   */
  interface UIPickerViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614386-pickerview
    pickerView_rowHeightForComponent(pickerView: UIPickerView, component: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614378-pickerview
    pickerView_widthForComponent(pickerView: UIPickerView, component: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614384-pickerview
    pickerView_titleForRow_forComponent(pickerView: UIPickerView, row: NSInteger, component: NSInteger):NSString;
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614375-pickerview
    pickerView_attributedTitleForRow_forComponent(pickerView: UIPickerView, row: NSInteger, component: NSInteger):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614389-pickerview
    pickerView_viewForRow_forComponent_reusingView(pickerView: UIPickerView, row: NSInteger, component: NSInteger, view: UIView):UIView;
    // https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614371-pickerview
    pickerView_didSelectRow_inComponent(pickerView: UIPickerView, row: NSInteger, component: NSInteger):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that your delegate object must implement to interact with the image picker interface.
   * https://developer.apple.com/documentation/uikit/uiimagepickercontrollerdelegate
   */
  interface UIImagePickerControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerdelegate/1619126-imagepickercontroller
    imagePickerController_didFinishPickingMediaWithInfo(picker: UIImagePickerController, info: UIImagePickerControllerDelegate):void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerdelegate/1619133-imagepickercontrollerdidcancel
    imagePickerControllerDidCancel(picker: UIImagePickerController):void;
    // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerdelegate/1619152-imagepickercontroller
    imagePickerController_didFinishPickingImage_editingInfo(picker: UIImagePickerController, image: UIImage, editingInfo: UIImagePickerControllerDelegate):void;
  }
}
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollerlivephoto
declare const UIImagePickerControllerLivePhoto: cocoascript.UIImagePickerControllerInfoKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollersourcetype
  type UIImagePickerControllerSourceType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerqualitytype
  type UIImagePickerControllerQualityType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollercameradevice
  type UIImagePickerControllerCameraDevice = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollercameracapturemode
  type UIImagePickerControllerCameraCaptureMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollercameraflashmode
  type UIImagePickerControllerCameraFlashMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerimageurlexportpreset
  type UIImagePickerControllerImageURLExportPreset = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprogressviewstyle
  type UIProgressViewStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A collection of optional methods that you implement to make a search bar control functional.
   * https://developer.apple.com/documentation/uikit/uisearchbardelegate
   */
  interface UISearchBarDelegate extends UIBarPositioningDelegate {
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624299-searchbar
    searchBar_textDidChange(searchBar: UISearchBar, searchText: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624328-searchbar
    searchBar_shouldChangeTextInRange_replacementText(searchBar: UISearchBar, range: NSRange, text: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624306-searchbarshouldbeginediting
    searchBarShouldBeginEditing(searchBar: UISearchBar):boolean;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624303-searchbartextdidbeginediting
    searchBarTextDidBeginEditing(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624329-searchbarshouldendediting
    searchBarShouldEndEditing(searchBar: UISearchBar):boolean;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624301-searchbartextdidendediting
    searchBarTextDidEndEditing(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624312-searchbarbookmarkbuttonclicked
    searchBarBookmarkButtonClicked(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624314-searchbarcancelbuttonclicked
    searchBarCancelButtonClicked(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624294-searchbarsearchbuttonclicked
    searchBarSearchButtonClicked(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624305-searchbarresultslistbuttonclicke
    searchBarResultsListButtonClicked(searchBar: UISearchBar):void;
    // https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624280-searchbar
    searchBar_selectedScopeButtonIndexDidChange(searchBar: UISearchBar, selectedScope: NSInteger):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisearchbarstyle
  type UISearchBarStyle = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibarstyle
  type UIBarStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisearchbaricon
  type UISearchBarIcon = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisegmentedcontrolstyle
  type UISegmentedControlStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisegmentedcontrolsegment
  type UISegmentedControlSegment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uistackviewdistribution
  type UIStackViewDistribution = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uistackviewalignment
  type UIStackViewAlignment = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uistackviewspacingusedefault
declare const UIStackViewSpacingUseDefault: cocoascript.CGFloat;
// https://developer.apple.com/documentation/uikit/uistackviewspacingusesystem
declare const UIStackViewSpacingUseSystem: cocoascript.CGFloat;
// https://developer.apple.com/documentation/uikit/uikeyboardwillshownotification
declare const UIKeyboardWillShowNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uikeyboarddidshownotification
declare const UIKeyboardDidShowNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uikeyboardwillhidenotification
declare const UIKeyboardWillHideNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uikeyboarddidhidenotification
declare const UIKeyboardDidHideNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uikeyboardwillchangeframenotification
declare const UIKeyboardWillChangeFrameNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uikeyboarddidchangeframenotification
declare const UIKeyboardDidChangeFrameNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * A set of optional methods to manage the editing and validation of text in a text field object.
   * https://developer.apple.com/documentation/uikit/uitextfielddelegate
   */
  interface UITextFieldDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619601-textfieldshouldbeginediting
    textFieldShouldBeginEditing(textField: UITextField):boolean;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619590-textfielddidbeginediting
    textFieldDidBeginEditing(textField: UITextField):void;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619592-textfieldshouldendediting
    textFieldShouldEndEditing(textField: UITextField):boolean;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/2352220-textfielddidendediting
    textFieldDidEndEditing_reason(textField: UITextField, reason: UITextFieldDidEndEditingReason):void;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619591-textfielddidendediting
    textFieldDidEndEditing(textField: UITextField):void;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619599-textfield
    textField_shouldChangeCharactersInRange_replacementString(textField: UITextField, range: NSRange, string: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619594-textfieldshouldclear
    textFieldShouldClear(textField: UITextField):boolean;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/1619603-textfieldshouldreturn
    textFieldShouldReturn(textField: UITextField):boolean;
    // https://developer.apple.com/documentation/uikit/uitextfielddelegate/3114542-textfielddidchangeselection
    textFieldDidChangeSelection(textField: UITextField):void;
  }
}
declare namespace cocoascript {
  /**
   * A collection of methods that give controls an easy way to adopt automatic adjustment to content category changes.
   * https://developer.apple.com/documentation/uikit/uicontentsizecategoryadjusting
   */
  interface UIContentSizeCategoryAdjusting extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontentsizecategoryadjusting/1771731-adjustsfontforcontentsizecategor
    adjustsFontForContentSizeCategory(): boolean;
    setAdjustsFontForContentSizeCategory(value: boolean): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextborderstyle
  type UITextBorderStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextfielddidendeditingreason
  type UITextFieldDidEndEditingReason = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uitextfieldtextdidbegineditingnotification
declare const UITextFieldTextDidBeginEditingNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uitextfieldtextdidchangenotification
declare const UITextFieldTextDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uitextfieldtextdidendeditingnotification
declare const UITextFieldTextDidEndEditingNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextfieldviewmode
  type UITextFieldViewMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The methods that delegates of text-formatting coordinators implement to apply font panel settings to the currently selected text.
   * https://developer.apple.com/documentation/uikit/uitextformattingcoordinatordelegate
   */
  interface UITextFormattingCoordinatorDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextformattingcoordinatordelegate/3261469-updatetextattributeswithconversi
    updateTextAttributesWithConversionHandler(conversionHandler: UITextAttributesConversionHandler):void;
  }
}
declare namespace cocoascript {
  /**
   * The methods for receiving editing-related messages for text view objects.
   * https://developer.apple.com/documentation/uikit/uitextviewdelegate
   */
  interface UITextViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618608-textviewshouldbeginediting
    textViewShouldBeginEditing(textView: UITextView):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618610-textviewdidbeginediting
    textViewDidBeginEditing(textView: UITextView):void;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618603-textviewshouldendediting
    textViewShouldEndEditing(textView: UITextView):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618628-textviewdidendediting
    textViewDidEndEditing(textView: UITextView):void;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618630-textview
    textView_shouldChangeTextInRange_replacementText(textView: UITextView, range: NSRange, text: string | cocoascript.NSString):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618599-textviewdidchange
    textViewDidChange(textView: UITextView):void;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618620-textviewdidchangeselection
    textViewDidChangeSelection(textView: UITextView):void;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1649336-textview
    textView_shouldInteractWithTextAttachment_inRange_interaction(textView: UITextView, textAttachment: NSTextAttachment, characterRange: NSRange, interaction: UITextItemInteraction):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1649337-textview
    textView_shouldInteractWithURL_inRange_interaction(textView: UITextView, URL: NSURL, characterRange: NSRange, interaction: UITextItemInteraction):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618621-textview
    textView_shouldInteractWithTextAttachment_inRange(textView: UITextView, textAttachment: NSTextAttachment, characterRange: NSRange):boolean;
    // https://developer.apple.com/documentation/uikit/uitextviewdelegate/1618606-textview
    textView_shouldInteractWithURL_inRange(textView: UITextView, URL: NSURL, characterRange: NSRange):boolean;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidatadetectortypes
  type UIDataDetectorTypes = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uitextviewtextdidbegineditingnotification
declare const UITextViewTextDidBeginEditingNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uitextviewtextdidchangenotification
declare const UITextViewTextDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uitextviewtextdidendeditingnotification
declare const UITextViewTextDidEndEditingNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uitoolbardelegate
   */
  interface UIToolbarDelegate extends UIBarPositioningDelegate {
  }
}
declare namespace cocoascript {
  /**
   * A class that animates changes to views and allows the dynamic modification of those animations.
   * https://developer.apple.com/documentation/uikit/uiviewpropertyanimator
   */
  interface UIViewPropertyAnimator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648366-initwithduration
    initWithDuration_curve_animations(duration: NSTimeInterval, curve: UIViewAnimationCurve, animations: void):UIViewPropertyAnimator;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648368-initwithduration
    initWithDuration_controlPoint1_controlPoint2_animations(duration: NSTimeInterval, point1: CGPoint, point2: CGPoint, animations: void):UIViewPropertyAnimator;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648369-initwithduration
    initWithDuration_dampingRatio_animations(duration: NSTimeInterval, ratio: CGFloat, animations: void):UIViewPropertyAnimator;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648362-initwithduration
    initWithDuration_timingParameters(duration: NSTimeInterval, parameters: UITimingCurveProvider):UIViewPropertyAnimator;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648367-runningpropertyanimatorwithdurat
    runningPropertyAnimatorWithDuration_delay_options_animations_completion(duration: NSTimeInterval, delay: NSTimeInterval, options: UIViewAnimationOptions, animations: void, completion: UIViewAnimatingPosition):UIViewPropertyAnimator;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648374-addanimations
    addAnimations(animation: void):void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648370-addanimations
    addAnimations_delayFactor(animation: void, delayFactor: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648373-addcompletion
    addCompletion(completion: UIViewAnimatingPosition):void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648371-continueanimationwithtimingparam
    continueAnimationWithTimingParameters_durationFactor(parameters: UITimingCurveProvider, durationFactor: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648375-duration
    duration(): NSTimeInterval;
    setDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/2097549-delay
    delay(): NSTimeInterval;
    setDelay(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648363-timingparameters
    timingParameters(): UITimingCurveProvider;
    setTimingParameters(value: UITimingCurveProvider): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648372-interruptible
    interruptible(): boolean;
    setInterruptible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/1648365-userinteractionenabled
    userInteractionEnabled(): boolean;
    setUserInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/2097548-manualhittestingenabled
    manualHitTestingEnabled(): boolean;
    setManualHitTestingEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/2873966-scrubslinearly
    scrubsLinearly(): boolean;
    setScrubsLinearly(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewpropertyanimator/2909004-pausesoncompletion
    pausesOnCompletion(): boolean;
    setPausesOnCompletion(value: boolean): void;
    //
    alloc():UIViewPropertyAnimator;
    //
    init():UIViewPropertyAnimator;
  }
}

declare const UIViewPropertyAnimator: cocoascript.UIViewPropertyAnimator;
declare namespace cocoascript {
  /**
   * A set of methods that can make a custom object eligible to participate in UIKit Dynamics.
   * https://developer.apple.com/documentation/uikit/uidynamicitem
   */
  interface UIDynamicItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidynamicitem/1618495-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitem/1618491-center
    center(): CGPoint;
    setCenter(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitem/1618483-transform
    transform(): CGAffineTransform;
    setTransform(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitem/1618493-collisionboundstype
    collisionBoundsType(): UIDynamicItemCollisionBoundsType;
    setCollisionBoundsType(value: UIDynamicItemCollisionBoundsType): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitem/1618494-collisionboundingpath
    collisionBoundingPath(): UIBezierPath;
    setCollisionBoundingPath(value: UIBezierPath): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewcontentmode
  type UIViewContentMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewanimationcurve
  type UIViewAnimationCurve = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewanimationoptions
  type UIViewAnimationOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewanimationtransition
  type UIViewAnimationTransition = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisystemanimation
  type UISystemAnimation = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewkeyframeanimationoptions
  type UIViewKeyframeAnimationOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewtintadjustmentmode
  type UIViewTintAdjustmentMode = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uilayoutfittingcompressedsize
declare const UILayoutFittingCompressedSize: cocoascript.CGSize;
// https://developer.apple.com/documentation/uikit/uilayoutfittingexpandedsize
declare const UILayoutFittingExpandedSize: cocoascript.CGSize;
// https://developer.apple.com/documentation/uikit/uiviewnointrinsicmetric
declare const UIViewNoIntrinsicMetric: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewautoresizing
  type UIViewAutoresizing = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisemanticcontentattribute
  type UISemanticContentAttribute = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintrenderingquality
  type UIPrintRenderingQuality = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A scene that manages one or more windows for your app.
   * https://developer.apple.com/documentation/uikit/uiwindowscene
   */
  interface UIWindowScene extends UIScene {
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3198091-windows
    windows(): UIWindow;
    setWindows(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3750932-keywindow
    keyWindow(): UIWindow;
    setKeyWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3198089-screen
    screen(): UIScreen;
    setScreen(value: UIScreen): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3198090-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3198087-coordinatespace
    coordinateSpace(): UICoordinateSpace;
    setCoordinateSpace(value: UICoordinateSpace): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3198088-interfaceorientation
    interfaceOrientation(): UIInterfaceOrientation;
    setInterfaceOrientation(value: UIInterfaceOrientation): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3368166-sizerestrictions
    sizeRestrictions(): UISceneSizeRestrictions;
    setSizeRestrictions(value: UISceneSizeRestrictions): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3213938-screenshotservice
    screenshotService(): UIScreenshotService;
    setScreenshotService(value: UIScreenshotService): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3213943-statusbarmanager
    statusBarManager(): UIStatusBarManager;
    setStatusBarManager(value: UIStatusBarManager): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3375831-titlebar
    titlebar(): UITitlebar;
    setTitlebar(value: UITitlebar): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3780514-activityitemsconfigurationsource
    activityItemsConfigurationSource(): UIActivityItemsConfigurationProviding;
    setActivityItemsConfigurationSource(value: UIActivityItemsConfigurationProviding): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscene/3795593-focussystem
    focusSystem(): UIFocusSystem;
    setFocusSystem(value: UIFocusSystem): void;
    //
    alloc():UIWindowScene;
    //
    init():UIWindowScene;
  }
}

declare const UIWindowScene: cocoascript.UIWindowScene;
declare namespace cocoascript {
  /**
   * An object that you use to configure the title bar of a window in a Mac app built with Mac Catalyst.
   * https://developer.apple.com/documentation/uikit/uititlebar
   */
  interface UITitlebar extends NSObject {
    // https://developer.apple.com/documentation/uikit/uititlebar/3664137-separatorstyle
    separatorStyle(): UITitlebarSeparatorStyle;
    setSeparatorStyle(value: UITitlebarSeparatorStyle): void;
    // https://developer.apple.com/documentation/uikit/uititlebar/3375824-titlevisibility
    titleVisibility(): UITitlebarTitleVisibility;
    setTitleVisibility(value: UITitlebarTitleVisibility): void;
    // https://developer.apple.com/documentation/uikit/uititlebar/3375823-representedurl
    representedURL(): NSURL;
    setRepresentedURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uititlebar/3375825-toolbar
    toolbar(): NSToolbar;
    setToolbar(value: NSToolbar): void;
    // https://developer.apple.com/documentation/uikit/uititlebar/3604076-toolbarstyle
    toolbarStyle(): UITitlebarToolbarStyle;
    setToolbarStyle(value: UITitlebarToolbarStyle): void;
    // https://developer.apple.com/documentation/uikit/uititlebar/3375822-autohidestoolbarinfullscreen
    autoHidesToolbarInFullScreen(): boolean;
    setAutoHidesToolbarInFullScreen(value: boolean): void;
    //
    alloc():UITitlebar;
    //
    init():UITitlebar;
  }
}

declare const UITitlebar: cocoascript.UITitlebar;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uititlebartitlevisibility
  type UITitlebarTitleVisibility = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uititlebarseparatorstyle
  type UITitlebarSeparatorStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle
  type UITitlebarToolbarStyle = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uifocusmovementdidfailnotification
declare const UIFocusMovementDidFailNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifocussoundidentifier
  type UIFocusSoundIdentifier = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uifocusdidupdatenotification
declare const UIFocusDidUpdateNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifocusheading
  type UIFocusHeading = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uifocusgroupprioritycurrentlyfocused
declare const UIFocusGroupPriorityCurrentlyFocused: cocoascript.UIFocusGroupPriority;
// https://developer.apple.com/documentation/uikit/uifocusgrouppriorityignored
declare const UIFocusGroupPriorityIgnored: cocoascript.UIFocusGroupPriority;
// https://developer.apple.com/documentation/uikit/uifocusgroupprioritypreviouslyfocused
declare const UIFocusGroupPriorityPreviouslyFocused: cocoascript.UIFocusGroupPriority;
// https://developer.apple.com/documentation/uikit/uifocusgrouppriorityprioritized
declare const UIFocusGroupPriorityPrioritized: cocoascript.UIFocusGroupPriority;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextmenuinteractionappearance
  type UIContextMenuInteractionAppearance = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An object containing the configuration details for the contextual menu.
   * https://developer.apple.com/documentation/uikit/uicontextmenuconfiguration
   */
  interface UIContextMenuConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontextmenuconfiguration/3295922-configurationwithidentifier
    configurationWithIdentifier_previewProvider_actionProvider(identifier: NSCopying, previewProvider: UIContextMenuContentPreviewProvider, actionProvider: UIContextMenuActionProvider):UIContextMenuConfiguration;
    // https://developer.apple.com/documentation/uikit/uicontextmenuconfiguration/3295923-identifier
    identifier(): NSCopying;
    setIdentifier(value: NSCopying): void;
    //
    alloc():UIContextMenuConfiguration;
    //
    init():UIContextMenuConfiguration;
  }
}

declare const UIContextMenuConfiguration: cocoascript.UIContextMenuConfiguration;
declare namespace cocoascript {
  /**
   * Methods adopted by system-supplied animator objects when committing preview-related animations.
   * https://developer.apple.com/documentation/uikit/uicontextmenuinteractioncommitanimating
   */
  interface UIContextMenuInteractionCommitAnimating extends UIContextMenuInteractionAnimating {
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractioncommitanimating/3295931-preferredcommitstyle
    preferredCommitStyle(): UIContextMenuInteractionCommitStyle;
    setPreferredCommitStyle(value: UIContextMenuInteractionCommitStyle): void;
  }
}
declare namespace cocoascript {
  /**
   * Methods adopted by system-supplied animator objects when interacting with context menus.
   * https://developer.apple.com/documentation/uikit/uicontextmenuinteractionanimating
   */
  interface UIContextMenuInteractionAnimating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractionanimating/3375802-addanimations
    addAnimations(animations: void):void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractionanimating/3375803-addcompletion
    addCompletion(completion: void):void;
    // https://developer.apple.com/documentation/uikit/uicontextmenuinteractionanimating/3375804-previewviewcontroller
    previewViewController(): UIViewController;
    setPreviewViewController(value: UIViewController): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uieditinginteractionconfiguration
  type UIEditingInteractionConfiguration = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationstate
  type UIApplicationState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An object that contains information you want the system to use when activating the session associated with a scene.
   * https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions
   */
  interface UISceneActivationRequestOptions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions/3197937-requestingscene
    requestingScene(): UIScene;
    setRequestingScene(value: UIScene): void;
    // https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions/3623235-collectionjoinbehavior
    collectionJoinBehavior(): UISceneCollectionJoinBehavior;
    setCollectionJoinBehavior(value: UISceneCollectionJoinBehavior): void;
    //
    alloc():UISceneActivationRequestOptions;
    //
    init():UISceneActivationRequestOptions;
  }
}

declare const UISceneActivationRequestOptions: cocoascript.UISceneActivationRequestOptions;
declare namespace cocoascript {
  /**
   * An object you pass to UIKit to permanently remove a scene and its associated session from your app.
   * https://developer.apple.com/documentation/uikit/uiscenedestructionrequestoptions
   */
  interface UISceneDestructionRequestOptions extends NSObject {
    //
    alloc():UISceneDestructionRequestOptions;
    //
    init():UISceneDestructionRequestOptions;
  }
}

declare const UISceneDestructionRequestOptions: cocoascript.UISceneDestructionRequestOptions;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibackgroundrefreshstatus
  type UIBackgroundRefreshStatus = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiapplicationbackgroundrefreshstatusdidchangenotification
declare const UIApplicationBackgroundRefreshStatusDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibackgroundtaskidentifier
  type UIBackgroundTaskIdentifier = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uiapplicationbackgroundfetchintervalminimum
declare const UIApplicationBackgroundFetchIntervalMinimum: cocoascript.NSTimeInterval;
// https://developer.apple.com/documentation/uikit/uiapplicationbackgroundfetchintervalnever
declare const UIApplicationBackgroundFetchIntervalNever: cocoascript.NSTimeInterval;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationopenexternalurloptionskey
  type UIApplicationOpenExternalURLOptionsKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uiapplicationprotecteddatadidbecomeavailable
declare const UIApplicationProtectedDataDidBecomeAvailable: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationprotecteddatawillbecomeunavailable
declare const UIApplicationProtectedDataWillBecomeUnavailable: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfacelayoutdirection
  type UIUserInterfaceLayoutDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontentsizecategory
  type UIContentSizeCategory = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uicontentsizecategorydidchangenotification
declare const UIContentSizeCategoryDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uistatusbarstyle
  type UIStatusBarStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uistatusbaranimation
  type UIStatusBarAnimation = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uitrackingrunloopmode
declare const UITrackingRunLoopMode: cocoascript.NSRunLoopMode;
// https://developer.apple.com/documentation/uikit/uiapplicationuserdidtakescreenshotnotification
declare const UIApplicationUserDidTakeScreenshotNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uigesturerecognizerstate
  type UIGestureRecognizerState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrolltypemask
  type UIScrollTypeMask = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrolltype
  type UIScrollType = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uirectedge
  type UIRectEdge = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiswipegesturerecognizerdirection
  type UISwipeGestureRecognizerDirection = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontrolevents
  type UIControlEvents = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontrolcontentverticalalignment
  type UIControlContentVerticalAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontrolcontenthorizontalalignment
  type UIControlContentHorizontalAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteraction
   */
  interface UIWindowSceneActivationInteraction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteraction/3752232-initwithconfigurationprovider
    initWithConfigurationProvider_errorHandler(configurationProvider: UIWindowSceneActivationInteractionConfigurationProvider, errorHandler: NSError):UIWindowSceneActivationInteraction;
    //
    alloc():UIWindowSceneActivationInteraction;
    //
    init():UIWindowSceneActivationInteraction;
  }
}

declare const UIWindowSceneActivationInteraction: cocoascript.UIWindowSceneActivationInteraction;
declare namespace cocoascript {
  /**
   * An optional set of methods that the delegate of the shared print-interaction controller implements.
   * https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate
   */
  interface UIPrintInteractionControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618162-printinteractioncontrollerparent
    printInteractionControllerParentViewController(printInteractionController: UIPrintInteractionController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618160-printinteractioncontroller
    printInteractionController_choosePaper(printInteractionController: UIPrintInteractionController, paperList: UIPrintPaper):UIPrintPaper;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618179-printinteractioncontroller
    printInteractionController_cutLengthForPaper(printInteractionController: UIPrintInteractionController, paper: UIPrintPaper):CGFloat;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618178-printinteractioncontroller
    printInteractionController_chooseCutterBehavior(printInteractionController: UIPrintInteractionController, availableBehaviors: NSArray):UIPrinterCutterBehavior;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618168-printinteractioncontrollerwillpr
    printInteractionControllerWillPresentPrinterOptions(printInteractionController: UIPrintInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618158-printinteractioncontrollerdidpre
    printInteractionControllerDidPresentPrinterOptions(printInteractionController: UIPrintInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618151-printinteractioncontrollerwilldi
    printInteractionControllerWillDismissPrinterOptions(printInteractionController: UIPrintInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618175-printinteractioncontrollerdiddis
    printInteractionControllerDidDismissPrinterOptions(printInteractionController: UIPrintInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618185-printinteractioncontrollerwillst
    printInteractionControllerWillStartJob(printInteractionController: UIPrintInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uiprintinteractioncontrollerdelegate/1618154-printinteractioncontrollerdidfin
    printInteractionControllerDidFinishJob(printInteractionController: UIPrintInteractionController):void;
  }
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uiwebviewdelegate
   */
  interface UIWebViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617945-webview
    webView_shouldStartLoadWithRequest_navigationType(webView: UIWebView, request: NSURLRequest, navigationType: UIWebViewNavigationType):boolean;
    // https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617947-webviewdidstartload
    webViewDidStartLoad(webView: UIWebView):void;
    // https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617969-webviewdidfinishload
    webViewDidFinishLoad(webView: UIWebView):void;
    // https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617970-webview
    webView_didFailLoadWithError(webView: UIWebView, error: NSError):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for handling drops in a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdropdelegate
   */
  interface UITableViewDropDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897434-tableview
    tableView_canHandleDropSession(tableView: UITableView, session: UIDropSession):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2921669-tableview
    tableView_dropPreviewParametersForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UIDragPreviewParameters;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897427-tableview
    tableView_performDropWithCoordinator(tableView: UITableView, coordinator: UITableViewDropCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897302-tableview
    tableView_dropSessionDidUpdate_withDestinationIndexPath(tableView: UITableView, session: UIDropSession, destinationIndexPath: NSIndexPath):UITableViewDropProposal;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897458-tableview
    tableView_dropSessionDidEnter(tableView: UITableView, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897303-tableview
    tableView_dropSessionDidExit(tableView: UITableView, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897342-tableview
    tableView_dropSessionDidEnd(tableView: UITableView, session: UIDropSession):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that vend objects used to manage a fixed-length or interactive transition between view controllers.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate
   */
  interface UIViewControllerTransitioningDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate/1622037-animationcontrollerforpresentedc
    animationControllerForPresentedController_presentingController_sourceController(presented: UIViewController, presenting: UIViewController, source: UIViewController):UIViewControllerAnimatedTransitioning;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate/1622047-animationcontrollerfordismissedc
    animationControllerForDismissedController(dismissed: UIViewController):UIViewControllerAnimatedTransitioning;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate/1622050-interactioncontrollerforpresenta
    interactionControllerForPresentation(animator: UIViewControllerAnimatedTransitioning):UIViewControllerInteractiveTransitioning;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate/1622030-interactioncontrollerfordismissa
    interactionControllerForDismissal(animator: UIViewControllerAnimatedTransitioning):UIViewControllerInteractiveTransitioning;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioningdelegate/1622057-presentationcontrollerforpresent
    presentationControllerForPresentedViewController_presentingViewController_sourceViewController(presented: UIViewController, presenting: UIViewController, source: UIViewController):UIPresentationController;
  }
}
declare namespace cocoascript {
  /**
   * An interface for coordinating your custom drop-related actions with the collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator
   */
  interface UICollectionViewDropCoordinator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897482-items
    items(): UICollectionViewDropItem;
    setItems(value: UICollectionViewDropItem): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897284-destinationindexpath
    destinationIndexPath(): NSIndexPath;
    setDestinationIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897310-dropitem
    dropItem_toItemAtIndexPath(dragItem: UIDragItem, indexPath: NSIndexPath):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2909040-dropitem
    dropItem_intoItemAtIndexPath_rect(dragItem: UIDragItem, indexPath: NSIndexPath, rect: CGRect):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897364-dropitem
    dropItem_toTarget(dragItem: UIDragItem, target: UIDragPreviewTarget):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2921634-dropitem
    dropItem_toPlaceholder(dragItem: UIDragItem, placeholder: UICollectionViewDropPlaceholder):UICollectionViewDropPlaceholderContext;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897462-session
    session(): UIDropSession;
    setSession(value: UIDropSession): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897465-proposal
    proposal(): UICollectionViewDropProposal;
    setProposal(value: UICollectionViewDropProposal): void;
  }
}
declare namespace cocoascript {
  /**
   * The data associated with an item being dropped into the collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropitem
   */
  interface UICollectionViewDropItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897456-dragitem
    dragItem(): UIDragItem;
    setDragItem(value: UIDragItem): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897437-previewsize
    previewSize(): CGSize;
    setPreviewSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897392-sourceindexpath
    sourceIndexPath(): NSIndexPath;
    setSourceIndexPath(value: NSIndexPath): void;
  }
}
declare namespace cocoascript {
  /**
   * The requirements for an object that provides the configuration for a content view.
   * https://developer.apple.com/documentation/uikit/uicontentconfiguration
   */
  interface UIContentConfiguration extends NSCopying {
    // https://developer.apple.com/documentation/uikit/uicontentconfiguration/3600486-makecontentview
    makeContentView():UIContentView;
    // https://developer.apple.com/documentation/uikit/uicontentconfiguration/3600487-updatedconfigurationforstate
    updatedConfigurationForState(state: UIConfigurationState):UIContentConfiguration;
  }
}
declare namespace cocoascript {
  /**
   * The interface for customizing the behavior of a drag activity for a text view.
   * https://developer.apple.com/documentation/uikit/uitextdragdelegate
   */
  interface UITextDragDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890907-textdraggableview
    textDraggableView_dragSessionWillBegin(textDraggableView: UITextDraggable, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890902-textdraggableview
    textDraggableView_dragSessionDidEnd_withOperation(textDraggableView: UITextDraggable, session: UIDragSession, operation: UIDropOperation):void;
    // https://developer.apple.com/documentation/uikit/uitextdragdelegate/2919989-textdraggableview
    textDraggableView_willAnimateLiftWithAnimator_session(textDraggableView: UITextDraggable, animator: UIDragAnimating, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890908-textdraggableview
    textDraggableView_itemsForDrag(textDraggableView: UITextDraggable, dragRequest: UITextDragRequest):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890904-textdraggableview
    textDraggableView_dragPreviewForLiftingItem_session(textDraggableView: UITextDraggable, item: UIDragItem, session: UIDragSession):UITargetedDragPreview;
  }
}
declare namespace cocoascript {
  /**
   * Methods you use to generate PDF data that accompanies a user-requested screenshot.
   * https://developer.apple.com/documentation/uikit/uiscreenshotservicedelegate
   */
  interface UIScreenshotServiceDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscreenshotservicedelegate/3213937-screenshotservice
    screenshotService_generatePDFRepresentationWithCompletion(screenshotService: UIScreenshotService, completionHandler: CGRect):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for initiating drags from a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate
   */
  interface UICollectionViewDragDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897389-collectionview
    collectionView_itemsForBeginningDragSession_atIndexPath(collectionView: UICollectionView, session: UIDragSession, indexPath: NSIndexPath):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897367-collectionview
    collectionView_itemsForAddingToDragSession_atIndexPath_point(collectionView: UICollectionView, session: UIDragSession, indexPath: NSIndexPath, point: CGPoint):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897440-collectionview
    collectionView_dragSessionWillBegin(collectionView: UICollectionView, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897477-collectionview
    collectionView_dragSessionDidEnd(collectionView: UICollectionView, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897459-collectionview
    collectionView_dragPreviewParametersForItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):UIDragPreviewParameters;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2919964-collectionview
    collectionView_dragSessionAllowsMoveOperation(collectionView: UICollectionView, session: UIDragSession):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2919963-collectionview
    collectionView_dragSessionIsRestrictedToDraggingApplication(collectionView: UICollectionView, session: UIDragSession):boolean;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods adopted by an object so that the object can act as an activity items configuration.
   * https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading
   */
  interface UIActivityItemsConfigurationReading extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368149-itemprovidersforactivityitemscon
    itemProvidersForActivityItemsConfiguration(): NSItemProvider;
    setItemProvidersForActivityItemsConfiguration(value: NSItemProvider): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368148-applicationactivitiesforactivity
    applicationActivitiesForActivityItemsConfiguration(): UIActivity;
    setApplicationActivitiesForActivityItemsConfiguration(value: UIActivity): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368144-activityitemsconfigurationmetada
    activityItemsConfigurationMetadataForKey(key: UIActivityItemsConfigurationMetadataKey):UIActivityItemsConfigurationReading;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368145-activityitemsconfigurationmetada
    activityItemsConfigurationMetadataForItemAtIndex_key(index: NSInteger, key: UIActivityItemsConfigurationMetadataKey):UIActivityItemsConfigurationReading;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368147-activityitemsconfigurationsuppor
    activityItemsConfigurationSupportsInteraction(interaction: UIActivityItemsConfigurationInteraction):boolean;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationreading/3368146-activityitemsconfigurationprevie
    activityItemsConfigurationPreviewForItemAtIndex_intent_suggestedSize(index: NSInteger, intent: UIActivityItemsConfigurationPreviewIntent, suggestedSize: CGSize):NSItemProvider;
  }
}
declare namespace cocoascript {
  /**
   * To respond to the pausing or resumption of UIKit dynamic animation, configure a custom class to adopt the
   * https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate
   */
  interface UIDynamicAnimatorDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate/1621193-dynamicanimatordidpause
    dynamicAnimatorDidPause(animator: UIDynamicAnimator):void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate/1621188-dynamicanimatorwillresume
    dynamicAnimatorWillResume(animator: UIDynamicAnimator):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that your delegate object must implement to respond to the video editor.
   * https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate
   */
  interface UIVideoEditorControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622336-videoeditorcontroller
    videoEditorController_didSaveEditedVideoToPath(editor: UIVideoEditorController, editedVideoPath: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622335-videoeditorcontrollerdidcancel
    videoEditorControllerDidCancel(editor: UIVideoEditorController):void;
    // https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622342-videoeditorcontroller
    videoEditorController_didFailWithError(editor: UIVideoEditorController, error: NSError):void;
  }
}
declare namespace cocoascript {
  /**
   * The delegate of a page view controller must adopt the
   * https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate
   */
  interface UIPageViewControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614091-pageviewcontroller
    pageViewController_willTransitionToViewControllers(pageViewController: UIPageViewController, pendingViewControllers: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614090-pageviewcontroller
    pageViewController_didFinishAnimating_previousViewControllers_transitionCompleted(pageViewController: UIPageViewController, finished: boolean, previousViewControllers: UIViewController, completed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614083-pageviewcontroller
    pageViewController_spineLocationForInterfaceOrientation(pageViewController: UIPageViewController, orientation: UIInterfaceOrientation):UIPageViewControllerSpineLocation;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614100-pageviewcontrollersupportedinter
    pageViewControllerSupportedInterfaceOrientations(pageViewController: UIPageViewController):UIInterfaceOrientationMask;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614119-pageviewcontrollerpreferredinter
    pageViewControllerPreferredInterfaceOrientationForPresentation(pageViewController: UIPageViewController):UIInterfaceOrientation;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that provides information about an in-progress view controller transition.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext
   */
  interface UIViewControllerTransitionCoordinatorContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619293-viewcontrollerforkey
    viewControllerForKey(key: UITransitionContextViewControllerKey):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619302-viewforkey
    viewForKey(key: UITransitionContextViewKey):UIView;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619280-containerview
    containerView(): UIView;
    setContainerView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619287-presentationstyle
    presentationStyle(): UIModalPresentationStyle;
    setPresentationStyle(value: UIModalPresentationStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619286-transitionduration
    transitionDuration(): NSTimeInterval;
    setTransitionDuration(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619299-completioncurve
    completionCurve(): UIViewAnimationCurve;
    setCompletionCurve(value: UIViewAnimationCurve): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619282-completionvelocity
    completionVelocity(): CGFloat;
    setCompletionVelocity(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619290-percentcomplete
    percentComplete(): CGFloat;
    setPercentComplete(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619285-initiallyinteractive
    initiallyInteractive(): boolean;
    setInitiallyInteractive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/2097567-interactive
    interactive(): boolean;
    setInteractive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/2097566-animated
    animated(): boolean;
    setAnimated(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/2097568-cancelled
    cancelled(): boolean;
    setCancelled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1829390-isinterruptible
    isInterruptible(): boolean;
    setIsInterruptible(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinatorcontext/1619289-targettransform
    targetTransform(): CGAffineTransform;
    setTargetTransform(value: CGAffineTransform): void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for handling drops in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate
   */
  interface UICollectionViewDropDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897386-collectionview
    collectionView_canHandleDropSession(collectionView: UICollectionView, session: UIDropSession):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897304-collectionview
    collectionView_performDropWithCoordinator(collectionView: UICollectionView, coordinator: UICollectionViewDropCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897375-collectionview
    collectionView_dropSessionDidUpdate_withDestinationIndexPath(collectionView: UICollectionView, session: UIDropSession, destinationIndexPath: NSIndexPath):UICollectionViewDropProposal;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897329-collectionview
    collectionView_dropSessionDidEnter(collectionView: UICollectionView, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897416-collectionview
    collectionView_dropSessionDidExit(collectionView: UICollectionView, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897291-collectionview
    collectionView_dropSessionDidEnd(collectionView: UICollectionView, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2921636-collectionview
    collectionView_dropPreviewParametersForItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):UIDragPreviewParameters;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods you can implement to respond to messages from a document interaction controller.
   * https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate
   */
  interface UIDocumentInteractionControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616799-documentinteractioncontrollervie
    documentInteractionControllerViewControllerForPreview(controller: UIDocumentInteractionController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616819-documentinteractioncontrollervie
    documentInteractionControllerViewForPreview(controller: UIDocumentInteractionController):UIView;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616805-documentinteractioncontrollerrec
    documentInteractionControllerRectForPreview(controller: UIDocumentInteractionController):CGRect;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616806-documentinteractioncontrollerwil
    documentInteractionControllerWillBeginPreview(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616809-documentinteractioncontrollerdid
    documentInteractionControllerDidEndPreview(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616822-documentinteractioncontrollerwil
    documentInteractionControllerWillPresentOptionsMenu(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616803-documentinteractioncontrollerdid
    documentInteractionControllerDidDismissOptionsMenu(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616818-documentinteractioncontrollerwil
    documentInteractionControllerWillPresentOpenInMenu(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616826-documentinteractioncontrollerdid
    documentInteractionControllerDidDismissOpenInMenu(controller: UIDocumentInteractionController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616825-documentinteractioncontroller
    documentInteractionController_willBeginSendingToApplication(controller: UIDocumentInteractionController, application: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616824-documentinteractioncontroller
    documentInteractionController_didEndSendingToApplication(controller: UIDocumentInteractionController, application: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616800-documentinteractioncontroller
    documentInteractionController_canPerformAction(controller: UIDocumentInteractionController, action: SEL):boolean;
    // https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616823-documentinteractioncontroller
    documentInteractionController_performAction(controller: UIDocumentInteractionController, action: SEL):boolean;
  }
}
declare namespace cocoascript {
  /**
   * An item that's currently visible within the bounds of a section.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem
   */
  interface NSCollectionLayoutVisibleItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199122-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199124-representedelementkind
    representedElementKind(): string | cocoascript.NSString;
    setRepresentedElementKind(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199123-representedelementcategory
    representedElementCategory(): UICollectionElementCategory;
    setRepresentedElementCategory(value: UICollectionElementCategory): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199120-indexpath
    indexPath(): NSIndexPath;
    setIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199116-alpha
    alpha(): CGFloat;
    setAlpha(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199121-hidden
    hidden(): boolean;
    setHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199119-frame
    frame(): CGRect;
    setFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199117-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199118-center
    center(): CGPoint;
    setCenter(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199125-transform
    transform(): CGAffineTransform;
    setTransform(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199126-transform3d
    transform3D(): CATransform3D;
    setTransform3D(value: CATransform3D): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199127-zindex
    zIndex(): NSInteger;
    setZIndex(value: NSInteger): void;
  }
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uipageviewcontrollerdatasource
   */
  interface UIPageViewControllerDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdatasource/1614086-pageviewcontroller
    pageViewController_viewControllerBeforeViewController(pageViewController: UIPageViewController, viewController: UIViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdatasource/1614118-pageviewcontroller
    pageViewController_viewControllerAfterViewController(pageViewController: UIPageViewController, viewController: UIViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdatasource/1614095-presentationcountforpageviewcont
    presentationCountForPageViewController(pageViewController: UIPageViewController):NSInteger;
    // https://developer.apple.com/documentation/uikit/uipageviewcontrollerdatasource/1614116-presentationindexforpageviewcont
    presentationIndexForPageViewController(pageViewController: UIPageViewController):NSInteger;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods for managing the presentation and dismissal of a printer picker interface.
   * https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate
   */
  interface UIPrinterPickerControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620503-printerpickercontroller
    printerPickerController_shouldShowPrinter(printerPickerController: UIPrinterPickerController, printer: UIPrinter):boolean;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620504-printerpickercontrollerdidselect
    printerPickerControllerDidSelectPrinter(printerPickerController: UIPrinterPickerController):void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620518-printerpickercontrollerparentvie
    printerPickerControllerParentViewController(printerPickerController: UIPrinterPickerController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620513-printerpickercontrollerwillprese
    printerPickerControllerWillPresent(printerPickerController: UIPrinterPickerController):void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620508-printerpickercontrollerdidpresen
    printerPickerControllerDidPresent(printerPickerController: UIPrinterPickerController):void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620519-printerpickercontrollerwilldismi
    printerPickerControllerWillDismiss(printerPickerController: UIPrinterPickerController):void;
    // https://developer.apple.com/documentation/uikit/uiprinterpickercontrollerdelegate/1620510-printerpickercontrollerdiddismis
    printerPickerControllerDidDismiss(printerPickerController: UIPrinterPickerController):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for handling pasting and dropping of text, using item providers.
   * https://developer.apple.com/documentation/uikit/uitextpastedelegate
   */
  interface UITextPasteDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887483-textpasteconfigurationsupporting
    textPasteConfigurationSupporting_transformPasteItem(textPasteConfigurationSupporting: UITextPasteConfigurationSupporting, item: UITextPasteItem):void;
    // https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887490-textpasteconfigurationsupporting
    textPasteConfigurationSupporting_combineItemAttributedStrings_forRange(textPasteConfigurationSupporting: UITextPasteConfigurationSupporting, itemStrings: NSAttributedString, textRange: UITextRange):NSAttributedString;
    // https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887492-textpasteconfigurationsupporting
    textPasteConfigurationSupporting_performPasteOfAttributedString_toRange(textPasteConfigurationSupporting: UITextPasteConfigurationSupporting, attributedString: NSAttributedString, textRange: UITextRange):UITextRange;
    // https://developer.apple.com/documentation/uikit/uitextpastedelegate/2909062-textpasteconfigurationsupporting
    textPasteConfigurationSupporting_shouldAnimatePasteOfAttributedString_toRange(textPasteConfigurationSupporting: UITextPasteConfigurationSupporting, attributedString: NSAttributedString, textRange: UITextRange):boolean;
  }
}
declare namespace cocoascript {
  /**
   * Information about focusing animations being performed by the system.
   * https://developer.apple.com/documentation/uikit/uifocusanimationcontext
   */
  interface UIFocusAnimationContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uifocusanimationcontext/2887568-duration
    duration(): NSTimeInterval;
    setDuration(value: NSTimeInterval): void;
  }
}
declare namespace cocoascript {
  /**
   * To respond to UIKit dynamic item collisions, configure a custom class to adopt the
   * https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate
   */
  interface UICollisionBehaviorDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624816-collisionbehavior
    collisionBehavior_beganContactForItem_withBoundaryIdentifier_atPoint(behavior: UICollisionBehavior, item: UIDynamicItem, identifier: NSCopying, p: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624835-collisionbehavior
    collisionBehavior_beganContactForItem_withItem_atPoint(behavior: UICollisionBehavior, item1: UIDynamicItem, item2: UIDynamicItem, p: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624834-collisionbehavior
    collisionBehavior_endedContactForItem_withBoundaryIdentifier(behavior: UICollisionBehavior, item: UIDynamicItem, identifier: NSCopying):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624833-collisionbehavior
    collisionBehavior_endedContactForItem_withItem(behavior: UICollisionBehavior, item1: UIDynamicItem, item2: UIDynamicItem):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods you implement to customize the behavior of a tab bar.
   * https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate
   */
  interface UITabBarControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621166-tabbarcontroller
    tabBarController_shouldSelectViewController(tabBarController: UITabBarController, viewController: UIViewController):boolean;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621173-tabbarcontroller
    tabBarController_didSelectViewController(tabBarController: UITabBarController, viewController: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621179-tabbarcontroller
    tabBarController_willBeginCustomizingViewControllers(tabBarController: UITabBarController, viewControllers: UIViewController):void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621178-tabbarcontroller
    tabBarController_willEndCustomizingViewControllers_changed(tabBarController: UITabBarController, viewControllers: UIViewController, changed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621168-tabbarcontroller
    tabBarController_didEndCustomizingViewControllers_changed(tabBarController: UITabBarController, viewControllers: UIViewController, changed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621180-tabbarcontrollersupportedinterfa
    tabBarControllerSupportedInterfaceOrientations(tabBarController: UITabBarController):UIInterfaceOrientationMask;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621176-tabbarcontrollerpreferredinterfa
    tabBarControllerPreferredInterfaceOrientationForPresentation(tabBarController: UITabBarController):UIInterfaceOrientation;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621167-tabbarcontroller
    tabBarController_animationControllerForTransitionFromViewController_toViewController(tabBarController: UITabBarController, fromVC: UIViewController, toVC: UIViewController):UIViewControllerAnimatedTransitioning;
    // https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621170-tabbarcontroller
    tabBarController_interactionControllerForAnimationController(tabBarController: UITabBarController, animationController: UIViewControllerAnimatedTransitioning):UIViewControllerInteractiveTransitioning;
  }
}
declare namespace cocoascript {
  /**
   * The interface for describing the attributes of a drag activity originating in a text view.
   * https://developer.apple.com/documentation/uikit/uitextdragrequest
   */
  interface UITextDragRequest extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextdragrequest/2890912-existingitems
    existingItems(): UIDragItem;
    setExistingItems(value: UIDragItem): void;
    // https://developer.apple.com/documentation/uikit/uitextdragrequest/2890900-suggesteditems
    suggestedItems(): UIDragItem;
    setSuggestedItems(value: UIDragItem): void;
    // https://developer.apple.com/documentation/uikit/uitextdragrequest/2890901-dragrange
    dragRange(): UITextRange;
    setDragRange(value: UITextRange): void;
    // https://developer.apple.com/documentation/uikit/uitextdragrequest/2890906-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextdragrequest/2890910-dragsession
    dragSession(): UIDragSession;
    setDragSession(value: UIDragSession): void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for initiating drags from a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdragdelegate
   */
  interface UITableViewDragDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897492-tableview
    tableView_itemsForBeginningDragSession_atIndexPath(tableView: UITableView, session: UIDragSession, indexPath: NSIndexPath):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897293-tableview
    tableView_itemsForAddingToDragSession_atIndexPath_point(tableView: UITableView, session: UIDragSession, indexPath: NSIndexPath, point: CGPoint):UIDragItem;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897382-tableview
    tableView_dragSessionWillBegin(tableView: UITableView, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897428-tableview
    tableView_dragSessionDidEnd(tableView: UITableView, session: UIDragSession):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2919982-tableview
    tableView_dragSessionIsRestrictedToDraggingApplication(tableView: UITableView, session: UIDragSession):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2919983-tableview
    tableView_dragSessionAllowsMoveOperation(tableView: UITableView, session: UIDragSession):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897353-tableview
    tableView_dragPreviewParametersForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UIDragPreviewParameters;
  }
}
declare namespace cocoascript {
  /**
   * The methods adopted by the object you use to manage data and provide cells for a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdatasource
   */
  interface UICollectionViewDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618058-collectionview
    collectionView_numberOfItemsInSection(collectionView: UICollectionView, section: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618023-numberofsectionsincollectionview
    numberOfSectionsInCollectionView(collectionView: UICollectionView):NSInteger;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618029-collectionview
    collectionView_cellForItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):UICollectionViewCell;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618037-collectionview
    collectionView_viewForSupplementaryElementOfKind_atIndexPath(collectionView: UICollectionView, kind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionReusableView;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618015-collectionview
    collectionView_canMoveItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/1618064-collectionview
    collectionView_moveItemAtIndexPath_toIndexPath(collectionView: UICollectionView, sourceIndexPath: NSIndexPath, destinationIndexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/2851455-indextitlesforcollectionview
    indexTitlesForCollectionView(collectionView: UICollectionView):NSString;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasource/2851456-collectionview
    collectionView_indexPathForIndexTitle_atIndex(collectionView: UICollectionView, title: string | cocoascript.NSString, index: NSInteger):NSIndexPath;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that provide contextual information for transition animations between view controllers.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning
   */
  interface UIViewControllerContextTransitioning extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622045-containerview
    containerView(): UIView;
    setContainerView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622043-viewcontrollerforkey
    viewControllerForKey(key: UITransitionContextViewControllerKey):UIViewController;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622055-viewforkey
    viewForKey(key: UITransitionContextViewKey):UIView;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622033-initialframeforviewcontroller
    initialFrameForViewController(vc: UIViewController):CGRect;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622024-finalframeforviewcontroller
    finalFrameForViewController(vc: UIViewController):CGRect;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/2097569-animated
    animated(): boolean;
    setAnimated(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/2097570-interactive
    interactive(): boolean;
    setInteractive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622049-presentationstyle
    presentationStyle(): UIModalPresentationStyle;
    setPresentationStyle(value: UIModalPresentationStyle): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622042-completetransition
    completeTransition(didComplete: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622025-updateinteractivetransition
    updateInteractiveTransition(percentComplete: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1829437-pauseinteractivetransition
    pauseInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622056-finishinteractivetransition
    finishInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622038-cancelinteractivetransition
    cancelInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622039-transitionwascancelled
    transitionWasCancelled(): boolean;
    setTransitionWasCancelled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollercontexttransitioning/1622036-targettransform
    targetTransform(): CGAffineTransform;
    setTargetTransform(value: CGAffineTransform): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that enable an object (such as a navigation controller) to drive a view controller transition.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollerinteractivetransitioning
   */
  interface UIViewControllerInteractiveTransitioning extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerinteractivetransitioning/1622028-startinteractivetransition
    startInteractiveTransition(transitionContext: UIViewControllerContextTransitioning):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerinteractivetransitioning/1829433-wantsinteractivestart
    wantsInteractiveStart(): boolean;
    setWantsInteractiveStart(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerinteractivetransitioning/1622027-completioncurve
    completionCurve(): UIViewAnimationCurve;
    setCompletionCurve(value: UIViewAnimationCurve): void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollerinteractivetransitioning/1622031-completionspeed
    completionSpeed(): CGFloat;
    setCompletionSpeed(value: CGFloat): void;
  }
}
declare namespace cocoascript {
  /**
   * An interface for specifying output from a focus debugger object.
   * https://developer.apple.com/documentation/uikit/uifocusdebuggeroutput
   */
  interface UIFocusDebuggerOutput extends NSObject {
  }
}
declare namespace cocoascript {
  /**
   * The protocol you implement to provide additional information to, and receive notifications from, the CloudKit sharing controller.
   * https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate
   */
  interface UICloudSharingControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/2274280-itemtitleforcloudsharingcontroll
    itemTitleForCloudSharingController(csc: UICloudSharingController):NSString;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/2274281-itemtypeforcloudsharingcontrolle
    itemTypeForCloudSharingController(csc: UICloudSharingController):NSString;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/2274282-itemthumbnaildataforcloudsharing
    itemThumbnailDataForCloudSharingController(csc: UICloudSharingController):NSData;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649606-cloudsharingcontroller
    cloudSharingController_failedToSaveShareWithError(csc: UICloudSharingController, error: NSError):void;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649604-cloudsharingcontrollerdidstopsha
    cloudSharingControllerDidStopSharing(csc: UICloudSharingController):void;
    // https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649605-cloudsharingcontrollerdidsavesha
    cloudSharingControllerDidSaveShare(csc: UICloudSharingController):void;
  }
}
declare namespace cocoascript {
  /**
   * Methods for managing selections, configuring section headers and footers, deleting and reordering cells, and performing other actions in a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdelegate
   */
  interface UITableViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614883-tableview
    tableView_willDisplayCell_forRowAtIndexPath(tableView: UITableView, cell: UITableViewCell, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614966-tableview
    tableView_indentationLevelForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):NSInteger;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/2897335-tableview
    tableView_shouldSpringLoadRowAtIndexPath_withContext(tableView: UITableView, indexPath: NSIndexPath, context: UISpringLoadedInteractionContext):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614943-tableview
    tableView_willSelectRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614877-tableview
    tableView_didSelectRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614977-tableview
    tableView_willDeselectRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614916-tableview
    tableView_didDeselectRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183943-tableview
    tableView_shouldBeginMultipleSelectionInteractionAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183942-tableview
    tableView_didBeginMultipleSelectionInteractionAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3183944-tableviewdidendmultipleselection
    tableViewDidEndMultipleSelectionInteraction(tableView: UITableView):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614901-tableview
    tableView_viewForHeaderInSection(tableView: UITableView, section: NSInteger):UIView;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614946-tableview
    tableView_viewForFooterInSection(tableView: UITableView, section: NSInteger):UIView;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614905-tableview
    tableView_willDisplayHeaderView_forSection(tableView: UITableView, view: UIView, section: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614941-tableview
    tableView_willDisplayFooterView_forSection(tableView: UITableView, view: UIView, section: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614998-tableview
    tableView_heightForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614855-tableview
    tableView_heightForHeaderInSection(tableView: UITableView, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614967-tableview
    tableView_heightForFooterInSection(tableView: UITableView, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614926-tableview
    tableView_estimatedHeightForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614854-tableview
    tableView_estimatedHeightForHeaderInSection(tableView: UITableView, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614939-tableview
    tableView_estimatedHeightForFooterInSection(tableView: UITableView, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614948-tableview
    tableView_accessoryTypeForRowWithIndexPath(tableView: UITableView, indexPath: NSIndexPath):UITableViewCellAccessoryType;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614996-tableview
    tableView_accessoryButtonTappedForRowWithIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3295956-tableview
    tableView_contextMenuConfigurationForRowAtIndexPath_point(tableView: UITableView, indexPath: NSIndexPath, point: CGPoint):UIContextMenuConfiguration;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3295957-tableview
    tableView_previewForDismissingContextMenuWithConfiguration(tableView: UITableView, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3295958-tableview
    tableView_previewForHighlightingContextMenuWithConfiguration(tableView: UITableView, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3601231-tableview
    tableView_willDisplayContextMenuWithConfiguration_animator(tableView: UITableView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3601232-tableview
    tableView_willEndContextMenuInteractionWithConfiguration_animator(tableView: UITableView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3375810-tableview
    tableView_willPerformPreviewActionForMenuWithConfiguration_animator(tableView: UITableView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionCommitAnimating):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/2902366-tableview
    tableView_leadingSwipeActionsConfigurationForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UISwipeActionsConfiguration;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/2902367-tableview
    tableView_trailingSwipeActionsConfigurationForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UISwipeActionsConfiguration;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614950-tableview
    tableView_shouldShowMenuForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614898-tableview
    tableView_canPerformAction_forRowAtIndexPath_withSender(tableView: UITableView, action: SEL, indexPath: NSIndexPath, sender: UITableViewDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614980-tableview
    tableView_performAction_forRowAtIndexPath_withSender(tableView: UITableView, action: SEL, indexPath: NSIndexPath, sender: UITableViewDelegate):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614956-tableview
    tableView_editActionsForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UITableViewRowAction;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614988-tableview
    tableView_shouldHighlightRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614982-tableview
    tableView_didHighlightRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614868-tableview
    tableView_didUnhighlightRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614907-tableview
    tableView_willBeginEditingRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614963-tableview
    tableView_didEndEditingRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614869-tableview
    tableView_editingStyleForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):UITableViewCellEditingStyle;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614970-tableview
    tableView_titleForDeleteConfirmationButtonForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):NSString;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614873-tableview
    tableView_shouldIndentWhileEditingRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614953-tableview
    tableView_targetIndexPathForMoveFromRowAtIndexPath_toProposedIndexPath(tableView: UITableView, sourceIndexPath: NSIndexPath, proposedDestinationIndexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614870-tableview
    tableView_didEndDisplayingCell_forRowAtIndexPath(tableView: UITableView, cell: UITableViewCell, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614971-tableview
    tableView_didEndDisplayingHeaderView_forSection(tableView: UITableView, view: UIView, section: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614856-tableview
    tableView_didEndDisplayingFooterView_forSection(tableView: UITableView, view: UIView, section: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614973-tableview
    tableView_canFocusRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614949-tableview
    tableView_shouldUpdateFocusInContext(tableView: UITableView, context: UITableViewFocusUpdateContext):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614945-tableview
    tableView_didUpdateFocusInContext_withAnimationCoordinator(tableView: UITableView, context: UITableViewFocusUpdateContext, coordinator: UIFocusAnimationCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614929-indexpathforpreferredfocusedview
    indexPathForPreferredFocusedViewInTableView(tableView: UITableView):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uitableviewdelegate/3752212-tableview
    tableView_selectionFollowsFocusForRowAtIndexPath(tableView: UITableView, indexPath: NSIndexPath):boolean;
  }
}
declare namespace cocoascript {
  /**
   * The data associated with an item being dropped into the table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdropitem
   */
  interface UITableViewDropItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897402-dragitem
    dragItem(): UIDragItem;
    setDragItem(value: UIDragItem): void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897464-previewsize
    previewSize(): CGSize;
    setPreviewSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897479-sourceindexpath
    sourceIndexPath(): NSIndexPath;
    setSourceIndexPath(value: NSIndexPath): void;
  }
}
declare namespace cocoascript {
  /**
   * An interface for implementing custom animator objects.
   * https://developer.apple.com/documentation/uikit/uiviewanimating
   */
  interface UIViewAnimating extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649786-startanimation
    startAnimation():void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/2097540-startanimationafterdelay
    startAnimationAfterDelay(delay: NSTimeInterval):void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649843-pauseanimation
    pauseAnimation():void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649750-stopanimation
    stopAnimation(withoutFinishing: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649796-finishanimationatposition
    finishAnimationAtPosition(finalPosition: UIViewAnimatingPosition):void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649787-fractioncomplete
    fractionComplete(): CGFloat;
    setFractionComplete(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649804-reversed
    reversed(): boolean;
    setReversed(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649743-state
    state(): UIViewAnimatingState;
    setState(value: UIViewAnimatingState): void;
    // https://developer.apple.com/documentation/uikit/uiviewanimating/1649785-running
    running(): boolean;
    setRunning(value: boolean): void;
  }
}
declare namespace cocoascript {
  /**
   * A protocol that provides advance warning of the data requirements for a collection view, allowing the triggering of asynchronous data load operations.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching
   */
  interface UICollectionViewDataSourcePrefetching extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching/1771767-collectionview
    collectionView_prefetchItemsAtIndexPaths(collectionView: UICollectionView, indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching/1771769-collectionview
    collectionView_cancelPrefetchingForItemsAtIndexPaths(collectionView: UICollectionView, indexPaths: NSIndexPath):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for configuring a text view’s drop behavior.
   * https://developer.apple.com/documentation/uikit/uitextdropdelegate
   */
  interface UITextDropDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890851-textdroppableview
    textDroppableView_proposalForDrop(textDroppableView: UITextDroppable, drop: UITextDropRequest):UITextDropProposal;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890856-textdroppableview
    textDroppableView_willBecomeEditableForDrop(textDroppableView: UITextDroppable, drop: UITextDropRequest):UITextDropEditability;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890850-textdroppableview
    textDroppableView_dropSessionDidEnter(textDroppableView: UITextDroppable, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890854-textdroppableview
    textDroppableView_dropSessionDidExit(textDroppableView: UITextDroppable, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890861-textdroppableview
    textDroppableView_dropSessionDidUpdate(textDroppableView: UITextDroppable, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890857-textdroppableview
    textDroppableView_dropSessionDidEnd(textDroppableView: UITextDroppable, session: UIDropSession):void;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890858-textdroppableview
    textDroppableView_willPerformDrop(textDroppableView: UITextDroppable, drop: UITextDropRequest):void;
    // https://developer.apple.com/documentation/uikit/uitextdropdelegate/2909033-textdroppableview
    textDroppableView_previewForDroppingAllItemsWithDefault(textDroppableView: UITextDroppable, defaultPreview: UITargetedDragPreview):UITargetedDragPreview;
  }
}
declare namespace cocoascript {
  /**
   * The protocol you implement to respond as the user interacts with the document browser.
   * https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate
   */
  interface UIDocumentBrowserViewControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874199-documentbrowser
    documentBrowser_didRequestDocumentCreationWithHandler(controller: UIDocumentBrowserViewController, importHandler: UIDocumentBrowserImportMode):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874196-documentbrowser
    documentBrowser_didImportDocumentAtURL_toDestinationURL(controller: UIDocumentBrowserViewController, sourceURL: NSURL, destinationURL: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874190-documentbrowser
    documentBrowser_failedToImportDocumentAtURL_error(controller: UIDocumentBrowserViewController, documentURL: NSURL, error: NSError):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/3019588-documentbrowser
    documentBrowser_didPickDocumentsAtURLs(controller: UIDocumentBrowserViewController, documentURLs: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874186-documentbrowser
    documentBrowser_willPresentActivityViewController(controller: UIDocumentBrowserViewController, activityViewController: UIActivityViewController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874194-documentbrowser
    documentBrowser_applicationActivitiesForDocumentURLs(controller: UIDocumentBrowserViewController, documentURLs: NSURL):UIActivity;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874187-documentbrowser
    documentBrowser_didPickDocumentURLs(controller: UIDocumentBrowserViewController, documentURLs: NSURL):void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods for implementing the animations for a custom view controller transition.
   * https://developer.apple.com/documentation/uikit/uiviewcontrolleranimatedtransitioning
   */
  interface UIViewControllerAnimatedTransitioning extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewcontrolleranimatedtransitioning/1622061-animatetransition
    animateTransition(transitionContext: UIViewControllerContextTransitioning):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrolleranimatedtransitioning/1622059-animationended
    animationEnded(transitionCompleted: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrolleranimatedtransitioning/1622032-transitionduration
    transitionDuration(transitionContext: UIViewControllerContextTransitioning):NSTimeInterval;
    // https://developer.apple.com/documentation/uikit/uiviewcontrolleranimatedtransitioning/1829434-interruptibleanimatorfortransiti
    interruptibleAnimatorForTransition(transitionContext: UIViewControllerContextTransitioning):UIViewImplicitlyAnimating;
  }
}
declare namespace cocoascript {
  /**
   * A protocol used to provide information about the layout's container and environment traits, such as size classes and display scale factor.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment
   */
  interface NSCollectionLayoutEnvironment extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment/3199073-container
    container(): NSCollectionLayoutContainer;
    setContainer(value: NSCollectionLayoutContainer): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment/3199074-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
  }
}
declare namespace cocoascript {
  /**
   * Use a navigation controller delegate (a custom object that implements this protocol) to modify behavior when a view controller is pushed or popped from the navigation stack of a
   * https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate
   */
  interface UINavigationControllerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621878-navigationcontroller
    navigationController_willShowViewController_animated(navigationController: UINavigationController, viewController: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621848-navigationcontroller
    navigationController_didShowViewController_animated(navigationController: UINavigationController, viewController: UIViewController, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621846-navigationcontroller
    navigationController_animationControllerForOperation_fromViewController_toViewController(navigationController: UINavigationController, operation: UINavigationControllerOperation, fromVC: UIViewController, toVC: UIViewController):UIViewControllerAnimatedTransitioning;
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621880-navigationcontroller
    navigationController_interactionControllerForAnimationController(navigationController: UINavigationController, animationController: UIViewControllerAnimatedTransitioning):UIViewControllerInteractiveTransitioning;
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621864-navigationcontrollerpreferredint
    navigationControllerPreferredInterfaceOrientationForPresentation(navigationController: UINavigationController):UIInterfaceOrientation;
    // https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621884-navigationcontrollersupportedint
    navigationControllerSupportedInterfaceOrientations(navigationController: UINavigationController):UIInterfaceOrientationMask;
  }
}
declare namespace cocoascript {
  /**
   * The
   * https://developer.apple.com/documentation/uikit/uitabbardelegate
   */
  interface UITabBarDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitabbardelegate/1623451-tabbar
    tabBar_willBeginCustomizingItems(tabBar: UITabBar, items: UITabBarItem):void;
    // https://developer.apple.com/documentation/uikit/uitabbardelegate/1623471-tabbar
    tabBar_didBeginCustomizingItems(tabBar: UITabBar, items: UITabBarItem):void;
    // https://developer.apple.com/documentation/uikit/uitabbardelegate/1623464-tabbar
    tabBar_willEndCustomizingItems_changed(tabBar: UITabBar, items: UITabBarItem, changed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbardelegate/1623447-tabbar
    tabBar_didEndCustomizingItems_changed(tabBar: UITabBar, items: UITabBarItem, changed: boolean):void;
    // https://developer.apple.com/documentation/uikit/uitabbardelegate/1623463-tabbar
    tabBar_didSelectItem(tabBar: UITabBar, item: UITabBarItem):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for obtaining information about, and interacting with, a text item for pasting or dropping.
   * https://developer.apple.com/documentation/uikit/uitextpasteitem
   */
  interface UITextPasteItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887489-itemprovider
    itemProvider(): NSItemProvider;
    setItemProvider(value: NSItemProvider): void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887485-localobject
    localObject(): id;
    setLocalObject(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887486-defaultattributes
    defaultAttributes(): id;
    setDefaultAttributes(value: id): void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887487-setstringresult
    setStringResult(string: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887482-setattributedstringresult
    setAttributedStringResult(string: NSAttributedString):void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887484-setattachmentresult
    setAttachmentResult(textAttachment: NSTextAttachment):void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2919974-setdefaultresult
    setDefaultResult():void;
    // https://developer.apple.com/documentation/uikit/uitextpasteitem/2887491-setnoresult
    setNoResult():void;
  }
}
declare namespace cocoascript {
  /**
   * The core methods you use to respond to life-cycle events occurring within a scene.
   * https://developer.apple.com/documentation/uikit/uiscenedelegate
   */
  interface UISceneDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197914-scene
    scene_willConnectToSession_options(scene: UIScene, session: UISceneSession, connectionOptions: UISceneConnectionOptions):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197916-scenediddisconnect
    sceneDidDisconnect(scene: UIScene):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197918-scenewillenterforeground
    sceneWillEnterForeground(scene: UIScene):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197915-scenedidbecomeactive
    sceneDidBecomeActive(scene: UIScene):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197919-scenewillresignactive
    sceneWillResignActive(scene: UIScene):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3197917-scenedidenterbackground
    sceneDidEnterBackground(scene: UIScene):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238059-scene
    scene_openURLContexts(scene: UIScene, URLContexts: UIOpenURLContext):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238060-scene
    scene_willContinueUserActivityWithType(scene: UIScene, userActivityType: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238056-scene
    scene_continueUserActivity(scene: UIScene, userActivity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238057-scene
    scene_didFailToContinueUserActivityWithType_error(scene: UIScene, userActivityType: string | cocoascript.NSString, error: NSError):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238061-staterestorationactivityforscene
    stateRestorationActivityForScene(scene: UIScene):NSUserActivity;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3238058-scene
    scene_didUpdateUserActivity(scene: UIScene, userActivity: NSUserActivity):void;
    // https://developer.apple.com/documentation/uikit/uiscenedelegate/3821025-scene
    scene_restoreInteractionStateWithUserActivity(scene: UIScene, stateRestorationActivity: NSUserActivity):void;
  }
}
declare namespace cocoascript {
  /**
   * The requirements for a content view that you create using a configuration.
   * https://developer.apple.com/documentation/uikit/uicontentview
   */
  interface UIContentView extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontentview/3600489-configuration
    configuration(): UIContentConfiguration;
    setConfiguration(value: UIContentConfiguration): void;
  }
}
declare namespace cocoascript {
  /**
   * An interface for coordinating your custom drop-related actions with the table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator
   */
  interface UITableViewDropCoordinator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897439-items
    items(): UITableViewDropItem;
    setItems(value: UITableViewDropItem): void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897496-destinationindexpath
    destinationIndexPath(): NSIndexPath;
    setDestinationIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897301-dropitem
    dropItem_toRowAtIndexPath(dragItem: UIDragItem, indexPath: NSIndexPath):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2909061-dropitem
    dropItem_intoRowAtIndexPath_rect(dragItem: UIDragItem, indexPath: NSIndexPath, rect: CGRect):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897290-dropitem
    dropItem_toTarget(dragItem: UIDragItem, target: UIDragPreviewTarget):UIDragAnimating;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2921667-dropitem
    dropItem_toPlaceholder(dragItem: UIDragItem, placeholder: UITableViewDropPlaceholder):UITableViewDropPlaceholderContext;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897324-session
    session(): UIDropSession;
    setSession(value: UIDropSession): void;
    // https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897451-proposal
    proposal(): UITableViewDropProposal;
    setProposal(value: UITableViewDropProposal): void;
  }
}
declare namespace cocoascript {
  /**
   * A protocol used to provide information about the size and content insets of a layout's container.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer
   */
  interface NSCollectionLayoutContainer extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199047-contentsize
    contentSize(): CGSize;
    setContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199049-effectivecontentsize
    effectiveContentSize(): CGSize;
    setEffectiveContentSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199046-contentinsets
    contentInsets(): NSDirectionalEdgeInsets;
    setContentInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199048-effectivecontentinsets
    effectiveContentInsets(): NSDirectionalEdgeInsets;
    setEffectiveContentInsets(value: NSDirectionalEdgeInsets): void;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods for tracking when the user selects a document or destination, or cancels the operation.
   * https://developer.apple.com/documentation/uikit/uidocumentpickerdelegate
   */
  interface UIDocumentPickerDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentpickerdelegate/2902364-documentpicker
    documentPicker_didPickDocumentsAtURLs(controller: UIDocumentPickerViewController, urls: NSURL):void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerdelegate/1618679-documentpickerwascancelled
    documentPickerWasCancelled(controller: UIDocumentPickerViewController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentpickerdelegate/1618680-documentpicker
    documentPicker_didPickDocumentAtURL(controller: UIDocumentPickerViewController, url: NSURL):void;
  }
}
declare namespace cocoascript {
  /**
   * The methods declared by the
   * https://developer.apple.com/documentation/uikit/uiscrollviewdelegate
   */
  interface UIScrollViewDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619392-scrollviewdidscroll
    scrollViewDidScroll(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619394-scrollviewwillbegindragging
    scrollViewWillBeginDragging(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619385-scrollviewwillenddragging
    scrollViewWillEndDragging_withVelocity_targetContentOffset(scrollView: UIScrollView, velocity: CGPoint, targetContentOffset: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619436-scrollviewdidenddragging
    scrollViewDidEndDragging_willDecelerate(scrollView: UIScrollView, decelerate: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619378-scrollviewshouldscrolltotop
    scrollViewShouldScrollToTop(scrollView: UIScrollView):boolean;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619382-scrollviewdidscrolltotop
    scrollViewDidScrollToTop(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619386-scrollviewwillbegindecelerating
    scrollViewWillBeginDecelerating(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619417-scrollviewdidenddecelerating
    scrollViewDidEndDecelerating(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619426-viewforzoominginscrollview
    viewForZoomingInScrollView(scrollView: UIScrollView):UIView;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619396-scrollviewwillbeginzooming
    scrollViewWillBeginZooming_withView(scrollView: UIScrollView, view: UIView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619407-scrollviewdidendzooming
    scrollViewDidEndZooming_withView_atScale(scrollView: UIScrollView, view: UIView, scale: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619409-scrollviewdidzoom
    scrollViewDidZoom(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619379-scrollviewdidendscrollinganimati
    scrollViewDidEndScrollingAnimation(scrollView: UIScrollView):void;
    // https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/2902256-scrollviewdidchangeadjustedconte
    scrollViewDidChangeAdjustedContentInset(scrollView: UIScrollView):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface for specifying the attributes of a drop request for a text view.
   * https://developer.apple.com/documentation/uikit/uitextdroprequest
   */
  interface UITextDropRequest extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextdroprequest/2890859-dropposition
    dropPosition(): UITextPosition;
    setDropPosition(value: UITextPosition): void;
    // https://developer.apple.com/documentation/uikit/uitextdroprequest/2890844-sameview
    sameView(): boolean;
    setSameView(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextdroprequest/2890845-suggestedproposal
    suggestedProposal(): UITextDropProposal;
    setSuggestedProposal(value: UITextDropProposal): void;
    // https://developer.apple.com/documentation/uikit/uitextdroprequest/2890853-dropsession
    dropSession(): UIDropSession;
    setDropSession(value: UIDropSession): void;
  }
}
declare namespace cocoascript {
  /**
   * The requirements for an object that encapsulates a view’s state.
   * https://developer.apple.com/documentation/uikit/uiconfigurationstate
   */
  interface UIConfigurationState extends NSCopying {
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600978-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600478-customstateforkey
    customStateForKey(key: UIConfigurationStateCustomKey):UIConfigurationState;
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600481-setcustomstate
    setCustomState_forKey(customState: UIConfigurationState, key: UIConfigurationStateCustomKey):void;
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600480-objectforkeyedsubscript
    objectForKeyedSubscript(key: UIConfigurationStateCustomKey):UIConfigurationState;
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600482-setobject
    setObject_forKeyedSubscript(obj: UIConfigurationState, key: UIConfigurationStateCustomKey):void;
    // https://developer.apple.com/documentation/uikit/uiconfigurationstate/3600479-initwithtraitcollection
    initWithTraitCollection(traitCollection: UITraitCollection):UIConfigurationState;
  }
}
declare namespace cocoascript {
  /**
   * A set of methods that you must implement to track user interactions with a document menu view controller.
   * https://developer.apple.com/documentation/uikit/uidocumentmenudelegate
   */
  interface UIDocumentMenuDelegate extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentmenudelegate/1614188-documentmenu
    documentMenu_didPickDocumentPicker(documentMenu: UIDocumentMenuViewController, documentPicker: UIDocumentPickerViewController):void;
    // https://developer.apple.com/documentation/uikit/uidocumentmenudelegate/1614190-documentmenuwascancelled
    documentMenuWasCancelled(documentMenu: UIDocumentMenuViewController):void;
  }
}
declare namespace cocoascript {
  /**
   * A selectable search parameter.
   * https://developer.apple.com/documentation/uikit/uisearchsuggestion
   */
  interface UISearchSuggestion extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchsuggestion/3584826-localizedsuggestion
    localizedSuggestion(): string | cocoascript.NSString;
    setLocalizedSuggestion(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestion/3584825-localizeddescription
    localizedDescription(): string | cocoascript.NSString;
    setLocalizedDescription(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestion/3584824-iconimage
    iconImage(): UIImage;
    setIconImage(value: UIImage): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimodalpresentationstyle
  type UIModalPresentationStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimodaltransitionstyle
  type UIModalTransitionStyle = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiviewcontrollershowdetailtargetdidchangenotification
declare const UIViewControllerShowDetailTargetDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiviewcontrollerhierarchyinconsistencyexception
declare const UIViewControllerHierarchyInconsistencyException: cocoascript.NSExceptionName;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsremotenotificationkey
declare const UIApplicationLaunchOptionsRemoteNotificationKey: cocoascript.UIApplicationLaunchOptionsKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionskey
  type UIApplicationLaunchOptionsKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uiapplicationdidfinishlaunchingnotification
declare const UIApplicationDidFinishLaunchingNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationdidbecomeactivenotification
declare const UIApplicationDidBecomeActiveNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationdidenterbackgroundnotification
declare const UIApplicationDidEnterBackgroundNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationwillenterforegroundnotification
declare const UIApplicationWillEnterForegroundNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationwillresignactivenotification
declare const UIApplicationWillResignActiveNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationwillterminatenotification
declare const UIApplicationWillTerminateNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationdidreceivememorywarningnotification
declare const UIApplicationDidReceiveMemoryWarningNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationsignificanttimechangenotification
declare const UIApplicationSignificantTimeChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibackgroundfetchresult
  type UIBackgroundFetchResult = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionskey
  type UIApplicationOpenURLOptionsKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationextensionpointidentifier
  type UIApplicationExtensionPointIdentifier = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uiapplicationkeyboardextensionpointidentifier
declare const UIApplicationKeyboardExtensionPointIdentifier: cocoascript.UIApplicationExtensionPointIdentifier;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiinterfaceorientation
  type UIInterfaceOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiinterfaceorientationmask
  type UIInterfaceOrientationMask = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uiapplicationinvalidinterfaceorientationexception
declare const UIApplicationInvalidInterfaceOrientationException: cocoascript.NSExceptionName;
declare namespace cocoascript {
  /**
   * Additional methods that you use to manage app-specific tasks occurring in a scene.
   * https://developer.apple.com/documentation/uikit/uiwindowscenedelegate
   */
  interface UIWindowSceneDelegate extends UISceneDelegate {
    // https://developer.apple.com/documentation/uikit/uiwindowscenedelegate/3198093-window
    window(): UIWindow;
    setWindow(value: UIWindow): void;
    // https://developer.apple.com/documentation/uikit/uiwindowscenedelegate/3198094-windowscene
    windowScene_didUpdateCoordinateSpace_interfaceOrientation_traitCollection(windowScene: UIWindowScene, previousCoordinateSpace: UICoordinateSpace, previousInterfaceOrientation: UIInterfaceOrientation, previousTraitCollection: UITraitCollection):void;
    // https://developer.apple.com/documentation/uikit/uiwindowscenedelegate/3238088-windowscene
    windowScene_performActionForShortcutItem_completionHandler(windowScene: UIWindowScene, shortcutItem: UIApplicationShortcutItem, completionHandler: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiwindowscenedelegate/3238089-windowscene
    windowScene_userDidAcceptCloudKitShareWithMetadata(windowScene: UIWindowScene, cloudKitShareMetadata: CKShareMetadata):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that represents one instance of your app’s user interface.
   * https://developer.apple.com/documentation/uikit/uiscene
   */
  interface UIScene extends UIResponder {
    // https://developer.apple.com/documentation/uikit/uiscene/3197910-initwithsession
    initWithSession_connectionOptions(session: UISceneSession, connectionOptions: UISceneConnectionOptions):UIScene;
    // https://developer.apple.com/documentation/uikit/uiscene/3197909-delegate
    delegate(): UISceneDelegate;
    setDelegate(value: UISceneDelegate): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3197908-activationstate
    activationState(): UISceneActivationState;
    setActivationState(value: UISceneActivationState): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3197912-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3750911-subtitle
    subtitle(): string | cocoascript.NSString;
    setSubtitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3238055-activationconditions
    activationConditions(): UISceneActivationConditions;
    setActivationConditions(value: UISceneActivationConditions): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3197911-session
    session(): UISceneSession;
    setSession(value: UISceneSession): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3327319-openurl
    openURL_options_completionHandler(url: NSURL, options: UISceneOpenExternalURLOptions, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uiscene/3601229-pointerlockstate
    pointerLockState(): UIPointerLockState;
    setPointerLockState(value: UIPointerLockState): void;
    // https://developer.apple.com/documentation/uikit/uiscene/3821026-completestaterestoration
    completeStateRestoration():void;
    // https://developer.apple.com/documentation/uikit/uiscene/3821027-extendstaterestoration
    extendStateRestoration():void;
    //
    alloc():UIScene;
    //
    init():UIScene;
  }
}

declare const UIScene: cocoascript.UIScene;
declare namespace cocoascript {
  /**
   * Information about the objects and storyboard for UKit to use when creating a particular scene.
   * https://developer.apple.com/documentation/uikit/uisceneconfiguration
   */
  interface UISceneConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197947-configurationwithname
    configurationWithName_sessionRole(name: string | cocoascript.NSString, sessionRole: UISceneSessionRole):UISceneConfiguration;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197949-initwithname
    initWithName_sessionRole(name: string | cocoascript.NSString, sessionRole: UISceneSessionRole):UISceneConfiguration;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197952-sceneclass
    sceneClass(): Class;
    setSceneClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197948-delegateclass
    delegateClass(): Class;
    setDelegateClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197953-storyboard
    storyboard(): UIStoryboard;
    setStoryboard(value: UIStoryboard): void;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197950-name
    name(): string | cocoascript.NSString;
    setName(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisceneconfiguration/3197951-role
    role(): UISceneSessionRole;
    setRole(value: UISceneSessionRole): void;
    //
    alloc():UISceneConfiguration;
    //
    init():UISceneConfiguration;
  }
}

declare const UISceneConfiguration: cocoascript.UISceneConfiguration;
declare namespace cocoascript {
  /**
   * An object that contains information about one of your app's scenes.
   * https://developer.apple.com/documentation/uikit/uiscenesession
   */
  interface UISceneSession extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197958-scene
    scene(): UIScene;
    setScene(value: UIScene): void;
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197957-role
    role(): UISceneSessionRole;
    setRole(value: UISceneSessionRole): void;
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197955-configuration
    configuration(): UISceneConfiguration;
    setConfiguration(value: UISceneConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197956-persistentidentifier
    persistentIdentifier(): string | cocoascript.NSString;
    setPersistentIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197959-staterestorationactivity
    stateRestorationActivity(): NSUserActivity;
    setStateRestorationActivity(value: NSUserActivity): void;
    // https://developer.apple.com/documentation/uikit/uiscenesession/3197960-userinfo
    userInfo(): id;
    setUserInfo(value: id): void;
    //
    alloc():UISceneSession;
    //
    init():UISceneSession;
  }
}

declare const UISceneSession: cocoascript.UISceneSession;
declare namespace cocoascript {
  /**
   * The set of conditions that define when UIKit activates the current scene.
   * https://developer.apple.com/documentation/uikit/uisceneactivationconditions
   */
  interface UISceneActivationConditions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneactivationconditions/3238065-init
    init():UISceneActivationConditions;
    // https://developer.apple.com/documentation/uikit/uisceneactivationconditions/3238066-initwithcoder
    initWithCoder(aDecoder: NSCoder):UISceneActivationConditions;
    // https://developer.apple.com/documentation/uikit/uisceneactivationconditions/3238067-preferstoactivatefortargetconten
    prefersToActivateForTargetContentIdentifierPredicate(): NSPredicate;
    setPrefersToActivateForTargetContentIdentifierPredicate(value: NSPredicate): void;
    // https://developer.apple.com/documentation/uikit/uisceneactivationconditions/3238064-canactivatefortargetcontentident
    canActivateForTargetContentIdentifierPredicate(): NSPredicate;
    setCanActivateForTargetContentIdentifierPredicate(value: NSPredicate): void;
    //
    alloc():UISceneActivationConditions;
    //
    init():UISceneActivationConditions;
  }
}

declare const UISceneActivationConditions: cocoascript.UISceneActivationConditions;
declare namespace cocoascript {
  /**
   * An object that contains information to use when removing a window scene from your app.
   * https://developer.apple.com/documentation/uikit/uiwindowscenedestructionrequestoptions
   */
  interface UIWindowSceneDestructionRequestOptions extends UISceneDestructionRequestOptions {
    // https://developer.apple.com/documentation/uikit/uiwindowscenedestructionrequestoptions/3197964-windowdismissalanimation
    windowDismissalAnimation(): UIWindowSceneDismissalAnimation;
    setWindowDismissalAnimation(value: UIWindowSceneDismissalAnimation): void;
    //
    alloc():UIWindowSceneDestructionRequestOptions;
    //
    init():UIWindowSceneDestructionRequestOptions;
  }
}

declare const UIWindowSceneDestructionRequestOptions: cocoascript.UIWindowSceneDestructionRequestOptions;
declare namespace cocoascript {
  /**
   * A system-provided object that contains the information you need to open a single URL.
   * https://developer.apple.com/documentation/uikit/uiopenurlcontext
   */
  interface UIOpenURLContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiopenurlcontext/3238053-url
    URL(): NSURL;
    setURL(value: NSURL): void;
    // https://developer.apple.com/documentation/uikit/uiopenurlcontext/3238054-options
    options(): UISceneOpenURLOptions;
    setOptions(value: UISceneOpenURLOptions): void;
    //
    alloc():UIOpenURLContext;
    //
    init():UIOpenURLContext;
  }
}

declare const UIOpenURLContext: cocoascript.UIOpenURLContext;
declare namespace cocoascript {
  /**
   * Options you specify when asking a scene to open a URL.
   * https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions
   */
  interface UISceneOpenExternalURLOptions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions/3197941-universallinksonly
    universalLinksOnly(): boolean;
    setUniversalLinksOnly(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions/3727336-eventattribution
    eventAttribution(): UIEventAttribution;
    setEventAttribution(value: UIEventAttribution): void;
    //
    alloc():UISceneOpenExternalURLOptions;
    //
    init():UISceneOpenExternalURLOptions;
  }
}

declare const UISceneOpenExternalURLOptions: cocoascript.UISceneOpenExternalURLOptions;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisceneerrorcode
  type UISceneErrorCode = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uisceneerrordomain
declare const UISceneErrorDomain: cocoascript.NSErrorDomain;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiforcetouchcapability
  type UIForceTouchCapability = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiuserinterfacesizeclass
  type UIUserInterfaceSizeClass = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidisplaygamut
  type UIDisplayGamut = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The methods of the
   * https://developer.apple.com/documentation/uikit/uipopoverpresentationcontrollerdelegate
   */
  interface UIPopoverPresentationControllerDelegate extends UIAdaptivePresentationControllerDelegate {
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontrollerdelegate/1622317-prepareforpopoverpresentation
    prepareForPopoverPresentation(popoverPresentationController: UIPopoverPresentationController):void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontrollerdelegate/1622321-popoverpresentationcontrollersho
    popoverPresentationControllerShouldDismissPopover(popoverPresentationController: UIPopoverPresentationController):boolean;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontrollerdelegate/1622322-popoverpresentationcontrollerdid
    popoverPresentationControllerDidDismissPopover(popoverPresentationController: UIPopoverPresentationController):void;
    // https://developer.apple.com/documentation/uikit/uipopoverpresentationcontrollerdelegate/1622326-popoverpresentationcontroller
    popoverPresentationController_willRepositionPopoverToRect_inView(popoverPresentationController: UIPopoverPresentationController, rect: CGRect, view: UIView):void;
  }
}
declare namespace cocoascript {
  /**
   * The interface that an object implements to respond to size changes in a sheet presentation controller.
   * https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdelegate
   */
  interface UISheetPresentationControllerDelegate extends UIAdaptivePresentationControllerDelegate {
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdelegate/3801914-sheetpresentationcontrollerdidch
    sheetPresentationControllerDidChangeSelectedDetentIdentifier(sheetPresentationController: UISheetPresentationController):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiguidedaccessrestrictionstate
  type UIGuidedAccessRestrictionState = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uidocumentstatechangednotification
declare const UIDocumentStateChangedNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentchangekind
  type UIDocumentChangeKind = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentsaveoperation
  type UIDocumentSaveOperation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentstate
  type UIDocumentState = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * An object that manages an ordered collection of data items and presents them using customizable layouts.
   * https://developer.apple.com/documentation/uikit/uicollectionview
   */
  interface UICollectionView extends UIScrollView {
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618053-initwithframe
    initWithFrame_collectionViewLayout(frame: CGRect, layout: UICollectionViewLayout):UICollectionView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618065-initwithcoder
    initWithCoder(coder: NSCoder):UICollectionView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618091-datasource
    dataSource(): UICollectionViewDataSource;
    setDataSource(value: UICollectionViewDataSource): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1771771-prefetchingenabled
    prefetchingEnabled(): boolean;
    setPrefetchingEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1771768-prefetchdatasource
    prefetchDataSource(): UICollectionViewDataSourcePrefetching;
    setPrefetchDataSource(value: UICollectionViewDataSourcePrefetching): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618033-delegate
    delegate(): UICollectionViewDelegate;
    setDelegate(value: UICollectionViewDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3600423-dequeueconfiguredreusablecellwit
    dequeueConfiguredReusableCellWithRegistration_forIndexPath_item(registration: UICollectionViewCellRegistration, indexPath: NSIndexPath, item: UICollectionView):UICollectionViewCell;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618089-registerclass
    registerClass_forCellWithReuseIdentifier(cellClass: Class, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618083-registernib
    registerNib_forCellWithReuseIdentifier(nib: UINib, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618063-dequeuereusablecellwithreuseiden
    dequeueReusableCellWithReuseIdentifier_forIndexPath(identifier: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewCell;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3600424-dequeueconfiguredreusablesupplem
    dequeueConfiguredReusableSupplementaryViewWithRegistration_forIndexPath(registration: UICollectionViewSupplementaryRegistration, indexPath: NSIndexPath):UICollectionReusableView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618103-registerclass
    registerClass_forSupplementaryViewOfKind_withReuseIdentifier(viewClass: Class, elementKind: string | cocoascript.NSString, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618101-registernib
    registerNib_forSupplementaryViewOfKind_withReuseIdentifier(nib: UINib, kind: string | cocoascript.NSString, identifier: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618068-dequeuereusablesupplementaryview
    dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath(elementKind: string | cocoascript.NSString, identifier: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionReusableView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618074-backgroundview
    backgroundView(): UIView;
    setBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618047-collectionviewlayout
    collectionViewLayout(): UICollectionViewLayout;
    setCollectionViewLayout(value: UICollectionViewLayout): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618086-setcollectionviewlayout
    setCollectionViewLayout_animated(layout: UICollectionViewLayout, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618017-setcollectionviewlayout
    setCollectionViewLayout_animated_completion(layout: UICollectionViewLayout, animated: boolean, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618098-startinteractivetransitiontocoll
    startInteractiveTransitionToCollectionViewLayout_completion(layout: UICollectionViewLayout, completion: UICollectionViewLayoutInteractiveTransitionCompletion):UICollectionViewTransitionLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618080-finishinteractivetransition
    finishInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618075-cancelinteractivetransition
    cancelInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618028-numberofsections
    numberOfSections(): NSInteger;
    setNumberOfSections(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618016-numberofitemsinsection
    numberOfItemsInSection(section: NSInteger):NSInteger;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618056-visiblecells
    visibleCells(): UICollectionViewCell;
    setVisibleCells(value: UICollectionViewCell): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618097-insertitemsatindexpaths
    insertItemsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618059-moveitematindexpath
    moveItemAtIndexPath_toIndexPath(indexPath: NSIndexPath, newIndexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618060-deleteitemsatindexpaths
    deleteItemsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618090-insertsections
    insertSections(sections: NSIndexSet):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618042-movesection
    moveSection_toSection(section: NSInteger, newSection: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618102-deletesections
    deleteSections(sections: NSIndexSet):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618019-begininteractivemovementforitema
    beginInteractiveMovementForItemAtIndexPath(indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618079-updateinteractivemovementtargetp
    updateInteractiveMovementTargetPosition(targetPosition: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618082-endinteractivemovement
    endInteractiveMovement():void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618076-cancelinteractivemovement
    cancelInteractiveMovement():void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2897404-dragdelegate
    dragDelegate(): UICollectionViewDragDelegate;
    setDragDelegate(value: UICollectionViewDragDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2897415-hasactivedrag
    hasActiveDrag(): boolean;
    setHasActiveDrag(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2909041-draginteractionenabled
    dragInteractionEnabled(): boolean;
    setDragInteractionEnabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2897491-dropdelegate
    dropDelegate(): UICollectionViewDropDelegate;
    setDropDelegate(value: UICollectionViewDropDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2897433-hasactivedrop
    hasActiveDrop(): boolean;
    setHasActiveDrop(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2897347-reorderingcadence
    reorderingCadence(): UICollectionViewReorderingCadence;
    setReorderingCadence(value: UICollectionViewReorderingCadence): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618099-indexpathsforselecteditems
    indexPathsForSelectedItems(): NSIndexPath;
    setIndexPathsForSelectedItems(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618057-selectitematindexpath
    selectItemAtIndexPath_animated_scrollPosition(indexPath: NSIndexPath, animated: boolean, scrollPosition: UICollectionViewScrollPosition):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618040-deselectitematindexpath
    deselectItemAtIndexPath_animated(indexPath: NSIndexPath, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618009-allowsselection
    allowsSelection(): boolean;
    setAllowsSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618024-allowsmultipleselection
    allowsMultipleSelection(): boolean;
    setAllowsMultipleSelection(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3600422-allowsselectionduringediting
    allowsSelectionDuringEditing(): boolean;
    setAllowsSelectionDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3600421-allowsmultipleselectionduringedi
    allowsMultipleSelectionDuringEditing(): boolean;
    setAllowsMultipleSelectionDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3573920-selectionfollowsfocus
    selectionFollowsFocus(): boolean;
    setSelectionFollowsFocus(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3600425-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618030-indexpathforitematpoint
    indexPathForItemAtPoint(point: CGPoint):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618020-indexpathsforvisibleitems
    indexPathsForVisibleItems(): NSIndexPath;
    setIndexPathsForVisibleItems(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618094-indexpathforcell
    indexPathForCell(cell: UICollectionViewCell):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618088-cellforitematindexpath
    cellForItemAtIndexPath(indexPath: NSIndexPath):UICollectionViewCell;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618034-indexpathsforvisiblesupplementar
    indexPathsForVisibleSupplementaryElementsOfKind(elementKind: string | cocoascript.NSString):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618041-supplementaryviewforelementkind
    supplementaryViewForElementKind_atIndexPath(elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionReusableView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618026-visiblesupplementaryviewsofkind
    visibleSupplementaryViewsOfKind(elementKind: string | cocoascript.NSString):UICollectionReusableView;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618093-layoutattributesforitematindexpa
    layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618012-layoutattributesforsupplementary
    layoutAttributesForSupplementaryElementOfKind_atIndexPath(kind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618046-scrolltoitematindexpath
    scrollToItemAtIndexPath_atScrollPosition_animated(indexPath: NSIndexPath, scrollPosition: UICollectionViewScrollPosition, animated: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618045-performbatchupdates
    performBatchUpdates_completion(updates: void, completion: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/2891094-hasuncommittedupdates
    hasUncommittedUpdates(): boolean;
    setHasUncommittedUpdates(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3801889-reconfigureitemsatindexpaths
    reconfigureItemsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618078-reloaddata
    reloadData():void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618092-reloadsections
    reloadSections(sections: NSIndexSet):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618055-reloaditemsatindexpaths
    reloadItemsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/1618022-rememberslastfocusedindexpath
    remembersLastFocusedIndexPath(): boolean;
    setRemembersLastFocusedIndexPath(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3795590-allowsfocus
    allowsFocus(): boolean;
    setAllowsFocus(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3795591-allowsfocusduringediting
    allowsFocusDuringEditing(): boolean;
    setAllowsFocusDuringEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionview/3867094-contextmenuinteraction
    contextMenuInteraction(): UIContextMenuInteraction;
    setContextMenuInteraction(value: UIContextMenuInteraction): void;
    //
    alloc():UICollectionView;
    //
    init():UICollectionView;
  }
}

declare const UICollectionView: cocoascript.UICollectionView;
// https://developer.apple.com/documentation/uikit/uicollectionelementkindsectionfooter
declare const UICollectionElementKindSectionFooter: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uicollectionelementkindsectionheader
declare const UICollectionElementKindSectionHeader: cocoascript.NSString;
// https://developer.apple.com/documentation/uikit/uipasteboardnamegeneral
declare const UIPasteboardNameGeneral: cocoascript.UIPasteboardName;
// https://developer.apple.com/documentation/uikit/uipasteboardoptionlocalonly
declare const UIPasteboardOptionLocalOnly: cocoascript.UIPasteboardOption;
// https://developer.apple.com/documentation/uikit/uipasteboardoptionexpirationdate
declare const UIPasteboardOptionExpirationDate: cocoascript.UIPasteboardOption;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipasteboarddetectionpattern
  type UIPasteboardDetectionPattern = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipasteboardname
  type UIPasteboardName = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipasteboardoption
  type UIPasteboardOption = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uipasteboardchangednotification
declare const UIPasteboardChangedNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uipasteboardremovednotification
declare const UIPasteboardRemovedNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * The interface for text-oriented responder objects to participate in the unified paste and drop system in iOS.
   * https://developer.apple.com/documentation/uikit/uitextpasteconfigurationsupporting
   */
  interface UITextPasteConfigurationSupporting extends UIPasteConfigurationSupporting {
    // https://developer.apple.com/documentation/uikit/uitextpasteconfigurationsupporting/2887494-pastedelegate
    pasteDelegate(): UITextPasteDelegate;
    setPasteDelegate(value: UITextPasteDelegate): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiniboptionskey
  type UINibOptionsKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uikeyboardtype
  type UIKeyboardType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivitycategory
  type UIActivityCategory = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivitytype
  type UIActivityType = cocoascript.NSString;
}
declare namespace cocoascript {
  /**
   * A configuration that allows a responder to export data through a variety of interactions.
   * https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration
   */
  interface UIActivityItemsConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368123-initwithobjects
    initWithObjects(objects: NSItemProviderWriting):UIActivityItemsConfiguration;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368122-initwithitemproviders
    initWithItemProviders(itemProviders: NSItemProvider):UIActivityItemsConfiguration;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368180-activityitemsconfigurationwithob
    activityItemsConfigurationWithObjects(objects: NSItemProviderWriting):UIActivityItemsConfiguration;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368179-activityitemsconfigurationwithit
    activityItemsConfigurationWithItemProviders(itemProviders: NSItemProvider):UIActivityItemsConfiguration;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368124-localobject
    localObject(): id;
    setLocalObject(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368125-metadataprovider
    metadataProvider(): UIActivityItemsConfigurationMetadataKey;
    setMetadataProvider(value: UIActivityItemsConfigurationMetadataKey): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368126-peritemmetadataprovider
    perItemMetadataProvider(): UIActivityItemsConfigurationMetadataKey;
    setPerItemMetadataProvider(value: UIActivityItemsConfigurationMetadataKey): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368121-applicationactivitiesprovider
    applicationActivitiesProvider(): void;
    setApplicationActivitiesProvider(value: void): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368128-supportedinteractions
    supportedInteractions(): UIActivityItemsConfigurationInteraction;
    setSupportedInteractions(value: UIActivityItemsConfigurationInteraction): void;
    // https://developer.apple.com/documentation/uikit/uiactivityitemsconfiguration/3368127-previewprovider
    previewProvider(): CGSize;
    setPreviewProvider(value: CGSize): void;
    //
    alloc():UIActivityItemsConfiguration;
    //
    init():UIActivityItemsConfiguration;
  }
}

declare const UIActivityItemsConfiguration: cocoascript.UIActivityItemsConfiguration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityviewcontrollercompletionwithitemshandler
  type UIActivityViewControllerCompletionWithItemsHandler = cocoascript.NSError;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityviewcontrollercompletionhandler
  type UIActivityViewControllerCompletionHandler = boolean;
}
declare namespace cocoascript {
  /**
   * A single action to present when the user swipes horizontally in a table row.
   * https://developer.apple.com/documentation/uikit/uitableviewrowaction
   */
  interface UITableViewRowAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614893-rowactionwithstyle
    rowActionWithStyle_title_handler(style: UITableViewRowActionStyle, title: string | cocoascript.NSString, handler: NSIndexPath):UITableViewRowAction;
    // https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614887-style
    style(): UITableViewRowActionStyle;
    setStyle(value: UITableViewRowActionStyle): void;
    // https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614993-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614995-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614990-backgroundeffect
    backgroundEffect(): UIVisualEffect;
    setBackgroundEffect(value: UIVisualEffect): void;
    //
    alloc():UITableViewRowAction;
    //
    init():UITableViewRowAction;
  }
}

declare const UITableViewRowAction: cocoascript.UITableViewRowAction;
declare namespace cocoascript {
  /**
   * A layout object that manages the layout-related attributes for a given item in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes
   */
  interface UICollectionViewLayoutAttributes extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617759-layoutattributesforcellwithindex
    layoutAttributesForCellWithIndexPath(indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617801-layoutattributesforsupplementary
    layoutAttributesForSupplementaryViewOfKind_withIndexPath(elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617786-layoutattributesfordecorationvie
    layoutAttributesForDecorationViewOfKind_withIndexPath(decorationViewKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617776-indexpath
    indexPath(): NSIndexPath;
    setIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617738-representedelementcategory
    representedElementCategory(): UICollectionElementCategory;
    setRepresentedElementCategory(value: UICollectionElementCategory): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617806-representedelementkind
    representedElementKind(): string | cocoascript.NSString;
    setRepresentedElementKind(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617753-frame
    frame(): CGRect;
    setFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617782-bounds
    bounds(): CGRect;
    setBounds(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617735-center
    center(): CGPoint;
    setCenter(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617733-size
    size(): CGSize;
    setSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617764-transform3d
    transform3D(): CATransform3D;
    setTransform3D(value: CATransform3D): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617779-transform
    transform(): CGAffineTransform;
    setTransform(value: CGAffineTransform): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617743-alpha
    alpha(): CGFloat;
    setAlpha(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617768-zindex
    zIndex(): NSInteger;
    setZIndex(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617799-hidden
    hidden(): boolean;
    setHidden(value: boolean): void;
    //
    alloc():UICollectionViewLayoutAttributes;
    //
    init():UICollectionViewLayoutAttributes;
  }
}

declare const UICollectionViewLayoutAttributes: cocoascript.UICollectionViewLayoutAttributes;
declare namespace cocoascript {
  /**
   * A proposed configuration for the behavior of a text drop interaction.
   * https://developer.apple.com/documentation/uikit/uitextdropproposal
   */
  interface UITextDropProposal extends UIDropProposal {
    // https://developer.apple.com/documentation/uikit/uitextdropproposal/2891037-dropaction
    dropAction(): UITextDropAction;
    setDropAction(value: UITextDropAction): void;
    // https://developer.apple.com/documentation/uikit/uitextdropproposal/2919992-dropperformer
    dropPerformer(): UITextDropPerformer;
    setDropPerformer(value: UITextDropPerformer): void;
    // https://developer.apple.com/documentation/uikit/uitextdropproposal/2890989-dropprogressmode
    dropProgressMode(): UITextDropProgressMode;
    setDropProgressMode(value: UITextDropProgressMode): void;
    // https://developer.apple.com/documentation/uikit/uitextdropproposal/2891034-usefastsameviewoperations
    useFastSameViewOperations(): boolean;
    setUseFastSameViewOperations(value: boolean): void;
    //
    alloc():UITextDropProposal;
    //
    init():UITextDropProposal;
  }
}

declare const UITextDropProposal: cocoascript.UITextDropProposal;
declare namespace cocoascript {
  /**
   * A class that represents password rules for a text input field.
   * https://developer.apple.com/documentation/uikit/uitextinputpasswordrules
   */
  interface UITextInputPasswordRules extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextinputpasswordrules/2980933-passwordruleswithdescriptor
    passwordRulesWithDescriptor(passwordRulesDescriptor: string | cocoascript.NSString):UITextInputPasswordRules;
    // https://developer.apple.com/documentation/uikit/uitextinputpasswordrules/2980932-passwordrulesdescriptor
    passwordRulesDescriptor(): string | cocoascript.NSString;
    setPasswordRulesDescriptor(value: string | cocoascript.NSString): void;
    //
    alloc():UITextInputPasswordRules;
    //
    init():UITextInputPasswordRules;
  }
}

declare const UITextInputPasswordRules: cocoascript.UITextInputPasswordRules;
declare namespace cocoascript {
  /**
   * An object that defines how to attach a supplementary item to an item in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor
   */
  interface NSCollectionLayoutAnchor extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3199034-layoutanchorwithedges
    layoutAnchorWithEdges(edges: NSDirectionalRectEdge):NSCollectionLayoutAnchor;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213814-layoutanchorwithedges
    layoutAnchorWithEdges_absoluteOffset(edges: NSDirectionalRectEdge, absoluteOffset: CGPoint):NSCollectionLayoutAnchor;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213815-layoutanchorwithedges
    layoutAnchorWithEdges_fractionalOffset(edges: NSDirectionalRectEdge, fractionalOffset: CGPoint):NSCollectionLayoutAnchor;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3199030-edges
    edges(): NSDirectionalRectEdge;
    setEdges(value: NSDirectionalRectEdge): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3199037-offset
    offset(): CGPoint;
    setOffset(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213811-isabsoluteoffset
    isAbsoluteOffset(): boolean;
    setIsAbsoluteOffset(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213812-isfractionaloffset
    isFractionalOffset(): boolean;
    setIsFractionalOffset(value: boolean): void;
    //
    alloc():NSCollectionLayoutAnchor;
    //
    init():NSCollectionLayoutAnchor;
  }
}

declare const NSCollectionLayoutAnchor: cocoascript.NSCollectionLayoutAnchor;
declare namespace cocoascript {
  /**
   * An object used to add headers or footers to a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem
   */
  interface NSCollectionLayoutBoundarySupplementaryItem extends NSCollectionLayoutSupplementaryItem {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3213819-boundarysupplementaryitemwithlay
    boundarySupplementaryItemWithLayoutSize_elementKind_alignment(layoutSize: NSCollectionLayoutSize, elementKind: string | cocoascript.NSString, alignment: NSRectAlignment):NSCollectionLayoutBoundarySupplementaryItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3213820-boundarysupplementaryitemwithlay
    boundarySupplementaryItemWithLayoutSize_elementKind_alignment_absoluteOffset(layoutSize: NSCollectionLayoutSize, elementKind: string | cocoascript.NSString, alignment: NSRectAlignment, absoluteOffset: CGPoint):NSCollectionLayoutBoundarySupplementaryItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199044-pintovisiblebounds
    pinToVisibleBounds(): boolean;
    setPinToVisibleBounds(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199043-offset
    offset(): CGPoint;
    setOffset(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199039-alignment
    alignment(): NSRectAlignment;
    setAlignment(value: NSRectAlignment): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199040-extendsboundary
    extendsBoundary(): boolean;
    setExtendsBoundary(value: boolean): void;
    //
    alloc():NSCollectionLayoutBoundarySupplementaryItem;
    //
    init():NSCollectionLayoutBoundarySupplementaryItem;
  }
}

declare const NSCollectionLayoutBoundarySupplementaryItem: cocoascript.NSCollectionLayoutBoundarySupplementaryItem;
declare namespace cocoascript {
  /**
   * An object used to add a background to a section of a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem
   */
  interface NSCollectionLayoutDecorationItem extends NSCollectionLayoutItem {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem/3199051-backgrounddecorationitemwithelem
    backgroundDecorationItemWithElementKind(elementKind: string | cocoascript.NSString):NSCollectionLayoutDecorationItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem/3213831-elementkind
    elementKind(): string | cocoascript.NSString;
    setElementKind(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem/3199053-zindex
    zIndex(): NSInteger;
    setZIndex(value: NSInteger): void;
    //
    alloc():NSCollectionLayoutDecorationItem;
    //
    init():NSCollectionLayoutDecorationItem;
  }
}

declare const NSCollectionLayoutDecorationItem: cocoascript.NSCollectionLayoutDecorationItem;
declare namespace cocoascript {
  /**
   * An individual dimension of an item's size (width or height) in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension
   */
  interface NSCollectionLayoutDimension extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199055-absolutedimension
    absoluteDimension(absoluteDimension: CGFloat):NSCollectionLayoutDimension;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199057-estimateddimension
    estimatedDimension(estimatedDimension: CGFloat):NSCollectionLayoutDimension;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199058-fractionalheightdimension
    fractionalHeightDimension(fractionalHeight: CGFloat):NSCollectionLayoutDimension;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199059-fractionalwidthdimension
    fractionalWidthDimension(fractionalWidth: CGFloat):NSCollectionLayoutDimension;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199056-dimension
    dimension(): CGFloat;
    setDimension(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199060-isabsolute
    isAbsolute(): boolean;
    setIsAbsolute(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199061-isestimated
    isEstimated(): boolean;
    setIsEstimated(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199062-isfractionalheight
    isFractionalHeight(): boolean;
    setIsFractionalHeight(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199063-isfractionalwidth
    isFractionalWidth(): boolean;
    setIsFractionalWidth(value: boolean): void;
    //
    alloc():NSCollectionLayoutDimension;
    //
    init():NSCollectionLayoutDimension;
  }
}

declare const NSCollectionLayoutDimension: cocoascript.NSCollectionLayoutDimension;
declare namespace cocoascript {
  /**
   * An object that defines the space around the edges of items in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing
   */
  interface NSCollectionLayoutEdgeSpacing extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199068-spacingforleading
    spacingForLeading_top_trailing_bottom(leading: NSCollectionLayoutSpacing, top: NSCollectionLayoutSpacing, trailing: NSCollectionLayoutSpacing, bottom: NSCollectionLayoutSpacing):NSCollectionLayoutEdgeSpacing;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199069-leading
    leading(): NSCollectionLayoutSpacing;
    setLeading(value: NSCollectionLayoutSpacing): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199070-top
    top(): NSCollectionLayoutSpacing;
    setTop(value: NSCollectionLayoutSpacing): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199071-trailing
    trailing(): NSCollectionLayoutSpacing;
    setTrailing(value: NSCollectionLayoutSpacing): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199065-bottom
    bottom(): NSCollectionLayoutSpacing;
    setBottom(value: NSCollectionLayoutSpacing): void;
    //
    alloc():NSCollectionLayoutEdgeSpacing;
    //
    init():NSCollectionLayoutEdgeSpacing;
  }
}

declare const NSCollectionLayoutEdgeSpacing: cocoascript.NSCollectionLayoutEdgeSpacing;
declare namespace cocoascript {
  /**
   * A container for a set of items that lays out the items along a path.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup
   */
  interface NSCollectionLayoutGroup extends NSCollectionLayoutItem {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213855-horizontalgroupwithlayoutsize
    horizontalGroupWithLayoutSize_subitems(layoutSize: NSCollectionLayoutSize, subitems: NSCollectionLayoutItem):NSCollectionLayoutGroup;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213854-horizontalgroupwithlayoutsize
    horizontalGroupWithLayoutSize_subitem_count(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: NSInteger):NSCollectionLayoutGroup;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213860-verticalgroupwithlayoutsize
    verticalGroupWithLayoutSize_subitems(layoutSize: NSCollectionLayoutSize, subitems: NSCollectionLayoutItem):NSCollectionLayoutGroup;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213859-verticalgroupwithlayoutsize
    verticalGroupWithLayoutSize_subitem_count(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: NSInteger):NSCollectionLayoutGroup;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213853-customgroupwithlayoutsize
    customGroupWithLayoutSize_itemProvider(layoutSize: NSCollectionLayoutSize, itemProvider: NSCollectionLayoutGroupCustomItemProvider):NSCollectionLayoutGroup;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213857-subitems
    subitems(): NSCollectionLayoutItem;
    setSubitems(value: NSCollectionLayoutItem): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3199079-supplementaryitems
    supplementaryItems(): NSCollectionLayoutSupplementaryItem;
    setSupplementaryItems(value: NSCollectionLayoutSupplementaryItem): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3199078-interitemspacing
    interItemSpacing(): NSCollectionLayoutSpacing;
    setInterItemSpacing(value: NSCollectionLayoutSpacing): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3199082-visualdescription
    visualDescription():NSString;
    //
    alloc():NSCollectionLayoutGroup;
    //
    init():NSCollectionLayoutGroup;
  }
}

declare const NSCollectionLayoutGroup: cocoascript.NSCollectionLayoutGroup;
declare namespace cocoascript {
  /**
   * An item used in a group with a custom layout arrangement.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem
   */
  interface NSCollectionLayoutGroupCustomItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213863-customitemwithframe
    customItemWithFrame(frame: CGRect):NSCollectionLayoutGroupCustomItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213864-customitemwithframe
    customItemWithFrame_zIndex(frame: CGRect, zIndex: NSInteger):NSCollectionLayoutGroupCustomItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213865-frame
    frame(): CGRect;
    setFrame(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213866-zindex
    zIndex(): NSInteger;
    setZIndex(value: NSInteger): void;
    //
    alloc():NSCollectionLayoutGroupCustomItem;
    //
    init():NSCollectionLayoutGroupCustomItem;
  }
}

declare const NSCollectionLayoutGroupCustomItem: cocoascript.NSCollectionLayoutGroupCustomItem;
declare namespace cocoascript {
  /**
   * The most basic component of a collection view's layout.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutitem
   */
  interface NSCollectionLayoutItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213871-itemwithlayoutsize
    itemWithLayoutSize(layoutSize: NSCollectionLayoutSize):NSCollectionLayoutItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213872-itemwithlayoutsize
    itemWithLayoutSize_supplementaryItems(layoutSize: NSCollectionLayoutSize, supplementaryItems: NSCollectionLayoutSupplementaryItem):NSCollectionLayoutItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213873-layoutsize
    layoutSize(): NSCollectionLayoutSize;
    setLayoutSize(value: NSCollectionLayoutSize): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213874-supplementaryitems
    supplementaryItems(): NSCollectionLayoutSupplementaryItem;
    setSupplementaryItems(value: NSCollectionLayoutSupplementaryItem): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3199085-edgespacing
    edgeSpacing(): NSCollectionLayoutEdgeSpacing;
    setEdgeSpacing(value: NSCollectionLayoutEdgeSpacing): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3199084-contentinsets
    contentInsets(): NSDirectionalEdgeInsets;
    setContentInsets(value: NSDirectionalEdgeInsets): void;
    //
    alloc():NSCollectionLayoutItem;
    //
    init():NSCollectionLayoutItem;
  }
}

declare const NSCollectionLayoutItem: cocoascript.NSCollectionLayoutItem;
declare namespace cocoascript {
  /**
   * A container that combines a set of groups into distinct visual groupings.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutsection
   */
  interface NSCollectionLayoutSection extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3213881-sectionwithgroup
    sectionWithGroup(group: NSCollectionLayoutGroup):NSCollectionLayoutSection;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3600403-sectionwithlistconfiguration
    sectionWithListConfiguration_layoutEnvironment(configuration: UICollectionLayoutListConfiguration, layoutEnvironment: NSCollectionLayoutEnvironment):NSCollectionLayoutSection;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199094-orthogonalscrollingbehavior
    orthogonalScrollingBehavior(): UICollectionLayoutSectionOrthogonalScrollingBehavior;
    setOrthogonalScrollingBehavior(value: UICollectionLayoutSectionOrthogonalScrollingBehavior): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199093-intergroupspacing
    interGroupSpacing(): CGFloat;
    setInterGroupSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199090-contentinsets
    contentInsets(): NSDirectionalEdgeInsets;
    setContentInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3600434-contentinsetsreference
    contentInsetsReference(): UIContentInsetsReference;
    setContentInsetsReference(value: UIContentInsetsReference): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199095-supplementariesfollowcontentinse
    supplementariesFollowContentInsets(): boolean;
    setSupplementariesFollowContentInsets(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199089-boundarysupplementaryitems
    boundarySupplementaryItems(): NSCollectionLayoutBoundarySupplementaryItem;
    setBoundarySupplementaryItems(value: NSCollectionLayoutBoundarySupplementaryItem): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199091-decorationitems
    decorationItems(): NSCollectionLayoutDecorationItem;
    setDecorationItems(value: NSCollectionLayoutDecorationItem): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199096-visibleitemsinvalidationhandler
    visibleItemsInvalidationHandler(): NSCollectionLayoutSectionVisibleItemsInvalidationHandler;
    setVisibleItemsInvalidationHandler(value: NSCollectionLayoutSectionVisibleItemsInvalidationHandler): void;
    // https://developer.apple.com/documentation/appkit/nscollectionlayoutsection/3780294-orthogonallayoutsectionformediai
    orthogonalLayoutSectionForMediaItems():NSCollectionLayoutSection;
    //
    alloc():NSCollectionLayoutSection;
    //
    init():NSCollectionLayoutSection;
  }
}

declare const NSCollectionLayoutSection: cocoascript.NSCollectionLayoutSection;
declare namespace cocoascript {
  /**
   * The width and the height of an item in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutsize
   */
  interface NSCollectionLayoutSize extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsize/3213887-sizewithwidthdimension
    sizeWithWidthDimension_heightDimension(width: NSCollectionLayoutDimension, height: NSCollectionLayoutDimension):NSCollectionLayoutSize;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsize/3213888-widthdimension
    widthDimension(): NSCollectionLayoutDimension;
    setWidthDimension(value: NSCollectionLayoutDimension): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsize/3213886-heightdimension
    heightDimension(): NSCollectionLayoutDimension;
    setHeightDimension(value: NSCollectionLayoutDimension): void;
    //
    alloc():NSCollectionLayoutSize;
    //
    init():NSCollectionLayoutSize;
  }
}

declare const NSCollectionLayoutSize: cocoascript.NSCollectionLayoutSize;
declare namespace cocoascript {
  /**
   * An object that defines the space between or around items in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing
   */
  interface NSCollectionLayoutSpacing extends NSObject {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199103-fixedspacing
    fixedSpacing(fixedSpacing: CGFloat):NSCollectionLayoutSpacing;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199104-flexiblespacing
    flexibleSpacing(flexibleSpacing: CGFloat):NSCollectionLayoutSpacing;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199107-spacing
    spacing(): CGFloat;
    setSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199105-isfixedspacing
    isFixedSpacing(): boolean;
    setIsFixedSpacing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199106-isflexiblespacing
    isFlexibleSpacing(): boolean;
    setIsFlexibleSpacing(value: boolean): void;
    //
    alloc():NSCollectionLayoutSpacing;
    //
    init():NSCollectionLayoutSpacing;
  }
}

declare const NSCollectionLayoutSpacing: cocoascript.NSCollectionLayoutSpacing;
declare namespace cocoascript {
  /**
   * An object used to add an extra visual decoration, such as a badge or a frame, to an item in a collection view.
   * https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem
   */
  interface NSCollectionLayoutSupplementaryItem extends NSCollectionLayoutItem {
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3213899-supplementaryitemwithlayoutsize
    supplementaryItemWithLayoutSize_elementKind_containerAnchor(layoutSize: NSCollectionLayoutSize, elementKind: string | cocoascript.NSString, containerAnchor: NSCollectionLayoutAnchor):NSCollectionLayoutSupplementaryItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3213900-supplementaryitemwithlayoutsize
    supplementaryItemWithLayoutSize_elementKind_containerAnchor_itemAnchor(layoutSize: NSCollectionLayoutSize, elementKind: string | cocoascript.NSString, containerAnchor: NSCollectionLayoutAnchor, itemAnchor: NSCollectionLayoutAnchor):NSCollectionLayoutSupplementaryItem;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199113-itemanchor
    itemAnchor(): NSCollectionLayoutAnchor;
    setItemAnchor(value: NSCollectionLayoutAnchor): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199109-containeranchor
    containerAnchor(): NSCollectionLayoutAnchor;
    setContainerAnchor(value: NSCollectionLayoutAnchor): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199110-elementkind
    elementKind(): string | cocoascript.NSString;
    setElementKind(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199114-zindex
    zIndex(): NSInteger;
    setZIndex(value: NSInteger): void;
    //
    alloc():NSCollectionLayoutSupplementaryItem;
    //
    init():NSCollectionLayoutSupplementaryItem;
  }
}

declare const NSCollectionLayoutSupplementaryItem: cocoascript.NSCollectionLayoutSupplementaryItem;
declare namespace cocoascript {
  /**
   * An object that defines scroll direction, section spacing, and headers or footers for the layout.
   * https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration
   */
  interface UICollectionViewCompositionalLayoutConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3199222-scrolldirection
    scrollDirection(): UICollectionViewScrollDirection;
    setScrollDirection(value: UICollectionViewScrollDirection): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3199221-intersectionspacing
    interSectionSpacing(): CGFloat;
    setInterSectionSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3600435-contentinsetsreference
    contentInsetsReference(): UIContentInsetsReference;
    setContentInsetsReference(value: UIContentInsetsReference): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3199219-boundarysupplementaryitems
    boundarySupplementaryItems(): NSCollectionLayoutBoundarySupplementaryItem;
    setBoundarySupplementaryItems(value: NSCollectionLayoutBoundarySupplementaryItem): void;
    //
    alloc():UICollectionViewCompositionalLayoutConfiguration;
    //
    init():UICollectionViewCompositionalLayoutConfiguration;
  }
}

declare const UICollectionViewCompositionalLayoutConfiguration: cocoascript.UICollectionViewCompositionalLayoutConfiguration;
declare namespace cocoascript {
  /**
   * A representation of the state of the data in a layout section at a specific point in time.
   * https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot
   */
  interface NSDiffableDataSourceSectionSnapshot extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600297-init
    init():NSDiffableDataSourceSectionSnapshot;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600310-snapshotofparentitem
    snapshotOfParentItem(parentItem: any):NSDiffableDataSourceSectionSnapshot;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600311-snapshotofparentitem
    snapshotOfParentItem_includingParentItem(parentItem: any, includingParentItem: boolean):NSDiffableDataSourceSectionSnapshot;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600288-appenditems
    appendItems(items: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600289-appenditems
    appendItems_intoParentItem(items: any, parentItem: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600304-items
    items():NSArray;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600305-items
    items(): any;
    setItems(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600309-rootitems
    rootItems(): any;
    setRootItems(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600312-visibleitems
    visibleItems(): any;
    setVisibleItems(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600296-indexofitem
    indexOfItem(item: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600306-levelofitem
    levelOfItem(item: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600307-parentofchilditem
    parentOfChildItem(childItem: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600291-containsitem
    containsItem(item: any):boolean;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600303-isvisible
    isVisible(item: any):boolean;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600298-insertitems
    insertItems_afterItem(items: any, afterIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600300-insertsnapshot
    insertSnapshot_afterItem(snapshot: any, item: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600299-insertitems
    insertItems_beforeItem(items: any, beforeIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600301-insertsnapshot
    insertSnapshot_beforeItem(snapshot: any, item: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600293-deleteitems
    deleteItems(items: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600292-deleteallitems
    deleteAllItems():void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600308-replacechildrenofparentitem
    replaceChildrenOfParentItem_withSnapshot(parentItem: any, snapshot: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600302-isexpanded
    isExpanded(item: any):boolean;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600294-expanditems
    expandItems(items: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600290-collapseitems
    collapseItems(items: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600295-expandeditems
    expandedItems():NSArray;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600313-visualdescription
    visualDescription():NSString;
    //
    alloc():NSDiffableDataSourceSectionSnapshot;
    //
    init():NSDiffableDataSourceSectionSnapshot;
  }
}

declare const NSDiffableDataSourceSectionSnapshot: cocoascript.NSDiffableDataSourceSectionSnapshot;
declare namespace cocoascript {
  /**
   * A configuration that describes a specific background appearance.
   * https://developer.apple.com/documentation/uikit/uibackgroundconfiguration
   */
  interface UIBackgroundConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600326-listplaincellconfiguration
    listPlainCellConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600324-listgroupedcellconfiguration
    listGroupedCellConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600328-listsidebarcellconfiguration
    listSidebarCellConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3667725-listaccompaniedsidebarcellconfig
    listAccompaniedSidebarCellConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600327-listplainheaderfooterconfigurati
    listPlainHeaderFooterConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600325-listgroupedheaderfooterconfigura
    listGroupedHeaderFooterConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600329-listsidebarheaderconfiguration
    listSidebarHeaderConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600320-clearconfiguration
    clearConfiguration():UIBackgroundConfiguration;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600322-customview
    customView(): UIView;
    setCustomView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600321-cornerradius
    cornerRadius(): CGFloat;
    setCornerRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600319-backgroundinsets
    backgroundInsets(): NSDirectionalEdgeInsets;
    setBackgroundInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600323-edgesaddinglayoutmarginstobackgr
    edgesAddingLayoutMarginsToBackgroundInsets(): NSDirectionalRectEdge;
    setEdgesAddingLayoutMarginsToBackgroundInsets(value: NSDirectionalRectEdge): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600317-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600318-backgroundcolortransformer
    backgroundColorTransformer(): UIConfigurationColorTransformer;
    setBackgroundColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600330-resolvedbackgroundcolorfortintco
    resolvedBackgroundColorForTintColor(tintColor: UIColor):UIColor;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600337-visualeffect
    visualEffect(): UIVisualEffect;
    setVisualEffect(value: UIVisualEffect): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600332-strokecolor
    strokeColor(): UIColor;
    setStrokeColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600333-strokecolortransformer
    strokeColorTransformer(): UIConfigurationColorTransformer;
    setStrokeColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600331-resolvedstrokecolorfortintcolor
    resolvedStrokeColorForTintColor(tintColor: UIColor):UIColor;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600335-strokewidth
    strokeWidth(): CGFloat;
    setStrokeWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600334-strokeoutset
    strokeOutset(): CGFloat;
    setStrokeOutset(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3750760-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3750761-imagecontentmode
    imageContentMode(): UIViewContentMode;
    setImageContentMode(value: UIViewContentMode): void;
    // https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600336-updatedconfigurationforstate
    updatedConfigurationForState(state: UIConfigurationState):UIBackgroundConfiguration;
    //
    alloc():UIBackgroundConfiguration;
    //
    init():UIBackgroundConfiguration;
  }
}

declare const UIBackgroundConfiguration: cocoascript.UIBackgroundConfiguration;
declare namespace cocoascript {
  /**
   * An accessory in a collection view list cell.
   * https://developer.apple.com/documentation/uikit/uicellaccessory
   */
  interface UICellAccessory extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3600353-init
    init():UICellAccessory;
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3600354-initwithcoder
    initWithCoder(coder: NSCoder):UICellAccessory;
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3667726-hidden
    hidden(): boolean;
    setHidden(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3600356-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3600352-displayedstate
    displayedState(): UICellAccessoryDisplayedState;
    setDisplayedState(value: UICellAccessoryDisplayedState): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessory/3600355-reservedlayoutwidth
    reservedLayoutWidth(): CGFloat;
    setReservedLayoutWidth(value: CGFloat): void;
    //
    alloc():UICellAccessory;
    //
    init():UICellAccessory;
  }
}

declare const UICellAccessory: cocoascript.UICellAccessory;
// https://developer.apple.com/documentation/uikit/3600394-uicellaccessorypositionafteracce
declare const UICellAccessoryPositionAfterAccessoryOfClass: cocoascript.Class;
// https://developer.apple.com/documentation/uikit/3600395-uicellaccessorypositionbeforeacc
declare const UICellAccessoryPositionBeforeAccessoryOfClass: cocoascript.Class;
declare namespace cocoascript {
  /**
   * A configuration for creating a list layout.
   * https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration
   */
  interface UICollectionLayoutListConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600412-initwithappearance
    initWithAppearance(appearance: UICollectionLayoutListAppearance):UICollectionLayoutListConfiguration;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600408-appearance
    appearance(): UICollectionLayoutListAppearance;
    setAppearance(value: UICollectionLayoutListAppearance): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600409-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3601202-showsseparators
    showsSeparators(): boolean;
    setShowsSeparators(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727309-separatorconfiguration
    separatorConfiguration(): UIListSeparatorConfiguration;
    setSeparatorConfiguration(value: UIListSeparatorConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727308-itemseparatorhandler
    itemSeparatorHandler(): UICollectionLayoutListItemSeparatorHandler;
    setItemSeparatorHandler(value: UICollectionLayoutListItemSeparatorHandler): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600411-headermode
    headerMode(): UICollectionLayoutListHeaderMode;
    setHeaderMode(value: UICollectionLayoutListHeaderMode): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600410-footermode
    footerMode(): UICollectionLayoutListFooterMode;
    setFooterMode(value: UICollectionLayoutListFooterMode): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3750827-headertoppadding
    headerTopPadding(): CGFloat;
    setHeaderTopPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650427-leadingswipeactionsconfiguration
    leadingSwipeActionsConfigurationProvider(): UICollectionLayoutListSwipeActionsConfigurationProvider;
    setLeadingSwipeActionsConfigurationProvider(value: UICollectionLayoutListSwipeActionsConfigurationProvider): void;
    // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650428-trailingswipeactionsconfiguratio
    trailingSwipeActionsConfigurationProvider(): UICollectionLayoutListSwipeActionsConfigurationProvider;
    setTrailingSwipeActionsConfigurationProvider(value: UICollectionLayoutListSwipeActionsConfigurationProvider): void;
    //
    alloc():UICollectionLayoutListConfiguration;
    //
    init():UICollectionLayoutListConfiguration;
  }
}

declare const UICollectionLayoutListConfiguration: cocoascript.UICollectionLayoutListConfiguration;
declare namespace cocoascript {
  /**
   * Handlers for reordering items.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers
   */
  interface UICollectionViewDiffableDataSourceReorderingHandlers extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600517-canreorderitemhandler
    canReorderItemHandler(): ItemType;
    setCanReorderItemHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600519-willreorderhandler
    willReorderHandler(): ItemType;
    setWillReorderHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600518-didreorderhandler
    didReorderHandler(): ItemType;
    setDidReorderHandler(value: ItemType): void;
    //
    alloc():UICollectionViewDiffableDataSourceReorderingHandlers;
    //
    init():UICollectionViewDiffableDataSourceReorderingHandlers;
  }
}

declare const UICollectionViewDiffableDataSourceReorderingHandlers: cocoascript.UICollectionViewDiffableDataSourceReorderingHandlers;
declare namespace cocoascript {
  /**
   * Handlers for expanding and collapsing items.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers
   */
  interface UICollectionViewDiffableDataSourceSectionSnapshotHandlers extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600521-shouldcollapseitemhandler
    shouldCollapseItemHandler(): ItemType;
    setShouldCollapseItemHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600522-shouldexpanditemhandler
    shouldExpandItemHandler(): ItemType;
    setShouldExpandItemHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600524-willcollapseitemhandler
    willCollapseItemHandler(): ItemType;
    setWillCollapseItemHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600525-willexpanditemhandler
    willExpandItemHandler(): ItemType;
    setWillExpandItemHandler(value: ItemType): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600523-snapshotforexpandingparentitemha
    snapshotForExpandingParentItemHandler(): ItemType;
    setSnapshotForExpandingParentItemHandler(value: ItemType): void;
    //
    alloc():UICollectionViewDiffableDataSourceSectionSnapshotHandlers;
    //
    init():UICollectionViewDiffableDataSourceSectionSnapshotHandlers;
  }
}

declare const UICollectionViewDiffableDataSourceSectionSnapshotHandlers: cocoascript.UICollectionViewDiffableDataSourceSectionSnapshotHandlers;
declare namespace cocoascript {
  /**
   * Properties that affect the list content configuration’s image.
   * https://developer.apple.com/documentation/uikit/uilistcontentimageproperties
   */
  interface UIListContentImageProperties extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600558-preferredsymbolconfiguration
    preferredSymbolConfiguration(): UIImageSymbolConfiguration;
    setPreferredSymbolConfiguration(value: UIImageSymbolConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600560-tintcolor
    tintColor(): UIColor;
    setTintColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3606377-tintcolortransformer
    tintColorTransformer(): UIConfigurationColorTransformer;
    setTintColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3606376-resolvedtintcolorfortintcolor
    resolvedTintColorForTintColor(tintColor: UIColor):UIColor;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600556-cornerradius
    cornerRadius(): CGFloat;
    setCornerRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600557-maximumsize
    maximumSize(): CGSize;
    setMaximumSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600559-reservedlayoutsize
    reservedLayoutSize(): CGSize;
    setReservedLayoutSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3667733-accessibilityignoresinvertcolors
    accessibilityIgnoresInvertColors(): boolean;
    setAccessibilityIgnoresInvertColors(value: boolean): void;
    //
    alloc():UIListContentImageProperties;
    //
    init():UIListContentImageProperties;
  }
}

declare const UIListContentImageProperties: cocoascript.UIListContentImageProperties;
declare namespace cocoascript {
  /**
   * Properties that affect the list content configuration’s text.
   * https://developer.apple.com/documentation/uikit/uilistcontenttextproperties
   */
  interface UIListContentTextProperties extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600572-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600571-color
    color(): UIColor;
    setColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3606378-colortransformer
    colorTransformer(): UIConfigurationColorTransformer;
    setColorTransformer(value: UIConfigurationColorTransformer): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3606379-resolvedcolor
    resolvedColor():UIColor;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600569-alignment
    alignment(): UIListContentTextAlignment;
    setAlignment(value: UIListContentTextAlignment): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600573-linebreakmode
    lineBreakMode(): NSLineBreakMode;
    setLineBreakMode(value: NSLineBreakMode): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600575-numberoflines
    numberOfLines(): NSInteger;
    setNumberOfLines(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600568-adjustsfontsizetofitwidth
    adjustsFontSizeToFitWidth(): boolean;
    setAdjustsFontSizeToFitWidth(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600574-minimumscalefactor
    minimumScaleFactor(): CGFloat;
    setMinimumScaleFactor(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600570-allowsdefaulttighteningfortrunca
    allowsDefaultTighteningForTruncation(): boolean;
    setAllowsDefaultTighteningForTruncation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600567-adjustsfontforcontentsizecategor
    adjustsFontForContentSizeCategory(): boolean;
    setAdjustsFontForContentSizeCategory(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3650227-transform
    transform(): UIListContentTextTransform;
    setTransform(value: UIListContentTextTransform): void;
    //
    alloc():UIListContentTextProperties;
    //
    init():UIListContentTextProperties;
  }
}

declare const UIListContentTextProperties: cocoascript.UIListContentTextProperties;
declare namespace cocoascript {
  /**
   * A configuration that controls the list separator appearance in a list section.
   * https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration
   */
  interface UIListSeparatorConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727324-initwithlistappearance
    initWithListAppearance(listAppearance: UICollectionLayoutListAppearance):UIListSeparatorConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727327-topseparatorvisibility
    topSeparatorVisibility(): UIListSeparatorVisibility;
    setTopSeparatorVisibility(value: UIListSeparatorVisibility): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727322-bottomseparatorvisibility
    bottomSeparatorVisibility(): UIListSeparatorVisibility;
    setBottomSeparatorVisibility(value: UIListSeparatorVisibility): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727326-topseparatorinsets
    topSeparatorInsets(): NSDirectionalEdgeInsets;
    setTopSeparatorInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727321-bottomseparatorinsets
    bottomSeparatorInsets(): NSDirectionalEdgeInsets;
    setBottomSeparatorInsets(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727323-color
    color(): UIColor;
    setColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727325-multipleselectioncolor
    multipleSelectionColor(): UIColor;
    setMultipleSelectionColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3858106-visualeffect
    visualEffect(): UIVisualEffect;
    setVisualEffect(value: UIVisualEffect): void;
    //
    alloc():UIListSeparatorConfiguration;
    //
    init():UIListSeparatorConfiguration;
  }
}

declare const UIListSeparatorConfiguration: cocoascript.UIListSeparatorConfiguration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipreferredpresentationstyle
  type UIPreferredPresentationStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagesymbolscale
  type UIImageSymbolScale = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A representation of the state of the data in a view at a specific point in time.
   * https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot
   */
  interface NSDiffableDataSourceSnapshot extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182897-appendsectionswithidentifiers
    appendSectionsWithIdentifiers(sectionIdentifiers: NSArray):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182896-appenditemswithidentifiers
    appendItemsWithIdentifiers_intoSectionWithIdentifier(identifiers: any, sectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182895-appenditemswithidentifiers
    appendItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182913-numberofitems
    numberOfItems(): NSInteger;
    setNumberOfItems(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182915-numberofsections
    numberOfSections(): NSInteger;
    setNumberOfSections(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182914-numberofitemsinsection
    numberOfItemsInSection(sectionIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182907-itemidentifiers
    itemIdentifiers(): any;
    setItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182919-sectionidentifiers
    sectionIdentifiers(): any;
    setSectionIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182901-indexofitemidentifier
    indexOfItemIdentifier(itemIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182902-indexofsectionidentifier
    indexOfSectionIdentifier(sectionIdentifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182908-itemidentifiersinsectionwithiden
    itemIdentifiersInSectionWithIdentifier(sectionIdentifier: any):NSArray;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182918-sectionidentifierforsectionconta
    sectionIdentifierForSectionContainingItemIdentifier(itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182903-insertitemswithidentifiers
    insertItemsWithIdentifiers_afterItemWithIdentifier(identifiers: any, itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182904-insertitemswithidentifiers
    insertItemsWithIdentifiers_beforeItemWithIdentifier(identifiers: any, itemIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182905-insertsectionswithidentifiers
    insertSectionsWithIdentifiers_afterSectionWithIdentifier(sectionIdentifiers: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182906-insertsectionswithidentifiers
    insertSectionsWithIdentifiers_beforeSectionWithIdentifier(sectionIdentifiers: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182898-deleteallitems
    deleteAllItems():void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182899-deleteitemswithidentifiers
    deleteItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182900-deletesectionswithidentifiers
    deleteSectionsWithIdentifiers(sectionIdentifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182909-moveitemwithidentifier
    moveItemWithIdentifier_afterItemWithIdentifier(fromIdentifier: any, toIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182910-moveitemwithidentifier
    moveItemWithIdentifier_beforeItemWithIdentifier(fromIdentifier: any, toIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182911-movesectionwithidentifier
    moveSectionWithIdentifier_afterSectionWithIdentifier(fromSectionIdentifier: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182912-movesectionwithidentifier
    moveSectionWithIdentifier_beforeSectionWithIdentifier(fromSectionIdentifier: any, toSectionIdentifier: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3801890-reconfigureitemswithidentifiers
    reconfigureItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857603-reconfigureditemidentifiers
    reconfiguredItemIdentifiers(): any;
    setReconfiguredItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182916-reloaditemswithidentifiers
    reloadItemsWithIdentifiers(identifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857604-reloadeditemidentifiers
    reloadedItemIdentifiers(): any;
    setReloadedItemIdentifiers(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182917-reloadsectionswithidentifiers
    reloadSectionsWithIdentifiers(sectionIdentifiers: any):void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857605-reloadedsectionidentifiers
    reloadedSectionIdentifiers(): any;
    setReloadedSectionIdentifiers(value: any): void;
    //
    alloc():NSDiffableDataSourceSnapshot;
    //
    init():NSDiffableDataSourceSnapshot;
  }
}

declare const NSDiffableDataSourceSnapshot: cocoascript.NSDiffableDataSourceSnapshot;
declare namespace cocoascript {
  /**
   * The object you use to manage data and provide cells for a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource
   */
  interface UICollectionViewDiffableDataSource extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182923-initwithcollectionview
    initWithCollectionView_cellProvider(collectionView: UICollectionView, cellProvider: UICollectionViewDiffableDataSourceCellProvider):UICollectionViewDiffableDataSource;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182926-supplementaryviewprovider
    supplementaryViewProvider(): UICollectionViewDiffableDataSourceSupplementaryViewProvider;
    setSupplementaryViewProvider(value: UICollectionViewDiffableDataSourceSupplementaryViewProvider): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182924-itemidentifierforindexpath
    itemIdentifierForIndexPath(indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182922-indexpathforitemidentifier
    indexPathForItemIdentifier(identifier: any):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801894-sectionidentifierforindex
    sectionIdentifierForIndex(index: NSInteger):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801893-indexforsectionidentifier
    indexForSectionIdentifier(identifier: any):NSInteger;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182925-snapshot
    snapshot():NSDiffableDataSourceSnapshot;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182921-applysnapshot
    applySnapshot_animatingDifferences(snapshot: any, animatingDifferences: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3356324-applysnapshot
    applySnapshot_animatingDifferences_completion(snapshot: any, animatingDifferences: boolean, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801891-applysnapshotusingreloaddata
    applySnapshotUsingReloadData(snapshot: any):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801892-applysnapshotusingreloaddata
    applySnapshotUsingReloadData_completion(snapshot: any, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600515-snapshotforsection
    snapshotForSection(section: any):NSDiffableDataSourceSectionSnapshot;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600511-applysnapshot
    applySnapshot_toSection_animatingDifferences(snapshot: any, sectionIdentifier: any, animatingDifferences: boolean):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600512-applysnapshot
    applySnapshot_toSection_animatingDifferences_completion(snapshot: any, sectionIdentifier: any, animatingDifferences: boolean, completion: void):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600513-reorderinghandlers
    reorderingHandlers(): any;
    setReorderingHandlers(value: any): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600514-sectionsnapshothandlers
    sectionSnapshotHandlers(): any;
    setSectionSnapshotHandlers(value: any): void;
    //
    alloc():UICollectionViewDiffableDataSource;
    //
    init():UICollectionViewDiffableDataSource;
  }
}

declare const UICollectionViewDiffableDataSource: cocoascript.UICollectionViewDiffableDataSource;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingbehavior
  type UICollectionLayoutSectionOrthogonalScrollingBehavior = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A collection view cell that provides list features and default styling.
   * https://developer.apple.com/documentation/uikit/uicollectionviewlistcell
   */
  interface UICollectionViewListCell extends UICollectionViewCell {
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600459-defaultcontentconfiguration
    defaultContentConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600458-accessories
    accessories(): UICellAccessory;
    setAccessories(value: UICellAccessory): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600460-indentationlevel
    indentationLevel(): NSInteger;
    setIndentationLevel(value: NSInteger): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600461-indentationwidth
    indentationWidth(): CGFloat;
    setIndentationWidth(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600462-indentsaccessories
    indentsAccessories(): boolean;
    setIndentsAccessories(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3601206-separatorlayoutguide
    separatorLayoutGuide(): UILayoutGuide;
    setSeparatorLayoutGuide(value: UILayoutGuide): void;
    //
    alloc():UICollectionViewListCell;
    //
    init():UICollectionViewListCell;
  }
}

declare const UICollectionViewListCell: cocoascript.UICollectionViewListCell;
// https://developer.apple.com/documentation/uikit/uilayoutprioritydragthatcanresizescene
declare const UILayoutPriorityDragThatCanResizeScene: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uilayoutprioritydragthatcannotresizescene
declare const UILayoutPriorityDragThatCannotResizeScene: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uilayoutpriorityscenesizestayput
declare const UILayoutPrioritySceneSizeStayPut: cocoascript.UILayoutPriority;
// https://developer.apple.com/documentation/uikit/uifonttextstyleheadline
declare const UIFontTextStyleHeadline: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylebody
declare const UIFontTextStyleBody: cocoascript.UIFontTextStyle;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifonttextstyle
  type UIFontTextStyle = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uivibrancyeffectstyle
  type UIVibrancyEffectStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A content configuration for a list-based content view.
   * https://developer.apple.com/documentation/uikit/uilistcontentconfiguration
   */
  interface UIListContentConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600529-cellconfiguration
    cellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600545-subtitlecellconfiguration
    subtitleCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600550-valuecellconfiguration
    valueCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600542-sidebarcellconfiguration
    sidebarCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600544-sidebarsubtitlecellconfiguration
    sidebarSubtitleCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3667731-accompaniedsidebarcellconfigurat
    accompaniedSidebarCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3667732-accompaniedsidebarsubtitlecellco
    accompaniedSidebarSubtitleCellConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600537-plainheaderconfiguration
    plainHeaderConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600536-plainfooterconfiguration
    plainFooterConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600532-groupedheaderconfiguration
    groupedHeaderConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600531-groupedfooterconfiguration
    groupedFooterConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3752191-prominentinsetgroupedheaderconfi
    prominentInsetGroupedHeaderConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3752190-extraprominentinsetgroupedheader
    extraProminentInsetGroupedHeaderConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600543-sidebarheaderconfiguration
    sidebarHeaderConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600533-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600546-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600527-attributedtext
    attributedText(): NSAttributedString;
    setAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600540-secondarytext
    secondaryText(): string | cocoascript.NSString;
    setSecondaryText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600539-secondaryattributedtext
    secondaryAttributedText(): NSAttributedString;
    setSecondaryAttributedText(value: NSAttributedString): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600534-imageproperties
    imageProperties(): UIListContentImageProperties;
    setImageProperties(value: UIListContentImageProperties): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600547-textproperties
    textProperties(): UIListContentTextProperties;
    setTextProperties(value: UIListContentTextProperties): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600541-secondarytextproperties
    secondaryTextProperties(): UIListContentTextProperties;
    setSecondaryTextProperties(value: UIListContentTextProperties): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600528-axespreservingsuperviewlayoutmar
    axesPreservingSuperviewLayoutMargins(): UIAxis;
    setAxesPreservingSuperviewLayoutMargins(value: UIAxis): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600530-directionallayoutmargins
    directionalLayoutMargins(): NSDirectionalEdgeInsets;
    setDirectionalLayoutMargins(value: NSDirectionalEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600538-preferssidebysidetextandsecondar
    prefersSideBySideTextAndSecondaryText(): boolean;
    setPrefersSideBySideTextAndSecondaryText(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600535-imagetotextpadding
    imageToTextPadding(): CGFloat;
    setImageToTextPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600548-texttosecondarytexthorizontalpad
    textToSecondaryTextHorizontalPadding(): CGFloat;
    setTextToSecondaryTextHorizontalPadding(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600549-texttosecondarytextverticalpaddi
    textToSecondaryTextVerticalPadding(): CGFloat;
    setTextToSecondaryTextVerticalPadding(value: CGFloat): void;
    //
    alloc():UIListContentConfiguration;
    //
    init():UIListContentConfiguration;
  }
}

declare const UIListContentConfiguration: cocoascript.UIListContentConfiguration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffectstate
  type UISpringLoadedInteractionEffectState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An object that contains information about a placeholder in the collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext
   */
  interface UICollectionViewDropPlaceholderContext extends UIDragAnimating {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897447-commitinsertionwithdatasourceupd
    commitInsertionWithDataSourceUpdates(dataSourceUpdates: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897490-setneedscellupdate
    setNeedsCellUpdate():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897339-deleteplaceholder
    deletePlaceholder():boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897430-dragitem
    dragItem(): UIDragItem;
    setDragItem(value: UIDragItem): void;
  }
}
declare namespace cocoascript {
  /**
   * An object for tracking a placeholder cell that you added to your table during a drop operation.
   * https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext
   */
  interface UITableViewDropPlaceholderContext extends UIDragAnimating {
    // https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897487-commitinsertionwithdatasourceupd
    commitInsertionWithDataSourceUpdates(dataSourceUpdates: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897343-deleteplaceholder
    deletePlaceholder():boolean;
    // https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897407-dragitem
    dragItem(): UIDragItem;
    setDragItem(value: UIDragItem): void;
  }
}
declare namespace cocoascript {
  /**
   * Your proposed solution for handling a drop in a table view.
   * https://developer.apple.com/documentation/uikit/uitableviewdropproposal
   */
  interface UITableViewDropProposal extends UIDropProposal {
    // https://developer.apple.com/documentation/uikit/uitableviewdropproposal/2897298-initwithdropoperation
    initWithDropOperation_intent(operation: UIDropOperation, intent: UITableViewDropIntent):UITableViewDropProposal;
    // https://developer.apple.com/documentation/uikit/uitableviewdropproposal/2897495-intent
    intent(): UITableViewDropIntent;
    setIntent(value: UITableViewDropIntent): void;
    //
    alloc():UITableViewDropProposal;
    //
    init():UITableViewDropProposal;
  }
}

declare const UITableViewDropProposal: cocoascript.UITableViewDropProposal;
declare namespace cocoascript {
  /**
   * Your proposed solution for handling a drop in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal
   */
  interface UICollectionViewDropProposal extends UIDropProposal {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/2897391-initwithdropoperation
    initWithDropOperation_intent(operation: UIDropOperation, intent: UICollectionViewDropIntent):UICollectionViewDropProposal;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/2897338-intent
    intent(): UICollectionViewDropIntent;
    setIntent(value: UICollectionViewDropIntent): void;
    //
    alloc():UICollectionViewDropProposal;
    //
    init():UICollectionViewDropProposal;
  }
}

declare const UICollectionViewDropProposal: cocoascript.UICollectionViewDropProposal;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimageorientation
  type UIImageOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimageresizingmode
  type UIImageResizingMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagerenderingmode
  type UIImageRenderingMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionnavigationwritingdirection
  type NSTextSelectionNavigationWritingDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextselectionnavigationlayoutorientation
  type NSTextSelectionNavigationLayoutOrientation = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/nsdocumenttypedocumentattribute
declare const NSDocumentTypeDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nshtmltextdocumenttype
declare const NSHTMLTextDocumentType: cocoascript.NSAttributedStringDocumentType;
// https://developer.apple.com/documentation/uikit/nscharacterencodingdocumentattribute
declare const NSCharacterEncodingDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsdefaultattributesdocumentattribute
declare const NSDefaultAttributesDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsdocumenttypedocumentoption
declare const NSDocumentTypeDocumentOption: cocoascript.NSAttributedStringDocumentReadingOptionKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributeipanotation
declare const UIAccessibilitySpeechAttributeIPANotation: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributelanguage
declare const UIAccessibilitySpeechAttributeLanguage: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributepitch
declare const UIAccessibilitySpeechAttributePitch: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributepunctuation
declare const UIAccessibilitySpeechAttributePunctuation: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributequeueannouncement
declare const UIAccessibilitySpeechAttributeQueueAnnouncement: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeechattributespellout
declare const UIAccessibilitySpeechAttributeSpellOut: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextattributecustom
declare const UIAccessibilityTextAttributeCustom: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextattributeheadinglevel
declare const UIAccessibilityTextAttributeHeadingLevel: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextattributecontext
declare const UIAccessibilityTextAttributeContext: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nstrackingattributename
declare const NSTrackingAttributeName: cocoascript.NSAttributedStringKey;
// https://developer.apple.com/documentation/uikit/nstexteffectletterpressstyle
declare const NSTextEffectLetterpressStyle: cocoascript.NSTextEffectStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylepatternsolid
declare const NSUnderlinePatternSolid: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylepatterndot
declare const NSUnderlinePatternDot: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylepatterndash
declare const NSUnderlinePatternDash: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylepatterndashdot
declare const NSUnderlinePatternDashDot: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylepatterndashdotdot
declare const NSUnderlinePatternDashDotDot: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsunderlinestylebyword
declare const NSUnderlineByWord: cocoascript.NSUnderlineStyle;
// https://developer.apple.com/documentation/uikit/nsbackgroundcolordocumentattribute
declare const NSBackgroundColorDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nscocoaversiondocumentattribute
declare const NSCocoaVersionDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsdefaulttabintervaldocumentattribute
declare const NSDefaultTabIntervalDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nshyphenationfactordocumentattribute
declare const NSHyphenationFactorDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nspapermargindocumentattribute
declare const NSPaperMarginDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nspapersizedocumentattribute
declare const NSPaperSizeDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsreadonlydocumentattribute
declare const NSReadOnlyDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nssourcetextscalingdocumentattribute
declare const NSSourceTextScalingDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nstextlayoutsectionsattribute
declare const NSTextLayoutSectionsAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nstextscalingdocumentattribute
declare const NSTextScalingDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsviewmodedocumentattribute
declare const NSViewModeDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsviewsizedocumentattribute
declare const NSViewSizeDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsviewzoomdocumentattribute
declare const NSViewZoomDocumentAttribute: cocoascript.NSAttributedStringDocumentAttributeKey;
// https://developer.apple.com/documentation/uikit/nsplaintextdocumenttype
declare const NSPlainTextDocumentType: cocoascript.NSAttributedStringDocumentType;
// https://developer.apple.com/documentation/uikit/nsrtftextdocumenttype
declare const NSRTFTextDocumentType: cocoascript.NSAttributedStringDocumentType;
// https://developer.apple.com/documentation/uikit/nsrtfdtextdocumenttype
declare const NSRTFDTextDocumentType: cocoascript.NSAttributedStringDocumentType;
// https://developer.apple.com/documentation/uikit/nstextlayoutsectionorientation
declare const NSTextLayoutSectionOrientation: cocoascript.NSTextLayoutSectionKey;
// https://developer.apple.com/documentation/uikit/nstextlayoutsectionrange
declare const NSTextLayoutSectionRange: cocoascript.NSTextLayoutSectionKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nstextwritingdirection
  type NSTextWritingDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nscontrolcharacteraction
  type NSControlCharacterAction = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/nstabcolumnterminatorsattributename
declare const NSTabColumnTerminatorsAttributeName: cocoascript.NSTextTabOptionKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptorclass
  type UIFontDescriptorClass = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uieventbuttonmask
  type UIEventButtonMask = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uieventtype
  type UIEventType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uieventsubtype
  type UIEventSubtype = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitouchtype
  type UITouchType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitouchphase
  type UITouchPhase = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitouchproperties
  type UITouchProperties = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipressphase
  type UIPressPhase = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipresstype
  type UIPressType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipreviewactionstyle
  type UIPreviewActionStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An effect where the pointer slides under the given view and morphs into the view's shape.
   * https://developer.apple.com/documentation/uikit/uipointerhighlighteffect
   */
  interface UIPointerHighlightEffect extends UIPointerEffect {
    //
    alloc():UIPointerHighlightEffect;
    //
    init():UIPointerHighlightEffect;
  }
}

declare const UIPointerHighlightEffect: cocoascript.UIPointerHighlightEffect;
declare namespace cocoascript {
  /**
   * An effect where visual changes are applied to the view and the pointer retains its default shape.
   * https://developer.apple.com/documentation/uikit/uipointerhovereffect
   */
  interface UIPointerHoverEffect extends UIPointerEffect {
    // https://developer.apple.com/documentation/uikit/uipointerhovereffect/3539015-preferredtintmode
    preferredTintMode(): UIPointerEffectTintMode;
    setPreferredTintMode(value: UIPointerEffectTintMode): void;
    // https://developer.apple.com/documentation/uikit/uipointerhovereffect/3539016-prefersscaledcontent
    prefersScaledContent(): boolean;
    setPrefersScaledContent(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipointerhovereffect/3539017-prefersshadow
    prefersShadow(): boolean;
    setPrefersShadow(value: boolean): void;
    //
    alloc():UIPointerHoverEffect;
    //
    init():UIPointerHoverEffect;
  }
}

declare const UIPointerHoverEffect: cocoascript.UIPointerHoverEffect;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibarbuttonsystemitem
  type UIBarButtonSystemItem = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibarbuttonitemstyle
  type UIBarButtonItemStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  interface UIPointerAccessoryPosition {
  }
}
// https://developer.apple.com/documentation/uikit/uipointerlockstatedidchangenotification
declare const UIPointerLockStateDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipencilpreferredaction
  type UIPencilPreferredAction = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uimenucontrollerarrowdirection
  type UIMenuControllerArrowDirection = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uimenucontrollerwillshowmenunotification
declare const UIMenuControllerWillShowMenuNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uimenucontrollerdidshowmenunotification
declare const UIMenuControllerDidShowMenuNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uimenucontrollerwillhidemenunotification
declare const UIMenuControllerWillHideMenuNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uimenucontrollerdidhidemenunotification
declare const UIMenuControllerDidHideMenuNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uimenucontrollermenuframedidchangenotification
declare const UIMenuControllerMenuFrameDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiapplicationshortcuticontype
  type UIApplicationShortcutIconType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitytraits
  type UIAccessibilityTraits = number;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitynotifications
  type UIAccessibilityNotifications = number;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitynavigationstyle
  type UIAccessibilityNavigationStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilityzoomtype
  type UIAccessibilityZoomType = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextconsole
declare const UIAccessibilityTextualContextConsole: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextfilesystem
declare const UIAccessibilityTextualContextFileSystem: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextmessaging
declare const UIAccessibilityTextualContextMessaging: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextnarrative
declare const UIAccessibilityTextualContextNarrative: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextsourcecode
declare const UIAccessibilityTextualContextSourceCode: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextspreadsheet
declare const UIAccessibilityTextualContextSpreadsheet: cocoascript.UIAccessibilityTextualContext;
// https://developer.apple.com/documentation/uikit/uiaccessibilitytextualcontextwordprocessing
declare const UIAccessibilityTextualContextWordProcessing: cocoascript.UIAccessibilityTextualContext;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilityscrolldirection
  type UIAccessibilityScrollDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearch
  type UIAccessibilityCustomRotorSearch = cocoascript.UIAccessibilityCustomRotorSearchPredicate;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotordirection
  type UIAccessibilityCustomRotorDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilitycustomsystemrotortype
  type UIAccessibilityCustomSystemRotorType = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiaccessibilityswitchcontrolstatusdidchangenotification
declare const UIAccessibilitySwitchControlStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityelementfocusednotification
declare const UIAccessibilityElementFocusedNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityreducetransparencystatusdidchangenotification
declare const UIAccessibilityReduceTransparencyStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilitybuttonshapesenabledstatusdidchangenotification
declare const UIAccessibilityButtonShapesEnabledStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityvoiceoverstatusdidchangenotification
declare const UIAccessibilityVoiceOverStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityannouncementdidfinishnotification
declare const UIAccessibilityAnnouncementDidFinishNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityboldtextstatusdidchangenotification
declare const UIAccessibilityBoldTextStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityclosedcaptioningstatusdidchangenotification
declare const UIAccessibilityClosedCaptioningStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilitydarkersystemcolorsstatusdidchangenotification
declare const UIAccessibilityDarkerSystemColorsStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilitygrayscalestatusdidchangenotification
declare const UIAccessibilityGrayscaleStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityinvertcolorsstatusdidchangenotification
declare const UIAccessibilityInvertColorsStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityassistivetouchstatusdidchangenotification
declare const UIAccessibilityAssistiveTouchStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityguidedaccessstatusdidchangenotification
declare const UIAccessibilityGuidedAccessStatusDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccessibilityassistivetechnologyidentifier
  type UIAccessibilityAssistiveTechnologyIdentifier = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uiaccessibilitymonoaudiostatusdidchangenotification
declare const UIAccessibilityMonoAudioStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeakscreenstatusdidchangenotification
declare const UIAccessibilitySpeakScreenStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityspeakselectionstatusdidchangenotification
declare const UIAccessibilitySpeakSelectionStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityhearingdevicepairedeardidchangenotification
declare const UIAccessibilityHearingDevicePairedEarDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityreducemotionstatusdidchangenotification
declare const UIAccessibilityReduceMotionStatusDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiaccessibilityshaketoundodidchangenotification
declare const UIAccessibilityShakeToUndoDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibarmetrics
  type UIBarMetrics = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibarposition
  type UIBarPosition = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The methods adopted by the object you use to manage user interactions with items in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdelegate
   */
  interface UICollectionViewDelegate extends UIScrollViewDelegate {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618095-collectionview
    collectionView_shouldSelectItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618032-collectionview
    collectionView_didSelectItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618067-collectionview
    collectionView_shouldDeselectItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618035-collectionview
    collectionView_didDeselectItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3183916-collectionview
    collectionView_shouldBeginMultipleSelectionInteractionAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3183915-collectionview
    collectionView_didBeginMultipleSelectionInteractionAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3183917-collectionviewdidendmultiplesele
    collectionViewDidEndMultipleSelectionInteraction(collectionView: UICollectionView):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618070-collectionview
    collectionView_shouldHighlightItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618049-collectionview
    collectionView_didHighlightItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618027-collectionview
    collectionView_didUnhighlightItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618087-collectionview
    collectionView_willDisplayCell_forItemAtIndexPath(collectionView: UICollectionView, cell: UICollectionViewCell, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618062-collectionview
    collectionView_willDisplaySupplementaryView_forElementKind_atIndexPath(collectionView: UICollectionView, view: UICollectionReusableView, elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618006-collectionview
    collectionView_didEndDisplayingCell_forItemAtIndexPath(collectionView: UICollectionView, cell: UICollectionViewCell, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618036-collectionview
    collectionView_didEndDisplayingSupplementaryView_forElementOfKind_atIndexPath(collectionView: UICollectionView, view: UICollectionReusableView, elementKind: string | cocoascript.NSString, indexPath: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618100-collectionview
    collectionView_transitionLayoutForOldLayout_newLayout(collectionView: UICollectionView, fromLayout: UICollectionViewLayout, toLayout: UICollectionViewLayout):UICollectionViewTransitionLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618007-collectionview
    collectionView_targetContentOffsetForProposedContentOffset(collectionView: UICollectionView, proposedContentOffset: CGPoint):CGPoint;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618052-collectionview
    collectionView_targetIndexPathForMoveFromItemAtIndexPath_toProposedIndexPath(collectionView: UICollectionView, currentIndexPath: NSIndexPath, proposedIndexPath: NSIndexPath):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3295917-collectionview
    collectionView_contextMenuConfigurationForItemAtIndexPath_point(collectionView: UICollectionView, indexPath: NSIndexPath, point: CGPoint):UIContextMenuConfiguration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3295918-collectionview
    collectionView_previewForDismissingContextMenuWithConfiguration(collectionView: UICollectionView, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3295919-collectionview
    collectionView_previewForHighlightingContextMenuWithConfiguration(collectionView: UICollectionView, configuration: UIContextMenuConfiguration):UITargetedPreview;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3601203-collectionview
    collectionView_willDisplayContextMenuWithConfiguration_animator(collectionView: UICollectionView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3601204-collectionview
    collectionView_willEndContextMenuInteractionWithConfiguration_animator(collectionView: UICollectionView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3375794-collectionview
    collectionView_willPerformPreviewActionForMenuWithConfiguration_animator(collectionView: UICollectionView, configuration: UIContextMenuConfiguration, animator: UIContextMenuInteractionCommitAnimating):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618013-collectionview
    collectionView_canFocusItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618066-indexpathforpreferredfocusedview
    indexPathForPreferredFocusedViewInCollectionView(collectionView: UICollectionView):NSIndexPath;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618072-collectionview
    collectionView_shouldUpdateFocusInContext(collectionView: UICollectionView, context: UICollectionViewFocusUpdateContext):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618081-collectionview
    collectionView_didUpdateFocusInContext_withAnimationCoordinator(collectionView: UICollectionView, context: UICollectionViewFocusUpdateContext, coordinator: UIFocusAnimationCoordinator):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3600426-collectionview
    collectionView_canEditItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/2897333-collectionview
    collectionView_shouldSpringLoadItemAtIndexPath_withContext(collectionView: UICollectionView, indexPath: NSIndexPath, context: UISpringLoadedInteractionContext):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618010-collectionview
    collectionView_shouldShowMenuForItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618051-collectionview
    collectionView_canPerformAction_forItemAtIndexPath_withSender(collectionView: UICollectionView, action: SEL, indexPath: NSIndexPath, sender: UICollectionViewDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/1618073-collectionview
    collectionView_performAction_forItemAtIndexPath_withSender(collectionView: UICollectionView, action: SEL, indexPath: NSIndexPath, sender: UICollectionViewDelegate):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3752185-collectionview
    collectionView_sceneActivationConfigurationForItemAtIndexPath_point(collectionView: UICollectionView, indexPath: NSIndexPath, point: CGPoint):UIWindowSceneActivationConfiguration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3752186-collectionview
    collectionView_selectionFollowsFocusForItemAtIndexPath(collectionView: UICollectionView, indexPath: NSIndexPath):boolean;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegate/3750828-collectionview
    collectionView_targetIndexPathForMoveOfItemFromOriginalIndexPath_atCurrentIndexPath_toProposedIndexPath(collectionView: UICollectionView, originalIndexPath: NSIndexPath, currentIndexPath: NSIndexPath, proposedIndexPath: NSIndexPath):NSIndexPath;
  }
}
declare namespace cocoascript {
  /**
   * A single data item when that item is within the collection view’s visible bounds.
   * https://developer.apple.com/documentation/uikit/uicollectionviewcell
   */
  interface UICollectionViewCell extends UICollectionReusableView {
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600429-backgroundconfiguration
    backgroundConfiguration(): UIBackgroundConfiguration;
    setBackgroundConfiguration(value: UIBackgroundConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600427-automaticallyupdatesbackgroundco
    automaticallyUpdatesBackgroundConfiguration(): boolean;
    setAutomaticallyUpdatesBackgroundConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620131-backgroundview
    backgroundView(): UIView;
    setBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620138-selectedbackgroundview
    selectedBackgroundView(): UIView;
    setSelectedBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600431-contentconfiguration
    contentConfiguration(): UIContentConfiguration;
    setContentConfiguration(value: UIContentConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600428-automaticallyupdatescontentconfi
    automaticallyUpdatesContentConfiguration(): boolean;
    setAutomaticallyUpdatesContentConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620133-contentview
    contentView(): UIView;
    setContentView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600430-configurationstate
    configurationState(): UICellConfigurationState;
    setConfigurationState(value: UICellConfigurationState): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600432-setneedsupdateconfiguration
    setNeedsUpdateConfiguration():void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600433-updateconfigurationusingstate
    updateConfigurationUsingState(state: UICellConfigurationState):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/3750829-configurationupdatehandler
    configurationUpdateHandler(): UICollectionViewCellConfigurationUpdateHandler;
    setConfigurationUpdateHandler(value: UICollectionViewCellConfigurationUpdateHandler): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620130-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620134-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcell/2897262-dragstatedidchange
    dragStateDidChange(dragState: UICollectionViewCellDragState):void;
    //
    alloc():UICollectionViewCell;
    //
    init():UICollectionViewCell;
  }
}

declare const UICollectionViewCell: cocoascript.UICollectionViewCell;
declare namespace cocoascript {
  /**
   * A view that defines the behavior for all cells and supplementary views presented by a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionreusableview
   */
  interface UICollectionReusableView extends UIView {
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620136-reuseidentifier
    reuseIdentifier(): string | cocoascript.NSString;
    setReuseIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620141-prepareforreuse
    prepareForReuse():void;
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620132-preferredlayoutattributesfitting
    preferredLayoutAttributesFittingAttributes(layoutAttributes: UICollectionViewLayoutAttributes):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620139-applylayoutattributes
    applyLayoutAttributes(layoutAttributes: UICollectionViewLayoutAttributes):void;
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620140-willtransitionfromlayout
    willTransitionFromLayout_toLayout(oldLayout: UICollectionViewLayout, newLayout: UICollectionViewLayout):void;
    // https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620129-didtransitionfromlayout
    didTransitionFromLayout_toLayout(oldLayout: UICollectionViewLayout, newLayout: UICollectionViewLayout):void;
    //
    alloc():UICollectionReusableView;
    //
    init():UICollectionReusableView;
  }
}

declare const UICollectionReusableView: cocoascript.UICollectionReusableView;
declare namespace cocoascript {
  /**
   * A placeholder for an item dropped on a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholder
   */
  interface UICollectionViewDropPlaceholder extends UICollectionViewPlaceholder {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholder/2921637-previewparametersprovider
    previewParametersProvider(): UICollectionViewCell;
    setPreviewParametersProvider(value: UICollectionViewCell): void;
    //
    alloc():UICollectionViewDropPlaceholder;
    //
    init():UICollectionViewDropPlaceholder;
  }
}

declare const UICollectionViewDropPlaceholder: cocoascript.UICollectionViewDropPlaceholder;
declare namespace cocoascript {
  /**
   * A placeholder for an item dragged or dropped on a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewplaceholder
   */
  interface UICollectionViewPlaceholder extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewplaceholder/2921639-initwithinsertionindexpath
    initWithInsertionIndexPath_reuseIdentifier(insertionIndexPath: NSIndexPath, reuseIdentifier: string | cocoascript.NSString):UICollectionViewPlaceholder;
    // https://developer.apple.com/documentation/uikit/uicollectionviewplaceholder/2921635-cellupdatehandler
    cellUpdateHandler(): UICollectionViewCell;
    setCellUpdateHandler(value: UICollectionViewCell): void;
    //
    alloc():UICollectionViewPlaceholder;
    //
    init():UICollectionViewPlaceholder;
  }
}

declare const UICollectionViewPlaceholder: cocoascript.UICollectionViewPlaceholder;
declare namespace cocoascript {
  /**
   * A context object that provides information relevant to a specific focus update from one view to another.
   * https://developer.apple.com/documentation/uikit/uitableviewfocusupdatecontext
   */
  interface UITableViewFocusUpdateContext extends UIFocusUpdateContext {
    // https://developer.apple.com/documentation/uikit/uitableviewfocusupdatecontext/1614930-previouslyfocusedindexpath
    previouslyFocusedIndexPath(): NSIndexPath;
    setPreviouslyFocusedIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uitableviewfocusupdatecontext/1614919-nextfocusedindexpath
    nextFocusedIndexPath(): NSIndexPath;
    setNextFocusedIndexPath(value: NSIndexPath): void;
    //
    alloc():UITableViewFocusUpdateContext;
    //
    init():UITableViewFocusUpdateContext;
  }
}

declare const UITableViewFocusUpdateContext: cocoascript.UITableViewFocusUpdateContext;
declare namespace cocoascript {
  /**
   * A reusable view that you place at the top or bottom of a table section to display additional information for that section.
   * https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview
   */
  interface UITableViewHeaderFooterView extends UIView {
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624918-initwithreuseidentifier
    initWithReuseIdentifier(reuseIdentifier: string | cocoascript.NSString):UITableViewHeaderFooterView;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624917-initwithcoder
    initWithCoder(coder: NSCoder):UITableViewHeaderFooterView;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624909-reuseidentifier
    reuseIdentifier(): string | cocoascript.NSString;
    setReuseIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624916-prepareforreuse
    prepareForReuse():void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600594-backgroundconfiguration
    backgroundConfiguration(): UIBackgroundConfiguration;
    setBackgroundConfiguration(value: UIBackgroundConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600592-automaticallyupdatesbackgroundco
    automaticallyUpdatesBackgroundConfiguration(): boolean;
    setAutomaticallyUpdatesBackgroundConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624913-backgroundview
    backgroundView(): UIView;
    setBackgroundView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600597-defaultcontentconfiguration
    defaultContentConfiguration():UIListContentConfiguration;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600596-contentconfiguration
    contentConfiguration(): UIContentConfiguration;
    setContentConfiguration(value: UIContentConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600593-automaticallyupdatescontentconfi
    automaticallyUpdatesContentConfiguration(): boolean;
    setAutomaticallyUpdatesContentConfiguration(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624914-contentview
    contentView(): UIView;
    setContentView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624912-textlabel
    textLabel(): UILabel;
    setTextLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624910-detailtextlabel
    detailTextLabel(): UILabel;
    setDetailTextLabel(value: UILabel): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600595-configurationstate
    configurationState(): UIViewConfigurationState;
    setConfigurationState(value: UIViewConfigurationState): void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600598-setneedsupdateconfiguration
    setNeedsUpdateConfiguration():void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600599-updateconfigurationusingstate
    updateConfigurationUsingState(state: UIViewConfigurationState):void;
    // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3750917-configurationupdatehandler
    configurationUpdateHandler(): UITableViewHeaderFooterViewConfigurationUpdateHandler;
    setConfigurationUpdateHandler(value: UITableViewHeaderFooterViewConfigurationUpdateHandler): void;
    //
    alloc():UITableViewHeaderFooterView;
    //
    init():UITableViewHeaderFooterView;
  }
}

declare const UITableViewHeaderFooterView: cocoascript.UITableViewHeaderFooterView;
declare namespace cocoascript {
  /**
   * The set of actions to perform when swiping on rows of a table.
   * https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration
   */
  interface UISwipeActionsConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902363-configurationwithactions
    configurationWithActions(actions: UIContextualAction):UISwipeActionsConfiguration;
    // https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902360-actions
    actions(): UIContextualAction;
    setActions(value: UIContextualAction): void;
    // https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902361-performsfirstactionwithfullswipe
    performsFirstActionWithFullSwipe(): boolean;
    setPerformsFirstActionWithFullSwipe(value: boolean): void;
    //
    alloc():UISwipeActionsConfiguration;
    //
    init():UISwipeActionsConfiguration;
  }
}

declare const UISwipeActionsConfiguration: cocoascript.UISwipeActionsConfiguration;
declare namespace cocoascript {
  /**
   * An action to display when the user swipes a table row.
   * https://developer.apple.com/documentation/uikit/uicontextualaction
   */
  interface UIContextualAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902340-contextualactionwithstyle
    contextualActionWithStyle_title_handler(style: UIContextualActionStyle, title: string | cocoascript.NSString, handler: UIContextualActionHandler):UIContextualAction;
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902342-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902335-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902337-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902341-handler
    handler(): UIContextualActionHandler;
    setHandler(value: UIContextualActionHandler): void;
    // https://developer.apple.com/documentation/uikit/uicontextualaction/2902334-style
    style(): UIContextualActionStyle;
    setStyle(value: UIContextualActionStyle): void;
    //
    alloc():UIContextualAction;
    //
    init():UIContextualAction;
  }
}

declare const UIContextualAction: cocoascript.UIContextualAction;
declare namespace cocoascript {
  /**
   * A placeholder cell that supports customizing the drop preview parameters.
   * https://developer.apple.com/documentation/uikit/uitableviewdropplaceholder
   */
  interface UITableViewDropPlaceholder extends UITableViewPlaceholder {
    // https://developer.apple.com/documentation/uikit/uitableviewdropplaceholder/2921668-previewparametersprovider
    previewParametersProvider(): UITableViewCell;
    setPreviewParametersProvider(value: UITableViewCell): void;
    //
    alloc():UITableViewDropPlaceholder;
    //
    init():UITableViewDropPlaceholder;
  }
}

declare const UITableViewDropPlaceholder: cocoascript.UITableViewDropPlaceholder;
declare namespace cocoascript {
  /**
   * An object that contains information about a placeholder cell being inserted into a table.
   * https://developer.apple.com/documentation/uikit/uitableviewplaceholder
   */
  interface UITableViewPlaceholder extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitableviewplaceholder/2921666-initwithinsertionindexpath
    initWithInsertionIndexPath_reuseIdentifier_rowHeight(insertionIndexPath: NSIndexPath, reuseIdentifier: string | cocoascript.NSString, rowHeight: CGFloat):UITableViewPlaceholder;
    // https://developer.apple.com/documentation/uikit/uitableviewplaceholder/2921671-cellupdatehandler
    cellUpdateHandler(): UITableViewCell;
    setCellUpdateHandler(value: UITableViewCell): void;
    //
    alloc():UITableViewPlaceholder;
    //
    init():UITableViewPlaceholder;
  }
}

declare const UITableViewPlaceholder: cocoascript.UITableViewPlaceholder;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrollviewcontentinsetadjustmentbehavior
  type UIScrollViewContentInsetAdjustmentBehavior = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrollviewdecelerationrate
  type UIScrollViewDecelerationRate = cocoascript.CGFloat;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrollviewindicatorstyle
  type UIScrollViewIndicatorStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrollviewkeyboarddismissmode
  type UIScrollViewKeyboardDismissMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscrollviewindexdisplaymode
  type UIScrollViewIndexDisplayMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwebviewnavigationtype
  type UIWebViewNavigationType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwebpaginationbreakingmode
  type UIWebPaginationBreakingMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwebpaginationmode
  type UIWebPaginationMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The interface that determines if a text view is a drag source.
   * https://developer.apple.com/documentation/uikit/uitextdraggable
   */
  interface UITextDraggable extends UITextInput {
    // https://developer.apple.com/documentation/uikit/uitextdraggable/2890913-textdragactive
    textDragActive(): boolean;
    setTextDragActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextdraggable/2890911-textdraginteraction
    textDragInteraction(): UIDragInteraction;
    setTextDragInteraction(value: UIDragInteraction): void;
    // https://developer.apple.com/documentation/uikit/uitextdraggable/2890903-textdragdelegate
    textDragDelegate(): UITextDragDelegate;
    setTextDragDelegate(value: UITextDragDelegate): void;
    // https://developer.apple.com/documentation/uikit/uitextdraggable/2897255-textdragoptions
    textDragOptions(): UITextDragOptions;
    setTextDragOptions(value: UITextDragOptions): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdragoptions
  type UITextDragOptions = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The interface that determines if a text view is a drop destination.
   * https://developer.apple.com/documentation/uikit/uitextdroppable
   */
  interface UITextDroppable extends UITextInput {
    // https://developer.apple.com/documentation/uikit/uitextdroppable/2890852-textdropactive
    textDropActive(): boolean;
    setTextDropActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uitextdroppable/2890862-textdropinteraction
    textDropInteraction(): UIDropInteraction;
    setTextDropInteraction(value: UIDropInteraction): void;
    // https://developer.apple.com/documentation/uikit/uitextdroppable/2890860-textdropdelegate
    textDropDelegate(): UITextDropDelegate;
    setTextDropDelegate(value: UITextDropDelegate): void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdropeditability
  type UITextDropEditability = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * Renders previews of text dragged by the user.
   * https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer
   */
  interface UITextDragPreviewRenderer extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890970-initwithlayoutmanager
    initWithLayoutManager_range(layoutManager: NSLayoutManager, range: NSRange):UITextDragPreviewRenderer;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891008-initwithlayoutmanager
    initWithLayoutManager_range_unifyRects(layoutManager: NSLayoutManager, range: NSRange, unifyRects: boolean):UITextDragPreviewRenderer;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890974-bodyrect
    bodyRect(): CGRect;
    setBodyRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891020-firstlinerect
    firstLineRect(): CGRect;
    setFirstLineRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891017-lastlinerect
    lastLineRect(): CGRect;
    setLastLineRect(value: CGRect): void;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890984-adjustfirstlinerect
    adjustFirstLineRect_bodyRect_lastLineRect_textOrigin(firstLineRect: CGRect, bodyRect: CGRect, lastLineRect: CGRect, origin: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891018-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891019-layoutmanager
    layoutManager(): NSLayoutManager;
    setLayoutManager(value: NSLayoutManager): void;
    //
    alloc():UITextDragPreviewRenderer;
    //
    init():UITextDragPreviewRenderer;
  }
}

declare const UITextDragPreviewRenderer: cocoascript.UITextDragPreviewRenderer;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdropaction
  type UITextDropAction = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdropperformer
  type UITextDropPerformer = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdropprogressmode
  type UITextDropProgressMode = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * A protocol that supports pasting tokens.
   * https://developer.apple.com/documentation/uikit/uisearchtextfieldpasteitem
   */
  interface UISearchTextFieldPasteItem extends UITextPasteItem {
    // https://developer.apple.com/documentation/uikit/uisearchtextfieldpasteitem/3295955-setsearchtokenresult
    setSearchTokenResult(token: UISearchToken):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiblureffectstyle
  type UIBlurEffectStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * Methods that a navigation bar calls before and after it modifies its stack of navigation items.
   * https://developer.apple.com/documentation/uikit/uinavigationbardelegate
   */
  interface UINavigationBarDelegate extends UIBarPositioningDelegate {
    // https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624941-navigationbar
    navigationBar_shouldPushItem(navigationBar: UINavigationBar, item: UINavigationItem):boolean;
    // https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624964-navigationbar
    navigationBar_didPushItem(navigationBar: UINavigationBar, item: UINavigationItem):void;
    // https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624944-navigationbar
    navigationBar_shouldPopItem(navigationBar: UINavigationBar, item: UINavigationItem):boolean;
    // https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624948-navigationbar
    navigationBar_didPopItem(navigationBar: UINavigationBar, item: UINavigationItem):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitabbarsystemitem
  type UITabBarSystemItem = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uilargecontentviewerinteractionenabledstatusdidchangenotification
declare const UILargeContentViewerInteractionEnabledStatusDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * A relationship between two dynamic items, or between a dynamic item and an anchor point.
   * https://developer.apple.com/documentation/uikit/uiattachmentbehavior
   */
  interface UIAttachmentBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621314-slidingattachmentwithitem
    slidingAttachmentWithItem_attachmentAnchor_axisOfTranslation(item: UIDynamicItem, point: CGPoint, axis: CGVector):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621318-slidingattachmentwithitem
    slidingAttachmentWithItem_attachedToItem_attachmentAnchor_axisOfTranslation(item1: UIDynamicItem, item2: UIDynamicItem, point: CGPoint, axis: CGVector):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621308-fixedattachmentwithitem
    fixedAttachmentWithItem_attachedToItem_attachmentAnchor(item1: UIDynamicItem, item2: UIDynamicItem, point: CGPoint):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621320-limitattachmentwithitem
    limitAttachmentWithItem_offsetFromCenter_attachedToItem_offsetFromCenter(item1: UIDynamicItem, offset1: UIOffset, item2: UIDynamicItem, offset2: UIOffset):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621322-pinattachmentwithitem
    pinAttachmentWithItem_attachedToItem_attachmentAnchor(item1: UIDynamicItem, item2: UIDynamicItem, point: CGPoint):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621297-initwithitem
    initWithItem_attachedToAnchor(item: UIDynamicItem, point: CGPoint):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621309-initwithitem
    initWithItem_attachedToItem(item1: UIDynamicItem, item2: UIDynamicItem):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621301-initwithitem
    initWithItem_offsetFromCenter_attachedToAnchor(item: UIDynamicItem, offset: UIOffset, point: CGPoint):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621298-initwithitem
    initWithItem_offsetFromCenter_attachedToItem_offsetFromCenter(item1: UIDynamicItem, offset1: UIOffset, item2: UIDynamicItem, offset2: UIOffset):UIAttachmentBehavior;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621311-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621315-anchorpoint
    anchorPoint(): CGPoint;
    setAnchorPoint(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621312-attachedbehaviortype
    attachedBehaviorType(): UIAttachmentBehaviorType;
    setAttachedBehaviorType(value: UIAttachmentBehaviorType): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621302-damping
    damping(): CGFloat;
    setDamping(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621321-frequency
    frequency(): CGFloat;
    setFrequency(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621304-length
    length(): CGFloat;
    setLength(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621307-frictiontorque
    frictionTorque(): CGFloat;
    setFrictionTorque(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uiattachmentbehavior/1621294-attachmentrange
    attachmentRange(): UIFloatRange;
    setAttachmentRange(value: UIFloatRange): void;
    //
    alloc():UIAttachmentBehavior;
    //
    init():UIAttachmentBehavior;
  }
}

declare const UIAttachmentBehavior: cocoascript.UIAttachmentBehavior;
// https://developer.apple.com/documentation/uikit/uioffsetzero
declare const UIOffsetZero: cocoascript.UIOffset;
// https://developer.apple.com/documentation/uikit/uiedgeinsetszero
declare const UIEdgeInsetsZero: cocoascript.UIEdgeInsets;
// https://developer.apple.com/documentation/uikit/nsdirectionaledgeinsetszero
declare const NSDirectionalEdgeInsetsZero: cocoascript.NSDirectionalEdgeInsets;
// https://developer.apple.com/documentation/uikit/uiapplicationopenexternalurloptionseventattributionkey
declare const UIApplicationOpenExternalURLOptionsEventAttributionKey: cocoascript.UIApplicationOpenExternalURLOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionseventattributionkey
declare const UIApplicationOpenURLOptionsEventAttributionKey: cocoascript.UIApplicationOpenURLOptionsKey;
// https://developer.apple.com/documentation/uikit/uinavigationcontrollerhideshowbarduration
declare const UINavigationControllerHideShowBarDuration: cocoascript.CGFloat;
declare namespace cocoascript {
  /**
   * The methods adopted by the object you use to manage changes to a split view interface.
   * https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate
   */
  interface UISplitViewControllerDelegate {
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623169-splitviewcontrollerpreferredinte
    splitViewControllerPreferredInterfaceOrientationForPresentation(splitViewController: UISplitViewController):UIInterfaceOrientation;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623178-splitviewcontrollersupportedinte
    splitViewControllerSupportedInterfaceOrientations(splitViewController: UISplitViewController):UIInterfaceOrientationMask;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623176-splitviewcontroller
    splitViewController_willChangeToDisplayMode(svc: UISplitViewController, displayMode: UISplitViewControllerDisplayMode):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623192-targetdisplaymodeforactioninspli
    targetDisplayModeForActionInSplitViewController(svc: UISplitViewController):UISplitViewControllerDisplayMode;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580925-splitviewcontroller
    splitViewController_topColumnForCollapsingToProposedTopColumn(svc: UISplitViewController, proposedTopColumn: UISplitViewControllerColumn):UISplitViewControllerColumn;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580926-splitviewcontroller
    splitViewController_willHideColumn(svc: UISplitViewController, column: UISplitViewControllerColumn):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580928-splitviewcontrollerdidcollapse
    splitViewControllerDidCollapse(svc: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580924-splitviewcontroller
    splitViewController_displayModeForExpandingToProposedDisplayMode(svc: UISplitViewController, proposedDisplayMode: UISplitViewControllerDisplayMode):UISplitViewControllerDisplayMode;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580927-splitviewcontroller
    splitViewController_willShowColumn(svc: UISplitViewController, column: UISplitViewControllerColumn):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3580929-splitviewcontrollerdidexpand
    splitViewControllerDidExpand(svc: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3650237-splitviewcontrollerinteractivepr
    splitViewControllerInteractivePresentationGestureWillBegin(svc: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/3650236-splitviewcontrollerinteractivepr
    splitViewControllerInteractivePresentationGestureDidEnd(svc: UISplitViewController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623197-primaryviewcontrollerforcollapsi
    primaryViewControllerForCollapsingSplitViewController(splitViewController: UISplitViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623184-splitviewcontroller
    splitViewController_collapseSecondaryViewController_ontoPrimaryViewController(splitViewController: UISplitViewController, secondaryViewController: UIViewController, primaryViewController: UIViewController):boolean;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623188-primaryviewcontrollerforexpandin
    primaryViewControllerForExpandingSplitViewController(splitViewController: UISplitViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623189-splitviewcontroller
    splitViewController_separateSecondaryViewControllerFromPrimaryViewController(splitViewController: UISplitViewController, primaryViewController: UIViewController):UIViewController;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623168-splitviewcontroller
    splitViewController_showViewController_sender(splitViewController: UISplitViewController, vc: UIViewController, sender: UISplitViewControllerDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623204-splitviewcontroller
    splitViewController_showDetailViewController_sender(splitViewController: UISplitViewController, vc: UIViewController, sender: UISplitViewControllerDelegate):boolean;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623174-splitviewcontroller
    splitViewController_shouldHideViewController_inOrientation(svc: UISplitViewController, vc: UIViewController, orientation: UIInterfaceOrientation):boolean;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623175-splitviewcontroller
    splitViewController_willHideViewController_withBarButtonItem_forPopoverController(svc: UISplitViewController, aViewController: UIViewController, barButtonItem: UIBarButtonItem, pc: UIPopoverController):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623202-splitviewcontroller
    splitViewController_willShowViewController_invalidatingBarButtonItem(svc: UISplitViewController, aViewController: UIViewController, barButtonItem: UIBarButtonItem):void;
    // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdelegate/1623186-splitviewcontroller
    splitViewController_popoverController_willPresentViewController(svc: UISplitViewController, pc: UIPopoverController, aViewController: UIViewController):void;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdisplaymode
  type UISplitViewControllerDisplayMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollersplitbehavior
  type UISplitViewControllerSplitBehavior = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uisplitviewcontrollerautomaticdimension
declare const UISplitViewControllerAutomaticDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerstyle
  type UISplitViewControllerStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollercolumn
  type UISplitViewControllerColumn = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerdisplaymodebuttonvisibility
  type UISplitViewControllerDisplayModeButtonVisibility = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisplitviewcontrollerprimaryedge
  type UISplitViewControllerPrimaryEdge = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uinavigationitemlargetitledisplaymode
  type UINavigationItemLargeTitleDisplayMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uinavigationitembackbuttondisplaymode
  type UINavigationItemBackButtonDisplayMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipageviewcontrolleroptionskey
  type UIPageViewControllerOptionsKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipageviewcontrollernavigationdirection
  type UIPageViewControllerNavigationDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipageviewcontrollernavigationorientation
  type UIPageViewControllerNavigationOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipageviewcontrollerspinelocation
  type UIPageViewControllerSpineLocation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipageviewcontrollertransitionstyle
  type UIPageViewControllerTransitionStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * An object that represents a height where a sheet naturally rests.
   * https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetent
   */
  interface UISheetPresentationControllerDetent extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetent/3801916-largedetent
    largeDetent():UISheetPresentationControllerDetent;
    // https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetent/3801917-mediumdetent
    mediumDetent():UISheetPresentationControllerDetent;
    //
    alloc():UISheetPresentationControllerDetent;
    //
    init():UISheetPresentationControllerDetent;
  }
}

declare const UISheetPresentationControllerDetent: cocoascript.UISheetPresentationControllerDetent;
// https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerautomaticdimension
declare const UISheetPresentationControllerAutomaticDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  /**
   * A selectable search parameter.
   * https://developer.apple.com/documentation/uikit/uisearchsuggestionitem
   */
  interface UISearchSuggestionItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584831-initwithlocalizedsuggestion
    initWithLocalizedSuggestion_localizedDescription_iconImage(suggestion: string | cocoascript.NSString, description: string | cocoascript.NSString, iconImage: UIImage):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584836-suggestionwithlocalizedsuggestio
    suggestionWithLocalizedSuggestion_descriptionString_iconImage(suggestion: string | cocoascript.NSString, description: string | cocoascript.NSString, iconImage: UIImage):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584830-initwithlocalizedsuggestion
    initWithLocalizedSuggestion_localizedDescription(suggestion: string | cocoascript.NSString, description: string | cocoascript.NSString):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584835-suggestionwithlocalizedsuggestio
    suggestionWithLocalizedSuggestion_descriptionString(suggestion: string | cocoascript.NSString, description: string | cocoascript.NSString):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584829-initwithlocalizedsuggestion
    initWithLocalizedSuggestion(suggestion: string | cocoascript.NSString):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584834-suggestionwithlocalizedsuggestio
    suggestionWithLocalizedSuggestion(suggestion: string | cocoascript.NSString):UISearchSuggestionItem;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584833-localizedsuggestion
    localizedSuggestion(): string | cocoascript.NSString;
    setLocalizedSuggestion(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584832-localizeddescription
    localizedDescription(): string | cocoascript.NSString;
    setLocalizedDescription(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisearchsuggestionitem/3584828-iconimage
    iconImage(): UIImage;
    setIconImage(value: UIImage): void;
    //
    alloc():UISearchSuggestionItem;
    //
    init():UISearchSuggestionItem;
  }
}

declare const UISearchSuggestionItem: cocoascript.UISearchSuggestionItem;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentbrowseruserinterfacestyle
  type UIDocumentBrowserUserInterfaceStyle = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * A custom action that you can create and add to a document browser's Edit menu or navigation bar.
   * https://developer.apple.com/documentation/uikit/uidocumentbrowseraction
   */
  interface UIDocumentBrowserAction extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874075-initwithidentifier
    initWithIdentifier_localizedTitle_availability_handler(identifier: string | cocoascript.NSString, localizedTitle: string | cocoascript.NSString, availability: UIDocumentBrowserActionAvailability, handler: NSURL):UIDocumentBrowserAction;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874076-image
    image(): UIImage;
    setImage(value: UIImage): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874070-supportedcontenttypes
    supportedContentTypes(): string | cocoascript.NSString;
    setSupportedContentTypes(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874074-supportsmultipleitems
    supportsMultipleItems(): boolean;
    setSupportsMultipleItems(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874069-identifier
    identifier(): string | cocoascript.NSString;
    setIdentifier(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874071-localizedtitle
    localizedTitle(): string | cocoascript.NSString;
    setLocalizedTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874078-availability
    availability(): UIDocumentBrowserActionAvailability;
    setAvailability(value: UIDocumentBrowserActionAvailability): void;
    //
    alloc():UIDocumentBrowserAction;
    //
    init():UIDocumentBrowserAction;
  }
}

declare const UIDocumentBrowserAction: cocoascript.UIDocumentBrowserAction;
declare namespace cocoascript {
  /**
   * An object that implements the standard loading and transition animations for a document browser.
   * https://developer.apple.com/documentation/uikit/uidocumentbrowsertransitioncontroller
   */
  interface UIDocumentBrowserTransitionController extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidocumentbrowsertransitioncontroller/2874195-loadingprogress
    loadingProgress(): NSProgress;
    setLoadingProgress(value: NSProgress): void;
    // https://developer.apple.com/documentation/uikit/uidocumentbrowsertransitioncontroller/2874176-targetview
    targetView(): UIView;
    setTargetView(value: UIView): void;
    //
    alloc():UIDocumentBrowserTransitionController;
    //
    init():UIDocumentBrowserTransitionController;
  }
}

declare const UIDocumentBrowserTransitionController: cocoascript.UIDocumentBrowserTransitionController;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentbrowsererrorcode
  type UIDocumentBrowserErrorCode = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uidocumentbrowsererrordomain
declare const UIDocumentBrowserErrorDomain: cocoascript.NSErrorDomain;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentpickermode
  type UIDocumentPickerMode = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicloudsharingpermissionoptions
  type UICloudSharingPermissionOptions = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprinterpickercompletionhandler
  type UIPrinterPickerCompletionHandler = cocoascript.NSError;
}
declare namespace cocoascript {
  /**
   * A content view for displaying list-based content.
   * https://developer.apple.com/documentation/uikit/uilistcontentview
   */
  interface UIListContentView extends UIView {
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3600554-initwithconfiguration
    initWithConfiguration(configuration: UIListContentConfiguration):UIListContentView;
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3600553-initwithcoder
    initWithCoder(coder: NSCoder):UIListContentView;
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3600552-configuration
    configuration(): UIListContentConfiguration;
    setConfiguration(value: UIListContentConfiguration): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3650226-textlayoutguide
    textLayoutGuide(): UILayoutGuide;
    setTextLayoutGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3650225-secondarytextlayoutguide
    secondaryTextLayoutGuide(): UILayoutGuide;
    setSecondaryTextLayoutGuide(value: UILayoutGuide): void;
    // https://developer.apple.com/documentation/uikit/uilistcontentview/3650224-imagelayoutguide
    imageLayoutGuide(): UILayoutGuide;
    setImageLayoutGuide(value: UILayoutGuide): void;
    //
    alloc():UIListContentView;
    //
    init():UIListContentView;
  }
}

declare const UIListContentView: cocoascript.UIListContentView;
declare namespace cocoascript {
  /**
   * An object that encapsulates a view’s state.
   * https://developer.apple.com/documentation/uikit/uiviewconfigurationstate
   */
  interface UIViewConfigurationState extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3601076-traitcollection
    traitCollection(): UITraitCollection;
    setTraitCollection(value: UITraitCollection): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3601074-selected
    selected(): boolean;
    setSelected(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3601073-highlighted
    highlighted(): boolean;
    setHighlighted(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3601072-focused
    focused(): boolean;
    setFocused(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3601071-disabled
    disabled(): boolean;
    setDisabled(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3750928-pinned
    pinned(): boolean;
    setPinned(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3600605-initwithtraitcollection
    initWithTraitCollection(traitCollection: UITraitCollection):UIViewConfigurationState;
    // https://developer.apple.com/documentation/uikit/uiviewconfigurationstate/3600604-initwithcoder
    initWithCoder(coder: NSCoder):UIViewConfigurationState;
    //
    alloc():UIViewConfigurationState;
    //
    init():UIViewConfigurationState;
  }
}

declare const UIViewConfigurationState: cocoascript.UIViewConfigurationState;
declare namespace cocoascript {
  /**
   * An object that encapsulates a cell’s state.
   * https://developer.apple.com/documentation/uikit/uicellconfigurationstate
   */
  interface UICellConfigurationState extends UIViewConfigurationState {
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3600400-editing
    editing(): boolean;
    setEditing(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3600402-swiped
    swiped(): boolean;
    setSwiped(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3600401-expanded
    expanded(): boolean;
    setExpanded(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3672180-reordering
    reordering(): boolean;
    setReordering(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3601198-celldragstate
    cellDragState(): UICellConfigurationDragState;
    setCellDragState(value: UICellConfigurationDragState): void;
    // https://developer.apple.com/documentation/uikit/uicellconfigurationstate/3601199-celldropstate
    cellDropState(): UICellConfigurationDropState;
    setCellDropState(value: UICellConfigurationDropState): void;
    //
    alloc():UICellConfigurationState;
    //
    init():UICellConfigurationState;
  }
}

declare const UICellConfigurationState: cocoascript.UICellConfigurationState;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiconfigurationstatecustomkey
  type UIConfigurationStateCustomKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiconfigurationcolortransformer
  type UIConfigurationColorTransformer = cocoascript.UIColor;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitabbaritemappearancestyle
  type UITabBarItemAppearanceStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * The timing information for animations that mimics the behavior of a spring.
   * https://developer.apple.com/documentation/uikit/uispringtimingparameters
   */
  interface UISpringTimingParameters extends NSObject {
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649802-init
    init():UISpringTimingParameters;
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649835-initwithdampingratio
    initWithDampingRatio(ratio: CGFloat):UISpringTimingParameters;
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649832-initwithdampingratio
    initWithDampingRatio_initialVelocity(ratio: CGFloat, velocity: CGVector):UISpringTimingParameters;
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649764-initwithmass
    initWithMass_stiffness_damping_initialVelocity(mass: CGFloat, stiffness: CGFloat, damping: CGFloat, velocity: CGVector):UISpringTimingParameters;
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649919-initwithcoder
    initWithCoder(coder: NSCoder):UISpringTimingParameters;
    // https://developer.apple.com/documentation/uikit/uispringtimingparameters/1649909-initialvelocity
    initialVelocity(): CGVector;
    setInitialVelocity(value: CGVector): void;
    //
    alloc():UISpringTimingParameters;
    //
    init():UISpringTimingParameters;
  }
}

declare const UISpringTimingParameters: cocoascript.UISpringTimingParameters;
declare namespace cocoascript {
  /**
   * The timing information for animations in the form of a cubic Bézier curve.
   * https://developer.apple.com/documentation/uikit/uicubictimingparameters
   */
  interface UICubicTimingParameters extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649799-init
    init():UICubicTimingParameters;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649749-initwithanimationcurve
    initWithAnimationCurve(curve: UIViewAnimationCurve):UICubicTimingParameters;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649854-initwithcontrolpoint1
    initWithControlPoint1_controlPoint2(point1: CGPoint, point2: CGPoint):UICubicTimingParameters;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649910-initwithcoder
    initWithCoder(coder: NSCoder):UICubicTimingParameters;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649841-animationcurve
    animationCurve(): UIViewAnimationCurve;
    setAnimationCurve(value: UIViewAnimationCurve): void;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649914-controlpoint1
    controlPoint1(): CGPoint;
    setControlPoint1(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uicubictimingparameters/1649907-controlpoint2
    controlPoint2(): CGPoint;
    setControlPoint2(value: CGPoint): void;
    //
    alloc():UICubicTimingParameters;
    //
    init():UICubicTimingParameters;
  }
}

declare const UICubicTimingParameters: cocoascript.UICubicTimingParameters;
declare namespace cocoascript {
  /**
   * An interface for modifying an animation while it is running.
   * https://developer.apple.com/documentation/uikit/uiviewimplicitlyanimating
   */
  interface UIViewImplicitlyAnimating extends UIViewAnimating {
    // https://developer.apple.com/documentation/uikit/uiviewimplicitlyanimating/1829436-addanimations
    addAnimations(animation: void):void;
    // https://developer.apple.com/documentation/uikit/uiviewimplicitlyanimating/1829428-addanimations
    addAnimations_delayFactor(animation: void, delayFactor: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uiviewimplicitlyanimating/1829432-addcompletion
    addCompletion(completion: UIViewAnimatingPosition):void;
    // https://developer.apple.com/documentation/uikit/uiviewimplicitlyanimating/1829444-continueanimationwithtimingparam
    continueAnimationWithTimingParameters_durationFactor(parameters: UITimingCurveProvider, durationFactor: CGFloat):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that drives an interactive animation between one view controller and another.
   * https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition
   */
  interface UIPercentDrivenInteractiveTransition extends NSObject {
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1829439-timingcurve
    timingCurve(): UITimingCurveProvider;
    setTimingCurve(value: UITimingCurveProvider): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622048-completioncurve
    completionCurve(): UIViewAnimationCurve;
    setCompletionCurve(value: UIViewAnimationCurve): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622029-duration
    duration(): CGFloat;
    setDuration(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622053-percentcomplete
    percentComplete(): CGFloat;
    setPercentComplete(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622052-completionspeed
    completionSpeed(): CGFloat;
    setCompletionSpeed(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1829427-wantsinteractivestart
    wantsInteractiveStart(): boolean;
    setWantsInteractiveStart(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622051-updateinteractivetransition
    updateInteractiveTransition(percentComplete: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1829435-pauseinteractivetransition
    pauseInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622026-cancelinteractivetransition
    cancelInteractiveTransition():void;
    // https://developer.apple.com/documentation/uikit/uipercentdriveninteractivetransition/1622035-finishinteractivetransition
    finishInteractiveTransition():void;
    //
    alloc():UIPercentDrivenInteractiveTransition;
    //
    init():UIPercentDrivenInteractiveTransition;
  }
}

declare const UIPercentDrivenInteractiveTransition: cocoascript.UIPercentDrivenInteractiveTransition;
declare namespace cocoascript {
  /**
   * A set of methods that provides support for animations associated with a view controller transition.
   * https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinator
   */
  interface UIViewControllerTransitionCoordinator extends UIViewControllerTransitionCoordinatorContext {
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinator/1619300-animatealongsidetransition
    animateAlongsideTransition_completion(animation: UIViewControllerTransitionCoordinatorContext, completion: UIViewControllerTransitionCoordinatorContext):boolean;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinator/1619295-animatealongsidetransitioninview
    animateAlongsideTransitionInView_animation_completion(view: UIView, animation: UIViewControllerTransitionCoordinatorContext, completion: UIViewControllerTransitionCoordinatorContext):boolean;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinator/1829391-notifywheninteractionchangesusin
    notifyWhenInteractionChangesUsingBlock(handler: UIViewControllerTransitionCoordinatorContext):void;
    // https://developer.apple.com/documentation/uikit/uiviewcontrollertransitioncoordinator/1619292-notifywheninteractionendsusingbl
    notifyWhenInteractionEndsUsingBlock(handler: UIViewControllerTransitionCoordinatorContext):void;
  }
}
declare namespace cocoascript {
  /**
   * An object that provides physics-related capabilities and animations for its dynamic items, and provides the context for those animations.
   * https://developer.apple.com/documentation/uikit/uidynamicanimator
   */
  interface UIDynamicAnimator extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621203-initwithreferenceview
    initWithReferenceView(view: UIView):UIDynamicAnimator;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621196-initwithcollectionviewlayout
    initWithCollectionViewLayout(layout: UICollectionViewLayout):UIDynamicAnimator;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621191-itemsinrect
    itemsInRect(rect: CGRect):UIDynamicItem;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621189-addbehavior
    addBehavior(behavior: UIDynamicBehavior):void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621201-removebehavior
    removeBehavior(behavior: UIDynamicBehavior):void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621197-removeallbehaviors
    removeAllBehaviors():void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621199-delegate
    delegate(): UIDynamicAnimatorDelegate;
    setDelegate(value: UIDynamicAnimatorDelegate): void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621202-elapsedtime
    elapsedTime(): NSTimeInterval;
    setElapsedTime(value: NSTimeInterval): void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621192-running
    running(): boolean;
    setRunning(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621198-behaviors
    behaviors(): UIDynamicBehavior;
    setBehaviors(value: UIDynamicBehavior): void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621200-referenceview
    referenceView(): UIView;
    setReferenceView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621190-updateitemusingcurrentstate
    updateItemUsingCurrentState(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621204-layoutattributesforcellatindexpa
    layoutAttributesForCellAtIndexPath(indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621195-layoutattributesfordecorationvie
    layoutAttributesForDecorationViewOfKind_atIndexPath(decorationViewKind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    // https://developer.apple.com/documentation/uikit/uidynamicanimator/1621186-layoutattributesforsupplementary
    layoutAttributesForSupplementaryViewOfKind_atIndexPath(kind: string | cocoascript.NSString, indexPath: NSIndexPath):UICollectionViewLayoutAttributes;
    //
    alloc():UIDynamicAnimator;
    //
    init():UIDynamicAnimator;
  }
}

declare const UIDynamicAnimator: cocoascript.UIDynamicAnimator;
declare namespace cocoascript {
  /**
   * A base dynamic animation configuration for one or more dynamic items.
   * https://developer.apple.com/documentation/uikit/uidynamicitembehavior
   */
  interface UIDynamicItemBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624393-additem
    addItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624397-initwithitems
    initWithItems(items: UIDynamicItem):UIDynamicItemBehavior;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624385-removeitem
    removeItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624400-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624384-addangularvelocity
    addAngularVelocity_forItem(velocity: CGFloat, item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624391-addlinearvelocity
    addLinearVelocity_forItem(velocity: CGPoint, item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624386-allowsrotation
    allowsRotation(): boolean;
    setAllowsRotation(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624396-angularresistance
    angularResistance(): CGFloat;
    setAngularResistance(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624389-angularvelocityforitem
    angularVelocityForItem(item: UIDynamicItem):CGFloat;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624388-linearvelocityforitem
    linearVelocityForItem(item: UIDynamicItem):CGPoint;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624395-density
    density(): CGFloat;
    setDensity(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624387-elasticity
    elasticity(): CGFloat;
    setElasticity(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624392-friction
    friction(): CGFloat;
    setFriction(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624399-resistance
    resistance(): CGFloat;
    setResistance(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624390-charge
    charge(): CGFloat;
    setCharge(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uidynamicitembehavior/1624394-anchored
    anchored(): boolean;
    setAnchored(value: boolean): void;
    //
    alloc():UIDynamicItemBehavior;
    //
    init():UIDynamicItemBehavior;
  }
}

declare const UIDynamicItemBehavior: cocoascript.UIDynamicItemBehavior;
declare namespace cocoascript {
  /**
   * A dynamic item that comprises multiple other dynamic items.
   * https://developer.apple.com/documentation/uikit/uidynamicitemgroup
   */
  interface UIDynamicItemGroup extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidynamicitemgroup/1618485-initwithitems
    initWithItems(items: UIDynamicItem):UIDynamicItemGroup;
    // https://developer.apple.com/documentation/uikit/uidynamicitemgroup/1618489-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    //
    alloc():UIDynamicItemGroup;
    //
    init():UIDynamicItemGroup;
  }
}

declare const UIDynamicItemGroup: cocoascript.UIDynamicItemGroup;
declare namespace cocoascript {
  /**
   * An object that confers a behavioral configuration on one or more dynamic items, for their participation in 2D animation.
   * https://developer.apple.com/documentation/uikit/uidynamicbehavior
   */
  interface UIDynamicBehavior extends NSObject {
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618499-action
    action(): void;
    setAction(value: void): void;
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618496-addchildbehavior
    addChildBehavior(behavior: UIDynamicBehavior):void;
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618482-childbehaviors
    childBehaviors(): UIDynamicBehavior;
    setChildBehaviors(value: UIDynamicBehavior): void;
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618486-removechildbehavior
    removeChildBehavior(behavior: UIDynamicBehavior):void;
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618501-dynamicanimator
    dynamicAnimator(): UIDynamicAnimator;
    setDynamicAnimator(value: UIDynamicAnimator): void;
    // https://developer.apple.com/documentation/uikit/uidynamicbehavior/1618488-willmovetoanimator
    willMoveToAnimator(dynamicAnimator: UIDynamicAnimator):void;
    //
    alloc():UIDynamicBehavior;
    //
    init():UIDynamicBehavior;
  }
}

declare const UIDynamicBehavior: cocoascript.UIDynamicBehavior;
declare namespace cocoascript {
  /**
   * An object that confers to a specified array of dynamic items the ability to engage in collisions with each other and with the behavior’s specified boundaries.
   * https://developer.apple.com/documentation/uikit/uicollisionbehavior
   */
  interface UICollisionBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624829-additem
    addItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624820-initwithitems
    initWithItems(items: UIDynamicItem):UICollisionBehavior;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624830-removeitem
    removeItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624819-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624828-collisiondelegate
    collisionDelegate(): UICollisionBehaviorDelegate;
    setCollisionDelegate(value: UICollisionBehaviorDelegate): void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624822-addboundarywithidentifier
    addBoundaryWithIdentifier_forPath(identifier: NSCopying, bezierPath: UIBezierPath):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624821-addboundarywithidentifier
    addBoundaryWithIdentifier_fromPoint_toPoint(identifier: NSCopying, p1: CGPoint, p2: CGPoint):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624812-boundaryidentifiers
    boundaryIdentifiers(): NSCopying;
    setBoundaryIdentifiers(value: NSCopying): void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624825-boundarywithidentifier
    boundaryWithIdentifier(identifier: NSCopying):UIBezierPath;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624832-collisionmode
    collisionMode(): UICollisionBehaviorMode;
    setCollisionMode(value: UICollisionBehaviorMode): void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624827-removeallboundaries
    removeAllBoundaries():void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624823-removeboundarywithidentifier
    removeBoundaryWithIdentifier(identifier: NSCopying):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624818-settranslatesreferenceboundsinto
    setTranslatesReferenceBoundsIntoBoundaryWithInsets(insets: UIEdgeInsets):void;
    // https://developer.apple.com/documentation/uikit/uicollisionbehavior/1624826-translatesreferenceboundsintobou
    translatesReferenceBoundsIntoBoundary(): boolean;
    setTranslatesReferenceBoundsIntoBoundary(value: boolean): void;
    //
    alloc():UICollisionBehavior;
    //
    init():UICollisionBehavior;
  }
}

declare const UICollisionBehavior: cocoascript.UICollisionBehavior;
declare namespace cocoascript {
  /**
   * An object that applies field-based physics to dynamic items.
   * https://developer.apple.com/documentation/uikit/uifieldbehavior
   */
  interface UIFieldBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624990-dragfield
    dragField():UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624995-springfield
    springField():UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624989-velocityfieldwithvector
    velocityFieldWithVector(direction: CGVector):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625004-electricfield
    electricField():UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625007-magneticfield
    magneticField():UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624985-radialgravityfieldwithposition
    radialGravityFieldWithPosition(position: CGPoint):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624991-lineargravityfieldwithvector
    linearGravityFieldWithVector(direction: CGVector):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625000-vortexfield
    vortexField():UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625006-noisefieldwithsmoothness
    noiseFieldWithSmoothness_animationSpeed(smoothness: CGFloat, speed: CGFloat):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624992-turbulencefieldwithsmoothness
    turbulenceFieldWithSmoothness_animationSpeed(smoothness: CGFloat, speed: CGFloat):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625001-fieldwithevaluationblock
    fieldWithEvaluationBlock(block: NSTimeInterval):UIFieldBehavior;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624996-additem
    addItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624993-removeitem
    removeItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625002-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625003-position
    position(): CGPoint;
    setPosition(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1625005-region
    region(): UIRegion;
    setRegion(value: UIRegion): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624997-strength
    strength(): CGFloat;
    setStrength(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624988-falloff
    falloff(): CGFloat;
    setFalloff(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624994-minimumradius
    minimumRadius(): CGFloat;
    setMinimumRadius(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624987-direction
    direction(): CGVector;
    setDirection(value: CGVector): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624998-smoothness
    smoothness(): CGFloat;
    setSmoothness(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uifieldbehavior/1624986-animationspeed
    animationSpeed(): CGFloat;
    setAnimationSpeed(value: CGFloat): void;
    //
    alloc():UIFieldBehavior;
    //
    init():UIFieldBehavior;
  }
}

declare const UIFieldBehavior: cocoascript.UIFieldBehavior;
declare namespace cocoascript {
  /**
   * An object that applies a gravity-like force to all of its associated dynamic items.
   * https://developer.apple.com/documentation/uikit/uigravitybehavior
   */
  interface UIGravityBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620416-initwithitems
    initWithItems(items: UIDynamicItem):UIGravityBehavior;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620420-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620415-additem
    addItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620422-removeitem
    removeItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620423-gravitydirection
    gravityDirection(): CGVector;
    setGravityDirection(value: CGVector): void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620417-angle
    angle(): CGFloat;
    setAngle(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620418-magnitude
    magnitude(): CGFloat;
    setMagnitude(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uigravitybehavior/1620414-setangle
    setAngle_magnitude(angle: CGFloat, magnitude: CGFloat):void;
    //
    alloc():UIGravityBehavior;
    //
    init():UIGravityBehavior;
  }
}

declare const UIGravityBehavior: cocoascript.UIGravityBehavior;
declare namespace cocoascript {
  /**
   * A behavior that applies a continuous or instantaneous force to one or more dynamic items, causing those items to change position accordingly.
   * https://developer.apple.com/documentation/uikit/uipushbehavior
   */
  interface UIPushBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623336-active
    active(): boolean;
    setActive(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623333-additem
    addItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623329-initwithitems
    initWithItems_mode(items: UIDynamicItem, mode: UIPushBehaviorMode):UIPushBehavior;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623343-removeitem
    removeItem(item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623339-items
    items(): UIDynamicItem;
    setItems(value: UIDynamicItem): void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623335-setangle
    setAngle_magnitude(angle: CGFloat, magnitude: CGFloat):void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623332-angle
    angle(): CGFloat;
    setAngle(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623330-magnitude
    magnitude(): CGFloat;
    setMagnitude(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623340-mode
    mode(): UIPushBehaviorMode;
    setMode(value: UIPushBehaviorMode): void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623341-settargetoffsetfromcenter
    setTargetOffsetFromCenter_forItem(o: UIOffset, item: UIDynamicItem):void;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623338-targetoffsetfromcenterforitem
    targetOffsetFromCenterForItem(item: UIDynamicItem):UIOffset;
    // https://developer.apple.com/documentation/uikit/uipushbehavior/1623331-pushdirection
    pushDirection(): CGVector;
    setPushDirection(value: CGVector): void;
    //
    alloc():UIPushBehavior;
    //
    init():UIPushBehavior;
  }
}

declare const UIPushBehavior: cocoascript.UIPushBehavior;
declare namespace cocoascript {
  /**
   * A spring-like behavior whose initial motion is damped over time so that the object settles at a specific point.
   * https://developer.apple.com/documentation/uikit/uisnapbehavior
   */
  interface UISnapBehavior extends UIDynamicBehavior {
    // https://developer.apple.com/documentation/uikit/uisnapbehavior/1621011-initwithitem
    initWithItem_snapToPoint(item: UIDynamicItem, point: CGPoint):UISnapBehavior;
    // https://developer.apple.com/documentation/uikit/uisnapbehavior/1621013-snappoint
    snapPoint(): CGPoint;
    setSnapPoint(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uisnapbehavior/1621012-damping
    damping(): CGFloat;
    setDamping(value: CGFloat): void;
    //
    alloc():UISnapBehavior;
    //
    init():UISnapBehavior;
  }
}

declare const UISnapBehavior: cocoascript.UISnapBehavior;
declare namespace cocoascript {
  /**
   * A collection of motion effects that you want to apply to a view at the same time.
   * https://developer.apple.com/documentation/uikit/uimotioneffectgroup
   */
  interface UIMotionEffectGroup extends UIMotionEffect {
    // https://developer.apple.com/documentation/uikit/uimotioneffectgroup/1622374-motioneffects
    motionEffects(): UIMotionEffect;
    setMotionEffects(value: UIMotionEffect): void;
    //
    alloc():UIMotionEffectGroup;
    //
    init():UIMotionEffectGroup;
  }
}

declare const UIMotionEffectGroup: cocoascript.UIMotionEffectGroup;
declare namespace cocoascript {
  /**
   * An object that maps the horizontal or vertical tilt of a device to values that you specify so that UIKit can apply those values to your views.
   * https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect
   */
  interface UIInterpolatingMotionEffect extends UIMotionEffect {
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622372-initwithkeypath
    initWithKeyPath_type(keyPath: string | cocoascript.NSString, type: UIInterpolatingMotionEffectType):UIInterpolatingMotionEffect;
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622368-initwithcoder
    initWithCoder(coder: NSCoder):UIInterpolatingMotionEffect;
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622378-keypath
    keyPath(): string | cocoascript.NSString;
    setKeyPath(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622377-type
    type(): UIInterpolatingMotionEffectType;
    setType(value: UIInterpolatingMotionEffectType): void;
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622365-minimumrelativevalue
    minimumRelativeValue(): id;
    setMinimumRelativeValue(value: id): void;
    // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffect/1622376-maximumrelativevalue
    maximumRelativeValue(): id;
    setMaximumRelativeValue(value: id): void;
    //
    alloc():UIInterpolatingMotionEffect;
    //
    init():UIInterpolatingMotionEffect;
  }
}

declare const UIInterpolatingMotionEffect: cocoascript.UIInterpolatingMotionEffect;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle
  type UIImpactFeedbackStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype
  type UINotificationFeedbackType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscreenoverscancompensation
  type UIScreenOverscanCompensation = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiscreendidconnectnotification
declare const UIScreenDidConnectNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscreendiddisconnectnotification
declare const UIScreenDidDisconnectNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscreenmodedidchangenotification
declare const UIScreenModeDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscreenbrightnessdidchangenotification
declare const UIScreenBrightnessDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscreencaptureddidchangenotification
declare const UIScreenCapturedDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiwindowdidbecomekeynotification
declare const UIWindowDidBecomeKeyNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiwindowdidresignkeynotification
declare const UIWindowDidResignKeyNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwindowlevel
  type UIWindowLevel = cocoascript.CGFloat;
}
// https://developer.apple.com/documentation/uikit/uiwindowdidbecomevisiblenotification
declare const UIWindowDidBecomeVisibleNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiwindowdidbecomehiddennotification
declare const UIWindowDidBecomeHiddenNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uialertactionstyle
  type UIAlertActionStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagesymbolweight
  type UIImageSymbolWeight = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uigraphicsdrawingactions
  type UIGraphicsDrawingActions = cocoascript.UIGraphicsRendererContext;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uigraphicsimagedrawingactions
  type UIGraphicsImageDrawingActions = cocoascript.UIGraphicsImageRendererContext;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uigraphicsimagerendererformatrange
  type UIGraphicsImageRendererFormatRange = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uigraphicspdfdrawingactions
  type UIGraphicsPDFDrawingActions = cocoascript.UIGraphicsPDFRendererContext;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uirectcorner
  type UIRectCorner = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintinteractioncompletionhandler
  type UIPrintInteractionCompletionHandler = cocoascript.NSError;
}
// https://developer.apple.com/documentation/uikit/uiprinterrordomain
declare const UIPrintErrorDomain: cocoascript.NSErrorDomain;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprinterrorcode
  type UIPrintErrorCode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprinterjobtypes
  type UIPrinterJobTypes = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintercutterbehavior
  type UIPrinterCutterBehavior = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintinfoduplex
  type UIPrintInfoDuplex = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintinfoorientation
  type UIPrintInfoOrientation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiprintinfooutputtype
  type UIPrintInfoOutputType = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uicontentsizecategorylarge
declare const UIContentSizeCategoryLarge: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uifonttextstyletitle1
declare const UIFontTextStyleTitle1: cocoascript.UIFontTextStyle;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontweight
  type UIFontWeight = cocoascript.CGFloat;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesign
  type UIFontDescriptorSystemDesign = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptorattributename
  type UIFontDescriptorAttributeName = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptorfeaturekey
  type UIFontDescriptorFeatureKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uifontdescriptortraitkey
  type UIFontDescriptorTraitKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/nstargettextscalingdocumentoption
declare const NSTargetTextScalingDocumentOption: cocoascript.NSAttributedStringDocumentReadingOptionKey;
// https://developer.apple.com/documentation/uikit/nssourcetextscalingdocumentoption
declare const NSSourceTextScalingDocumentOption: cocoascript.NSAttributedStringDocumentReadingOptionKey;
declare namespace cocoascript {
  /**
   * A placeholder object that reserves visual space in a text input view.
   * https://developer.apple.com/documentation/uikit/uitextplaceholder
   */
  interface UITextPlaceholder extends NSObject {
    // https://developer.apple.com/documentation/uikit/uitextplaceholder/3213957-rects
    rects(): UITextSelectionRect;
    setRects(value: UITextSelectionRect): void;
    //
    alloc():UITextPlaceholder;
    //
    init():UITextPlaceholder;
  }
}

declare const UITextPlaceholder: cocoascript.UITextPlaceholder;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextalternativestyle
  type UITextAlternativeStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextdirection
  type UITextDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextstoragedirection
  type UITextStorageDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextlayoutdirection
  type UITextLayoutDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextwritingdirection
  type UITextWritingDirection = cocoascript.NSWritingDirection;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uikeyboardappearance
  type UIKeyboardAppearance = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uireturnkeytype
  type UIReturnKeyType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextcontenttype
  type UITextContentType = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextautocapitalizationtype
  type UITextAutocapitalizationType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextautocorrectiontype
  type UITextAutocorrectionType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextspellcheckingtype
  type UITextSpellCheckingType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextsmartquotestype
  type UITextSmartQuotesType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextsmartdashestype
  type UITextSmartDashesType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextsmartinsertdeletetype
  type UITextSmartInsertDeleteType = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uitextinputcurrentinputmodedidchangenotification
declare const UITextInputCurrentInputModeDidChangeNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextgranularity
  type UITextGranularity = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiinputviewstyle
  type UIInputViewStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactionsheetstyle
  type UIActionSheetStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uialertviewstyle
  type UIAlertViewStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiusernotificationactivationmode
  type UIUserNotificationActivationMode = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiusernotificationactionbehavior
  type UIUserNotificationActionBehavior = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipopoverarrowdirection
  type UIPopoverArrowDirection = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiaccelerationvalue
  type UIAccelerationValue = number;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentmenuorder
  type UIDocumentMenuOrder = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionslocalnotificationkey
declare const UIApplicationLaunchOptionsLocalNotificationKey: cocoascript.UIApplicationLaunchOptionsKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiusernotificationactioncontext
  type UIUserNotificationActionContext = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiusernotificationtype
  type UIUserNotificationType = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uitableviewselectiondidchangenotification
declare const UITableViewSelectionDidChangeNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationdidchangestatusbarframenotification
declare const UIApplicationDidChangeStatusBarFrameNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationdidchangestatusbarorientationnotification
declare const UIApplicationDidChangeStatusBarOrientationNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationwillchangestatusbarframenotification
declare const UIApplicationWillChangeStatusBarFrameNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiapplicationwillchangestatusbarorientationnotification
declare const UIApplicationWillChangeStatusBarOrientationNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitimingcurvetype
  type UITimingCurveType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewstyle
  type UITableViewStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellseparatorstyle
  type UITableViewCellSeparatorStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewseparatorinsetreference
  type UITableViewSeparatorInsetReference = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewrowanimation
  type UITableViewRowAnimation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewscrollposition
  type UITableViewScrollPosition = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A context object that declares which parts of your layout need to be updated when the layout is invalidated.
   * https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext
   */
  interface UICollectionViewLayoutInvalidationContext extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617793-invalidateeverything
    invalidateEverything(): boolean;
    setInvalidateEverything(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617760-invalidatedatasourcecounts
    invalidateDataSourceCounts(): boolean;
    setInvalidateDataSourceCounts(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617731-contentoffsetadjustment
    contentOffsetAdjustment(): CGPoint;
    setContentOffsetAdjustment(value: CGPoint): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617763-contentsizeadjustment
    contentSizeAdjustment(): CGSize;
    setContentSizeAdjustment(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617795-invalidateitemsatindexpaths
    invalidateItemsAtIndexPaths(indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617747-invalidatesupplementaryelementso
    invalidateSupplementaryElementsOfKind_atIndexPaths(elementKind: string | cocoascript.NSString, indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617736-invalidatedecorationelementsofki
    invalidateDecorationElementsOfKind_atIndexPaths(elementKind: string | cocoascript.NSString, indexPaths: NSIndexPath):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617723-invalidateditemindexpaths
    invalidatedItemIndexPaths(): NSIndexPath;
    setInvalidatedItemIndexPaths(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617777-invalidatedsupplementaryindexpat
    invalidatedSupplementaryIndexPaths(): NSIndexPath;
    setInvalidatedSupplementaryIndexPaths(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617805-invalidateddecorationindexpaths
    invalidatedDecorationIndexPaths(): NSIndexPath;
    setInvalidatedDecorationIndexPaths(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617800-previousindexpathsforinteractive
    previousIndexPathsForInteractivelyMovingItems(): NSIndexPath;
    setPreviousIndexPathsForInteractivelyMovingItems(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617780-targetindexpathsforinteractively
    targetIndexPathsForInteractivelyMovingItems(): NSIndexPath;
    setTargetIndexPathsForInteractivelyMovingItems(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617808-interactivemovementtarget
    interactiveMovementTarget(): CGPoint;
    setInteractiveMovementTarget(value: CGPoint): void;
    //
    alloc():UICollectionViewLayoutInvalidationContext;
    //
    init():UICollectionViewLayoutInvalidationContext;
  }
}

declare const UICollectionViewLayoutInvalidationContext: cocoascript.UICollectionViewLayoutInvalidationContext;
declare namespace cocoascript {
  /**
   * A layout object that lets you combine items in highly adaptive and flexible visual arrangements.
   * https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout
   */
  interface UICollectionViewCompositionalLayout extends UICollectionViewLayout {
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199211-initwithsection
    initWithSection(section: NSCollectionLayoutSection):UICollectionViewCompositionalLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199212-initwithsection
    initWithSection_configuration(section: NSCollectionLayoutSection, configuration: UICollectionViewCompositionalLayoutConfiguration):UICollectionViewCompositionalLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199214-initwithsectionprovider
    initWithSectionProvider(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider):UICollectionViewCompositionalLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199215-initwithsectionprovider
    initWithSectionProvider_configuration(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider, configuration: UICollectionViewCompositionalLayoutConfiguration):UICollectionViewCompositionalLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3600420-layoutwithlistconfiguration
    layoutWithListConfiguration(configuration: UICollectionLayoutListConfiguration):UICollectionViewCompositionalLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199209-configuration
    configuration(): UICollectionViewCompositionalLayoutConfiguration;
    setConfiguration(value: UICollectionViewCompositionalLayoutConfiguration): void;
    //
    alloc():UICollectionViewCompositionalLayout;
    //
    init():UICollectionViewCompositionalLayout;
  }
}

declare const UICollectionViewCompositionalLayout: cocoascript.UICollectionViewCompositionalLayout;
declare namespace cocoascript {
  /**
   * A layout object that organizes items into a grid with optional header and footer views for each section.
   * https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout
   */
  interface UICollectionViewFlowLayout extends UICollectionViewLayout {
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617720-scrolldirection
    scrollDirection(): UICollectionViewScrollDirection;
    setScrollDirection(value: UICollectionViewScrollDirection): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617717-minimumlinespacing
    minimumLineSpacing(): CGFloat;
    setMinimumLineSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617706-minimuminteritemspacing
    minimumInteritemSpacing(): CGFloat;
    setMinimumInteritemSpacing(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617711-itemsize
    itemSize(): CGSize;
    setItemSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617709-estimateditemsize
    estimatedItemSize(): CGSize;
    setEstimatedItemSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617714-sectioninset
    sectionInset(): UIEdgeInsets;
    setSectionInset(value: UIEdgeInsets): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/2921645-sectioninsetreference
    sectionInsetReference(): UICollectionViewFlowLayoutSectionInsetReference;
    setSectionInsetReference(value: UICollectionViewFlowLayoutSectionInsetReference): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617710-headerreferencesize
    headerReferenceSize(): CGSize;
    setHeaderReferenceSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617703-footerreferencesize
    footerReferenceSize(): CGSize;
    setFooterReferenceSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617699-sectionheaderspintovisiblebounds
    sectionHeadersPinToVisibleBounds(): boolean;
    setSectionHeadersPinToVisibleBounds(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617701-sectionfooterspintovisiblebounds
    sectionFootersPinToVisibleBounds(): boolean;
    setSectionFootersPinToVisibleBounds(value: boolean): void;
    //
    alloc():UICollectionViewFlowLayout;
    //
    init():UICollectionViewFlowLayout;
  }
}

declare const UICollectionViewFlowLayout: cocoascript.UICollectionViewFlowLayout;
declare namespace cocoascript {
  /**
   * A special type of layout object that lets you implement behaviors when changing from one layout to another in your collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout
   */
  interface UICollectionViewTransitionLayout extends UICollectionViewLayout {
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622189-initwithcurrentlayout
    initWithCurrentLayout_nextLayout(currentLayout: UICollectionViewLayout, newLayout: UICollectionViewLayout):UICollectionViewTransitionLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622192-initwithcoder
    initWithCoder(coder: NSCoder):UICollectionViewTransitionLayout;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622191-transitionprogress
    transitionProgress(): CGFloat;
    setTransitionProgress(value: CGFloat): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622194-updatevalue
    updateValue_forAnimatedKey(value: CGFloat, key: string | cocoascript.NSString):void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622193-valueforanimatedkey
    valueForAnimatedKey(key: string | cocoascript.NSString):CGFloat;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622190-currentlayout
    currentLayout(): UICollectionViewLayout;
    setCurrentLayout(value: UICollectionViewLayout): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622188-nextlayout
    nextLayout(): UICollectionViewLayout;
    setNextLayout(value: UICollectionViewLayout): void;
    //
    alloc():UICollectionViewTransitionLayout;
    //
    init():UICollectionViewTransitionLayout;
  }
}

declare const UICollectionViewTransitionLayout: cocoascript.UICollectionViewTransitionLayout;
declare namespace cocoascript {
  /**
   * A set of properties for determining whether to recompute the size of items or their position in the layout.
   * https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext
   */
  interface UICollectionViewFlowLayoutInvalidationContext extends UICollectionViewLayoutInvalidationContext {
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext/1617721-invalidateflowlayoutdelegatemetr
    invalidateFlowLayoutDelegateMetrics(): boolean;
    setInvalidateFlowLayoutDelegateMetrics(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext/1617707-invalidateflowlayoutattributes
    invalidateFlowLayoutAttributes(): boolean;
    setInvalidateFlowLayoutAttributes(value: boolean): void;
    //
    alloc():UICollectionViewFlowLayoutInvalidationContext;
    //
    init():UICollectionViewFlowLayoutInvalidationContext;
  }
}

declare const UICollectionViewFlowLayoutInvalidationContext: cocoascript.UICollectionViewFlowLayoutInvalidationContext;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellstyle
  type UITableViewCellStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellconfigurationupdatehandler
  type UITableViewCellConfigurationUpdateHandler = cocoascript.UICellConfigurationState;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype
  type UITableViewCellAccessoryType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellselectionstyle
  type UITableViewCellSelectionStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcelleditingstyle
  type UITableViewCellEditingStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcelldragstate
  type UITableViewCellDragState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellstatemask
  type UITableViewCellStateMask = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewcellfocusstyle
  type UITableViewCellFocusStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiconfigurationtextattributestransformer
  type UIConfigurationTextAttributesTransformer = cocoascript.id;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment
  type UIButtonConfigurationTitleAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize
  type UIButtonConfigurationSize = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle
  type UIButtonConfigurationCornerStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle
  type UIButtonConfigurationMacIdiomStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcecellprovider
  type UITableViewDiffableDataSourceCellProvider = cocoascript.id;
}
// https://developer.apple.com/documentation/uikit/uimenustandardedit
declare const UIMenuStandardEdit: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uiactionpaste
declare const UIActionPaste: cocoascript.UIActionIdentifier;
// https://developer.apple.com/documentation/uikit/uiactionpasteandgo
declare const UIActionPasteAndGo: cocoascript.UIActionIdentifier;
// https://developer.apple.com/documentation/uikit/uiactionpasteandmatchstyle
declare const UIActionPasteAndMatchStyle: cocoascript.UIActionIdentifier;
// https://developer.apple.com/documentation/uikit/uiactionpasteandsearch
declare const UIActionPasteAndSearch: cocoascript.UIActionIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuapplication
declare const UIMenuApplication: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenufile
declare const UIMenuFile: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuedit
declare const UIMenuEdit: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuview
declare const UIMenuView: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuwindow
declare const UIMenuWindow: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuhelp
declare const UIMenuHelp: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuabout
declare const UIMenuAbout: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenupreferences
declare const UIMenuPreferences: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuservices
declare const UIMenuServices: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuhide
declare const UIMenuHide: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuquit
declare const UIMenuQuit: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenunewscene
declare const UIMenuNewScene: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuclose
declare const UIMenuClose: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuprint
declare const UIMenuPrint: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuundoredo
declare const UIMenuUndoRedo: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenufind
declare const UIMenuFind: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenureplace
declare const UIMenuReplace: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenushare
declare const UIMenuShare: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutextstyle
declare const UIMenuTextStyle: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuspelling
declare const UIMenuSpelling: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuspellingpanel
declare const UIMenuSpellingPanel: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuspellingoptions
declare const UIMenuSpellingOptions: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenusubstitutions
declare const UIMenuSubstitutions: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenusubstitutionspanel
declare const UIMenuSubstitutionsPanel: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenusubstitutionoptions
declare const UIMenuSubstitutionOptions: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutransformations
declare const UIMenuTransformations: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuspeech
declare const UIMenuSpeech: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenulookup
declare const UIMenuLookup: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenulearn
declare const UIMenuLearn: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuformat
declare const UIMenuFormat: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenufont
declare const UIMenuFont: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutextsize
declare const UIMenuTextSize: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutextcolor
declare const UIMenuTextColor: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutextstylepasteboard
declare const UIMenuTextStylePasteboard: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutext
declare const UIMenuText: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuwritingdirection
declare const UIMenuWritingDirection: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenualignment
declare const UIMenuAlignment: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenutoolbar
declare const UIMenuToolbar: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenufullscreen
declare const UIMenuFullscreen: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuminimizeandzoom
declare const UIMenuMinimizeAndZoom: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenubringalltofront
declare const UIMenuBringAllToFront: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuroot
declare const UIMenuRoot: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenuopenrecent
declare const UIMenuOpenRecent: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uimenusidebar
declare const UIMenuSidebar: cocoascript.UIMenuIdentifier;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollermediametadata
declare const UIImagePickerControllerMediaMetadata: cocoascript.UIImagePickerControllerInfoKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiimagepickercontrollerinfokey
  type UIImagePickerControllerInfoKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollercroprect
declare const UIImagePickerControllerCropRect: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollereditedimage
declare const UIImagePickerControllerEditedImage: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollerimageurl
declare const UIImagePickerControllerImageURL: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollermediatype
declare const UIImagePickerControllerMediaType: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollermediaurl
declare const UIImagePickerControllerMediaURL: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrolleroriginalimage
declare const UIImagePickerControllerOriginalImage: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollerphasset
declare const UIImagePickerControllerPHAsset: cocoascript.UIImagePickerControllerInfoKey;
// https://developer.apple.com/documentation/uikit/uiimagepickercontrollerreferenceurl
declare const UIImagePickerControllerReferenceURL: cocoascript.UIImagePickerControllerInfoKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitextiteminteraction
  type UITextItemInteraction = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidynamicitemcollisionboundstype
  type UIDynamicItemCollisionBoundsType = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  /**
   * An object that specifies the minimum and maximum sizes for resizable windows.
   * https://developer.apple.com/documentation/uikit/uiscenesizerestrictions
   */
  interface UISceneSizeRestrictions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiscenesizerestrictions/3368161-minimumsize
    minimumSize(): CGSize;
    setMinimumSize(value: CGSize): void;
    // https://developer.apple.com/documentation/uikit/uiscenesizerestrictions/3368160-maximumsize
    maximumSize(): CGSize;
    setMaximumSize(value: CGSize): void;
    //
    alloc():UISceneSizeRestrictions;
    //
    init():UISceneSizeRestrictions;
  }
}

declare const UISceneSizeRestrictions: cocoascript.UISceneSizeRestrictions;
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiwindowsceneactivationaction
   */
  interface UIWindowSceneActivationAction extends UIAction {
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationaction/3752224-title
    title(): string | cocoascript.NSString;
    setTitle(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationaction/3752223-actionwithidentifier
    actionWithIdentifier_alternateAction_configurationProvider(identifier: UIActionIdentifier, alternateAction: UIAction, configurationProvider: UIWindowSceneActivationActionConfigurationProvider):UIWindowSceneActivationAction;
    //
    alloc():UIWindowSceneActivationAction;
    //
    init():UIWindowSceneActivationAction;
  }
}

declare const UIWindowSceneActivationAction: cocoascript.UIWindowSceneActivationAction;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationactionconfigurationprovider
  type UIWindowSceneActivationActionConfigurationProvider = cocoascript.UIWindowSceneActivationAction;
}
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration
   */
  interface UIWindowSceneActivationConfiguration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752228-options
    options(): UIWindowSceneActivationRequestOptions;
    setOptions(value: UIWindowSceneActivationRequestOptions): void;
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752229-preview
    preview(): UITargetedPreview;
    setPreview(value: UITargetedPreview): void;
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752230-useractivity
    userActivity(): NSUserActivity;
    setUserActivity(value: NSUserActivity): void;
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752227-initwithuseractivity
    initWithUserActivity(userActivity: NSUserActivity):UIWindowSceneActivationConfiguration;
    //
    alloc():UIWindowSceneActivationConfiguration;
    //
    init():UIWindowSceneActivationConfiguration;
  }
}

declare const UIWindowSceneActivationConfiguration: cocoascript.UIWindowSceneActivationConfiguration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteractionconfigurationprovider
  type UIWindowSceneActivationInteractionConfigurationProvider = cocoascript.CGPoint;
}
declare namespace cocoascript {
  /**
   * https://developer.apple.com/documentation/uikit/uiwindowsceneactivationrequestoptions
   */
  interface UIWindowSceneActivationRequestOptions extends UISceneActivationRequestOptions {
    // https://developer.apple.com/documentation/uikit/uiwindowsceneactivationrequestoptions/3750934-preferredpresentationstyle
    preferredPresentationStyle(): UIWindowScenePresentationStyle;
    setPreferredPresentationStyle(value: UIWindowScenePresentationStyle): void;
    //
    alloc():UIWindowSceneActivationRequestOptions;
    //
    init():UIWindowSceneActivationRequestOptions;
  }
}

declare const UIWindowSceneActivationRequestOptions: cocoascript.UIWindowSceneActivationRequestOptions;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwindowscenedismissalanimation
  type UIWindowSceneDismissalAnimation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiwindowscenepresentationstyle
  type UIWindowScenePresentationStyle = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uifocussoundidentifierdefault
declare const UIFocusSoundIdentifierDefault: cocoascript.UIFocusSoundIdentifier;
// https://developer.apple.com/documentation/uikit/uifocussoundidentifiernone
declare const UIFocusSoundIdentifierNone: cocoascript.UIFocusSoundIdentifier;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextmenucontentpreviewprovider
  type UIContextMenuContentPreviewProvider = void;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextmenuactionprovider
  type UIContextMenuActionProvider = cocoascript.UIMenuElement;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextmenuinteractioncommitstyle
  type UIContextMenuInteractionCommitStyle = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiminimumkeepalivetimeout
declare const UIMinimumKeepAliveTimeout: cocoascript.NSTimeInterval;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiremotenotificationtype
  type UIRemoteNotificationType = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uibackgroundtaskinvalid
declare const UIBackgroundTaskInvalid: cocoascript.UIBackgroundTaskIdentifier;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscenecollectionjoinbehavior
  type UISceneCollectionJoinBehavior = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionuniversallinksonly
declare const UIApplicationOpenURLOptionUniversalLinksOnly: cocoascript.UIApplicationOpenExternalURLOptionsKey;
// https://developer.apple.com/documentation/uikit/uicontentsizecategoryunspecified
declare const UIContentSizeCategoryUnspecified: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategoryextrasmall
declare const UIContentSizeCategoryExtraSmall: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategorysmall
declare const UIContentSizeCategorySmall: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategorymedium
declare const UIContentSizeCategoryMedium: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategoryextralarge
declare const UIContentSizeCategoryExtraLarge: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategoryextraextralarge
declare const UIContentSizeCategoryExtraExtraLarge: cocoascript.UIContentSizeCategory;
// https://developer.apple.com/documentation/uikit/uicontentsizecategoryextraextraextralarge
declare const UIContentSizeCategoryExtraExtraExtraLarge: cocoascript.UIContentSizeCategory;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationmetadatakey
  type UIActivityItemsConfigurationMetadataKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteraction
  type UIActivityItemsConfigurationInteraction = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationpreviewintent
  type UIActivityItemsConfigurationPreviewIntent = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nscollectionlayoutsectionvisibleitemsinvalidationhandler
  type NSCollectionLayoutSectionVisibleItemsInvalidationHandler = cocoascript.NSCollectionLayoutEnvironment;
}
declare namespace cocoascript {
  /**
   * An object that describes a single change to make to an item in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem
   */
  interface UICollectionViewUpdateItem extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617772-indexpathbeforeupdate
    indexPathBeforeUpdate(): NSIndexPath;
    setIndexPathBeforeUpdate(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617765-indexpathafterupdate
    indexPathAfterUpdate(): NSIndexPath;
    setIndexPathAfterUpdate(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617748-updateaction
    updateAction(): UICollectionUpdateAction;
    setUpdateAction(value: UICollectionUpdateAction): void;
    //
    alloc():UICollectionViewUpdateItem;
    //
    init():UICollectionViewUpdateItem;
  }
}

declare const UICollectionViewUpdateItem: cocoascript.UICollectionViewUpdateItem;
declare namespace cocoascript {
  /**
   * A context object that stores information specific to a focus update in a collection view.
   * https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext
   */
  interface UICollectionViewFocusUpdateContext extends UIFocusUpdateContext {
    // https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext/1618077-previouslyfocusedindexpath
    previouslyFocusedIndexPath(): NSIndexPath;
    setPreviouslyFocusedIndexPath(value: NSIndexPath): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext/1618011-nextfocusedindexpath
    nextFocusedIndexPath(): NSIndexPath;
    setNextFocusedIndexPath(value: NSIndexPath): void;
    //
    alloc():UICollectionViewFocusUpdateContext;
    //
    init():UICollectionViewFocusUpdateContext;
  }
}

declare const UICollectionViewFocusUpdateContext: cocoascript.UICollectionViewFocusUpdateContext;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitransitioncontextviewcontrollerkey
  type UITransitionContextViewControllerKey = cocoascript.NSString;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitransitioncontextviewkey
  type UITransitionContextViewKey = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uitableviewautomaticdimension
declare const UITableViewAutomaticDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewanimatingstate
  type UIViewAnimatingState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiviewanimatingposition
  type UIViewAnimatingPosition = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentbrowserimportmode
  type UIDocumentBrowserImportMode = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutsectionprovider
  type UICollectionViewCompositionalLayoutSectionProvider = cocoascript.NSCollectionLayoutEnvironment;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uinavigationcontrolleroperation
  type UINavigationControllerOperation = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A data object containing information about the reasons why UIKit created the scene.
   * https://developer.apple.com/documentation/uikit/uisceneconnectionoptions
   */
  interface UISceneConnectionOptions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238074-useractivities
    userActivities(): NSUserActivity;
    setUserActivities(value: NSUserActivity): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238072-shortcutitem
    shortcutItem(): UIApplicationShortcutItem;
    setShortcutItem(value: UIApplicationShortcutItem): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238068-urlcontexts
    URLContexts(): UIOpenURLContext;
    setURLContexts(value: UIOpenURLContext): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238070-handoffuseractivitytype
    handoffUserActivityType(): string | cocoascript.NSString;
    setHandoffUserActivityType(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238069-cloudkitsharemetadata
    cloudKitShareMetadata(): CKShareMetadata;
    setCloudKitShareMetadata(value: CKShareMetadata): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238071-notificationresponse
    notificationResponse(): UNNotificationResponse;
    setNotificationResponse(value: UNNotificationResponse): void;
    // https://developer.apple.com/documentation/uikit/uisceneconnectionoptions/3238073-sourceapplication
    sourceApplication(): string | cocoascript.NSString;
    setSourceApplication(value: string | cocoascript.NSString): void;
    //
    alloc():UISceneConnectionOptions;
    //
    init():UISceneConnectionOptions;
  }
}

declare const UISceneConnectionOptions: cocoascript.UISceneConnectionOptions;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsannotationkey
declare const UIApplicationLaunchOptionsAnnotationKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsbluetoothcentralskey
declare const UIApplicationLaunchOptionsBluetoothCentralsKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsbluetoothperipheralskey
declare const UIApplicationLaunchOptionsBluetoothPeripheralsKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionscloudkitsharemetadatakey
declare const UIApplicationLaunchOptionsCloudKitShareMetadataKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionslocationkey
declare const UIApplicationLaunchOptionsLocationKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsnewsstanddownloadskey
declare const UIApplicationLaunchOptionsNewsstandDownloadsKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsshortcutitemkey
declare const UIApplicationLaunchOptionsShortcutItemKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionssourceapplicationkey
declare const UIApplicationLaunchOptionsSourceApplicationKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsurlkey
declare const UIApplicationLaunchOptionsURLKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsuseractivitydictionarykey
declare const UIApplicationLaunchOptionsUserActivityDictionaryKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsuseractivitytypekey
declare const UIApplicationLaunchOptionsUserActivityTypeKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionseventattributionkey
declare const UIApplicationLaunchOptionsEventAttributionKey: cocoascript.UIApplicationLaunchOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionssourceapplicationkey
declare const UIApplicationOpenURLOptionsSourceApplicationKey: cocoascript.UIApplicationOpenURLOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionsannotationkey
declare const UIApplicationOpenURLOptionsAnnotationKey: cocoascript.UIApplicationOpenURLOptionsKey;
// https://developer.apple.com/documentation/uikit/uiapplicationopenurloptionsopeninplacekey
declare const UIApplicationOpenURLOptionsOpenInPlaceKey: cocoascript.UIApplicationOpenURLOptionsKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisceneactivationstate
  type UISceneActivationState = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiscenewillconnectnotification
declare const UISceneWillConnectNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscenediddisconnectnotification
declare const UISceneDidDisconnectNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscenewillenterforegroundnotification
declare const UISceneWillEnterForegroundNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscenedidactivatenotification
declare const UISceneDidActivateNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscenewilldeactivatenotification
declare const UISceneWillDeactivateNotification: cocoascript.NSNotificationName;
// https://developer.apple.com/documentation/uikit/uiscenedidenterbackgroundnotification
declare const UISceneDidEnterBackgroundNotification: cocoascript.NSNotificationName;
declare namespace cocoascript {
  /**
   * Options that UIKit provides when asking your app to open a URL.
   * https://developer.apple.com/documentation/uikit/uisceneopenurloptions
   */
  interface UISceneOpenURLOptions extends NSObject {
    // https://developer.apple.com/documentation/uikit/uisceneopenurloptions/3197945-sourceapplication
    sourceApplication(): string | cocoascript.NSString;
    setSourceApplication(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uisceneopenurloptions/3197943-annotation
    annotation(): id;
    setAnnotation(value: id): void;
    // https://developer.apple.com/documentation/uikit/uisceneopenurloptions/3197944-openinplace
    openInPlace(): boolean;
    setOpenInPlace(value: boolean): void;
    // https://developer.apple.com/documentation/uikit/uisceneopenurloptions/3727337-eventattribution
    eventAttribution(): UIEventAttribution;
    setEventAttribution(value: UIEventAttribution): void;
    //
    alloc():UISceneOpenURLOptions;
    //
    init():UISceneOpenURLOptions;
  }
}

declare const UISceneOpenURLOptions: cocoascript.UISceneOpenURLOptions;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiscenesessionrole
  type UISceneSessionRole = cocoascript.NSString;
}
declare namespace cocoascript {
  /**
   * A registration for the collection view’s cells.
   * https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration
   */
  interface UICollectionViewCellRegistration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600446-registrationwithcellclass
    registrationWithCellClass_configurationHandler(cellClass: Class, configurationHandler: UICollectionViewCellRegistrationConfigurationHandler):UICollectionViewCellRegistration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600447-registrationwithcellnib
    registrationWithCellNib_configurationHandler(cellNib: UINib, configurationHandler: UICollectionViewCellRegistrationConfigurationHandler):UICollectionViewCellRegistration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600445-configurationhandler
    configurationHandler(): UICollectionViewCellRegistrationConfigurationHandler;
    setConfigurationHandler(value: UICollectionViewCellRegistrationConfigurationHandler): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600443-cellclass
    cellClass(): Class;
    setCellClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600444-cellnib
    cellNib(): UINib;
    setCellNib(value: UINib): void;
    //
    alloc():UICollectionViewCellRegistration;
    //
    init():UICollectionViewCellRegistration;
  }
}

declare const UICollectionViewCellRegistration: cocoascript.UICollectionViewCellRegistration;
declare namespace cocoascript {
  /**
   * A registration for the collection view’s supplementary views.
   * https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration
   */
  interface UICollectionViewSupplementaryRegistration extends NSObject {
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600452-registrationwithsupplementarycla
    registrationWithSupplementaryClass_elementKind_configurationHandler(supplementaryClass: Class, elementKind: string | cocoascript.NSString, configurationHandler: UICollectionViewSupplementaryRegistrationConfigurationHandler):UICollectionViewSupplementaryRegistration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600453-registrationwithsupplementarynib
    registrationWithSupplementaryNib_elementKind_configurationHandler(supplementaryNib: UINib, elementKind: string | cocoascript.NSString, configurationHandler: UICollectionViewSupplementaryRegistrationConfigurationHandler):UICollectionViewSupplementaryRegistration;
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600450-configurationhandler
    configurationHandler(): UICollectionViewSupplementaryRegistrationConfigurationHandler;
    setConfigurationHandler(value: UICollectionViewSupplementaryRegistrationConfigurationHandler): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600451-elementkind
    elementKind(): string | cocoascript.NSString;
    setElementKind(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600454-supplementaryclass
    supplementaryClass(): Class;
    setSupplementaryClass(value: Class): void;
    // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600455-supplementarynib
    supplementaryNib(): UINib;
    setSupplementaryNib(value: UINib): void;
    //
    alloc():UICollectionViewSupplementaryRegistration;
    //
    init():UICollectionViewSupplementaryRegistration;
  }
}

declare const UICollectionViewSupplementaryRegistration: cocoascript.UICollectionViewSupplementaryRegistration;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinteractivetransitioncompletion
  type UICollectionViewLayoutInteractiveTransitionCompletion = boolean;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewreorderingcadence
  type UICollectionViewReorderingCadence = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewscrollposition
  type UICollectionViewScrollPosition = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewscrolldirection
  type UICollectionViewScrollDirection = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionelementcategory
  type UICollectionElementCategory = cocoascript.NSUInteger;
}
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatterncalendarevent
declare const UIPasteboardDetectionPatternCalendarEvent: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternemailaddress
declare const UIPasteboardDetectionPatternEmailAddress: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternflightnumber
declare const UIPasteboardDetectionPatternFlightNumber: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternlink
declare const UIPasteboardDetectionPatternLink: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternmoneyamount
declare const UIPasteboardDetectionPatternMoneyAmount: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternnumber
declare const UIPasteboardDetectionPatternNumber: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternphonenumber
declare const UIPasteboardDetectionPatternPhoneNumber: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternpostaladdress
declare const UIPasteboardDetectionPatternPostalAddress: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternprobablewebsearch
declare const UIPasteboardDetectionPatternProbableWebSearch: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternprobableweburl
declare const UIPasteboardDetectionPatternProbableWebURL: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uipasteboarddetectionpatternshipmenttrackingnumber
declare const UIPasteboardDetectionPatternShipmentTrackingNumber: cocoascript.UIPasteboardDetectionPattern;
// https://developer.apple.com/documentation/uikit/uinibexternalobjects
declare const UINibExternalObjects: cocoascript.UINibOptionsKey;
// https://developer.apple.com/documentation/uikit/uiactivitytypeaddtoreadinglist
declare const UIActivityTypeAddToReadingList: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeairdrop
declare const UIActivityTypeAirDrop: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeassigntocontact
declare const UIActivityTypeAssignToContact: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypecopytopasteboard
declare const UIActivityTypeCopyToPasteboard: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypemail
declare const UIActivityTypeMail: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypemarkupaspdf
declare const UIActivityTypeMarkupAsPDF: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypemessage
declare const UIActivityTypeMessage: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeopeninibooks
declare const UIActivityTypeOpenInIBooks: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttofacebook
declare const UIActivityTypePostToFacebook: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttoflickr
declare const UIActivityTypePostToFlickr: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttotencentweibo
declare const UIActivityTypePostToTencentWeibo: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttotwitter
declare const UIActivityTypePostToTwitter: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttovimeo
declare const UIActivityTypePostToVimeo: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeposttoweibo
declare const UIActivityTypePostToWeibo: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypeprint
declare const UIActivityTypePrint: cocoascript.UIActivityType;
// https://developer.apple.com/documentation/uikit/uiactivitytypesavetocameraroll
declare const UIActivityTypeSaveToCameraRoll: cocoascript.UIActivityType;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewrowactionstyle
  type UITableViewRowActionStyle = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitemprovider
  type NSCollectionLayoutGroupCustomItemProvider = cocoascript.NSCollectionLayoutEnvironment;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontentinsetsreference
  type UIContentInsetsReference = cocoascript.NSInteger;
}
declare namespace cocoascript {
  /**
   * A custom cell accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorycustomview
   */
  interface UICellAccessoryCustomView extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600361-initwithcustomview
    initWithCustomView_placement(customView: UIView, placement: UICellAccessoryPlacement):UICellAccessoryCustomView;
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600360-initwithcoder
    initWithCoder(coder: NSCoder):UICellAccessoryCustomView;
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600359-customview
    customView(): UIView;
    setCustomView(value: UIView): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600363-placement
    placement(): UICellAccessoryPlacement;
    setPlacement(value: UICellAccessoryPlacement): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600364-position
    position(): UICellAccessoryPosition;
    setPosition(value: UICellAccessoryPosition): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorycustomview/3600362-maintainsfixedsize
    maintainsFixedSize(): boolean;
    setMaintainsFixedSize(value: boolean): void;
    //
    alloc():UICellAccessoryCustomView;
    //
    init():UICellAccessoryCustomView;
  }
}

declare const UICellAccessoryCustomView: cocoascript.UICellAccessoryCustomView;
declare namespace cocoascript {
  /**
   * The disclosure indicator system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorydisclosureindicator
   */
  interface UICellAccessoryDisclosureIndicator extends UICellAccessory {
    //
    alloc():UICellAccessoryDisclosureIndicator;
    //
    init():UICellAccessoryDisclosureIndicator;
  }
}

declare const UICellAccessoryDisclosureIndicator: cocoascript.UICellAccessoryDisclosureIndicator;
declare namespace cocoascript {
  /**
   * The outline disclosure system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessoryoutlinedisclosure
   */
  interface UICellAccessoryOutlineDisclosure extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessoryoutlinedisclosure/3600383-actionhandler
    actionHandler(): void;
    setActionHandler(value: void): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessoryoutlinedisclosure/3600385-style
    style(): UICellAccessoryOutlineDisclosureStyle;
    setStyle(value: UICellAccessoryOutlineDisclosureStyle): void;
    //
    alloc():UICellAccessoryOutlineDisclosure;
    //
    init():UICellAccessoryOutlineDisclosure;
  }
}

declare const UICellAccessoryOutlineDisclosure: cocoascript.UICellAccessoryOutlineDisclosure;
declare namespace cocoascript {
  /**
   * The checkmark system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorycheckmark
   */
  interface UICellAccessoryCheckmark extends UICellAccessory {
    //
    alloc():UICellAccessoryCheckmark;
    //
    init():UICellAccessoryCheckmark;
  }
}

declare const UICellAccessoryCheckmark: cocoascript.UICellAccessoryCheckmark;
declare namespace cocoascript {
  /**
   * The delete system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorydelete
   */
  interface UICellAccessoryDelete extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessorydelete/3600366-actionhandler
    actionHandler(): void;
    setActionHandler(value: void): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorydelete/3667727-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    //
    alloc():UICellAccessoryDelete;
    //
    init():UICellAccessoryDelete;
  }
}

declare const UICellAccessoryDelete: cocoascript.UICellAccessoryDelete;
declare namespace cocoascript {
  /**
   * The insert system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessoryinsert
   */
  interface UICellAccessoryInsert extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessoryinsert/3600373-actionhandler
    actionHandler(): void;
    setActionHandler(value: void): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessoryinsert/3667728-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    //
    alloc():UICellAccessoryInsert;
    //
    init():UICellAccessoryInsert;
  }
}

declare const UICellAccessoryInsert: cocoascript.UICellAccessoryInsert;
declare namespace cocoascript {
  /**
   * The reorder system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessoryreorder
   */
  interface UICellAccessoryReorder extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessoryreorder/3600397-showsverticalseparator
    showsVerticalSeparator(): boolean;
    setShowsVerticalSeparator(value: boolean): void;
    //
    alloc():UICellAccessoryReorder;
    //
    init():UICellAccessoryReorder;
  }
}

declare const UICellAccessoryReorder: cocoascript.UICellAccessoryReorder;
declare namespace cocoascript {
  /**
   * The multiselect system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorymultiselect
   */
  interface UICellAccessoryMultiselect extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessorymultiselect/3667729-backgroundcolor
    backgroundColor(): UIColor;
    setBackgroundColor(value: UIColor): void;
    //
    alloc():UICellAccessoryMultiselect;
    //
    init():UICellAccessoryMultiselect;
  }
}

declare const UICellAccessoryMultiselect: cocoascript.UICellAccessoryMultiselect;
declare namespace cocoascript {
  /**
   * The label system accessory.
   * https://developer.apple.com/documentation/uikit/uicellaccessorylabel
   */
  interface UICellAccessoryLabel extends UICellAccessory {
    // https://developer.apple.com/documentation/uikit/uicellaccessorylabel/3600378-initwithtext
    initWithText(text: string | cocoascript.NSString):UICellAccessoryLabel;
    // https://developer.apple.com/documentation/uikit/uicellaccessorylabel/3600377-initwithcoder
    initWithCoder(coder: NSCoder):UICellAccessoryLabel;
    // https://developer.apple.com/documentation/uikit/uicellaccessorylabel/3600379-text
    text(): string | cocoascript.NSString;
    setText(value: string | cocoascript.NSString): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorylabel/3600376-font
    font(): UIFont;
    setFont(value: UIFont): void;
    // https://developer.apple.com/documentation/uikit/uicellaccessorylabel/3600375-adjustsfontforcontentsizecategor
    adjustsFontForContentSizeCategory(): boolean;
    setAdjustsFontForContentSizeCategory(value: boolean): void;
    //
    alloc():UICellAccessoryLabel;
    //
    init():UICellAccessoryLabel;
  }
}

declare const UICellAccessoryLabel: cocoascript.UICellAccessoryLabel;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellaccessorydisplayedstate
  type UICellAccessoryDisplayedState = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uicellaccessorystandarddimension
declare const UICellAccessoryStandardDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellaccessoryplacement
  type UICellAccessoryPlacement = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellaccessoryposition
  type UICellAccessoryPosition = cocoascript.UICellAccessory;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance
  type UICollectionLayoutListAppearance = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistitemseparatorhandler
  type UICollectionLayoutListItemSeparatorHandler = cocoascript.UIListSeparatorConfiguration;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistheadermode
  type UICollectionLayoutListHeaderMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistfootermode
  type UICollectionLayoutListFooterMode = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uicollectionviewlayoutautomaticdimension
declare const UICollectionViewLayoutAutomaticDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionlayoutlistswipeactionsconfigurationprovider
  type UICollectionLayoutListSwipeActionsConfigurationProvider = cocoascript.NSIndexPath;
}
declare namespace cocoascript {
  /**
   * A transaction that describes the changes after reordering the items in the view.
   * https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction
   */
  interface NSDiffableDataSourceTransaction extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600510-sectiontransactions
    sectionTransactions(): any;
    setSectionTransactions(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600509-initialsnapshot
    initialSnapshot(): any;
    setInitialSnapshot(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600508-finalsnapshot
    finalSnapshot(): any;
    setFinalSnapshot(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600507-difference
    difference(): any;
    setDifference(value: any): void;
    //
    alloc():NSDiffableDataSourceTransaction;
    //
    init():NSDiffableDataSourceTransaction;
  }
}

declare const NSDiffableDataSourceTransaction: cocoascript.NSDiffableDataSourceTransaction;
declare namespace cocoascript {
  /**
   * A transaction that describes the changes after reordering the items in a section.
   * https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction
   */
  interface NSDiffableDataSourceSectionTransaction extends NSObject {
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600505-sectionidentifier
    sectionIdentifier(): any;
    setSectionIdentifier(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600504-initialsnapshot
    initialSnapshot(): any;
    setInitialSnapshot(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600503-finalsnapshot
    finalSnapshot(): any;
    setFinalSnapshot(value: any): void;
    // https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600502-difference
    difference(): any;
    setDifference(value: any): void;
    //
    alloc():NSDiffableDataSourceSectionTransaction;
    //
    init():NSDiffableDataSourceSectionTransaction;
  }
}

declare const NSDiffableDataSourceSectionTransaction: cocoascript.NSDiffableDataSourceSectionTransaction;
// https://developer.apple.com/documentation/uikit/uilistcontentimagestandarddimension
declare const UIListContentImageStandardDimension: cocoascript.CGFloat;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilistcontenttextalignment
  type UIListContentTextAlignment = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilistcontenttexttransform
  type UIListContentTextTransform = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uilistseparatorvisibility
  type UIListSeparatorVisibility = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uilistseparatorautomaticinsets
declare const UIListSeparatorAutomaticInsets: cocoascript.NSDirectionalEdgeInsets;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeemailaddress
declare const UITextContentTypeEmailAddress: cocoascript.UITextContentType;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcecellprovider
  type UICollectionViewDiffableDataSourceCellProvider = cocoascript.id;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesupplementaryviewprovider
  type UICollectionViewDiffableDataSourceSupplementaryViewProvider = cocoascript.NSIndexPath;
}
// https://developer.apple.com/documentation/uikit/uifonttextstylecallout
declare const UIFontTextStyleCallout: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylecaption1
declare const UIFontTextStyleCaption1: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylecaption2
declare const UIFontTextStyleCaption2: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylefootnote
declare const UIFontTextStyleFootnote: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylesubheadline
declare const UIFontTextStyleSubheadline: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstylelargetitle
declare const UIFontTextStyleLargeTitle: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstyletitle2
declare const UIFontTextStyleTitle2: cocoascript.UIFontTextStyle;
// https://developer.apple.com/documentation/uikit/uifonttextstyletitle3
declare const UIFontTextStyleTitle3: cocoascript.UIFontTextStyle;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewdropintent
  type UITableViewDropIntent = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewdropintent
  type UICollectionViewDropIntent = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipointereffecttintmode
  type UIPointerEffectTintMode = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottom
declare const UIPointerAccessoryPositionBottom: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottomleft
declare const UIPointerAccessoryPositionBottomLeft: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositionbottomright
declare const UIPointerAccessoryPositionBottomRight: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositionleft
declare const UIPointerAccessoryPositionLeft: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositionright
declare const UIPointerAccessoryPositionRight: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontop
declare const UIPointerAccessoryPositionTop: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontopleft
declare const UIPointerAccessoryPositionTopLeft: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uipointeraccessorypositiontopright
declare const UIPointerAccessoryPositionTopRight: cocoascript.UIPointerAccessoryPosition;
// https://developer.apple.com/documentation/uikit/uiaccessibilitynotificationswitchcontrolidentifier
declare const UIAccessibilityNotificationSwitchControlIdentifier: cocoascript.UIAccessibilityAssistiveTechnologyIdentifier;
// https://developer.apple.com/documentation/uikit/uiaccessibilitynotificationvoiceoveridentifier
declare const UIAccessibilityNotificationVoiceOverIdentifier: cocoascript.UIAccessibilityAssistiveTechnologyIdentifier;
declare namespace cocoascript {
  /**
   * The methods that let you coordinate with a flow layout object to implement a grid-based layout.
   * https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout
   */
  interface UICollectionViewDelegateFlowLayout extends UICollectionViewDelegate {
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617708-collectionview
    collectionView_layout_sizeForItemAtIndexPath(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, indexPath: NSIndexPath):CGSize;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617718-collectionview
    collectionView_layout_insetForSectionAtIndex(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, section: NSInteger):UIEdgeInsets;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617705-collectionview
    collectionView_layout_minimumLineSpacingForSectionAtIndex(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617696-collectionview
    collectionView_layout_minimumInteritemSpacingForSectionAtIndex(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, section: NSInteger):CGFloat;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617702-collectionview
    collectionView_layout_referenceSizeForHeaderInSection(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, section: NSInteger):CGSize;
    // https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617713-collectionview
    collectionView_layout_referenceSizeForFooterInSection(collectionView: UICollectionView, collectionViewLayout: UICollectionViewLayout, section: NSInteger):CGSize;
  }
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewcellconfigurationupdatehandler
  type UICollectionViewCellConfigurationUpdateHandler = cocoascript.UICellConfigurationState;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewcelldragstate
  type UICollectionViewCellDragState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitableviewheaderfooterviewconfigurationupdatehandler
  type UITableViewHeaderFooterViewConfigurationUpdateHandler = cocoascript.UIViewConfigurationState;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextualactionhandler
  type UIContextualActionHandler = boolean;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicontextualactionstyle
  type UIContextualActionStyle = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiscrollviewdecelerationratenormal
declare const UIScrollViewDecelerationRateNormal: cocoascript.UIScrollViewDecelerationRate;
// https://developer.apple.com/documentation/uikit/uiscrollviewdecelerationratefast
declare const UIScrollViewDecelerationRateFast: cocoascript.UIScrollViewDecelerationRate;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uitabbaritempositioning
  type UITabBarItemPositioning = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiattachmentbehaviortype
  type UIAttachmentBehaviorType = cocoascript.NSInteger;
}
declare namespace cocoascript {
  interface UIFloatRange {
  }
}
// https://developer.apple.com/documentation/uikit/uipageviewcontrolleroptioninterpagespacingkey
declare const UIPageViewControllerOptionInterPageSpacingKey: cocoascript.UIPageViewControllerOptionsKey;
// https://developer.apple.com/documentation/uikit/uipageviewcontrolleroptionspinelocationkey
declare const UIPageViewControllerOptionSpineLocationKey: cocoascript.UIPageViewControllerOptionsKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentidentifier
  type UISheetPresentationControllerDetentIdentifier = cocoascript.NSString;
}
// https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentidentifiermedium
declare const UISheetPresentationControllerDetentIdentifierMedium: cocoascript.UISheetPresentationControllerDetentIdentifier;
// https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentidentifierlarge
declare const UISheetPresentationControllerDetentIdentifierLarge: cocoascript.UISheetPresentationControllerDetentIdentifier;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uidocumentbrowseractionavailability
  type UIDocumentBrowserActionAvailability = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellconfigurationdragstate
  type UICellConfigurationDragState = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellconfigurationdropstate
  type UICellConfigurationDropState = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiconfigurationcolortransformergrayscale
declare const UIConfigurationColorTransformerGrayscale: cocoascript.UIConfigurationColorTransformer;
// https://developer.apple.com/documentation/uikit/uiconfigurationcolortransformerpreferredtint
declare const UIConfigurationColorTransformerPreferredTint: cocoascript.UIConfigurationColorTransformer;
// https://developer.apple.com/documentation/uikit/uiconfigurationcolortransformermonochrometint
declare const UIConfigurationColorTransformerMonochromeTint: cocoascript.UIConfigurationColorTransformer;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollisionbehaviormode
  type UICollisionBehaviorMode = cocoascript.NSUInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uipushbehaviormode
  type UIPushBehaviorMode = cocoascript.NSInteger;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uiinterpolatingmotioneffecttype
  type UIInterpolatingMotionEffectType = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiwindowlevelnormal
declare const UIWindowLevelNormal: cocoascript.UIWindowLevel;
// https://developer.apple.com/documentation/uikit/uiwindowlevelstatusbar
declare const UIWindowLevelStatusBar: cocoascript.UIWindowLevel;
// https://developer.apple.com/documentation/uikit/uiwindowlevelalert
declare const UIWindowLevelAlert: cocoascript.UIWindowLevel;
// https://developer.apple.com/documentation/uikit/uifontweighttrait
declare const UIFontWeightTrait: cocoascript.UIFontDescriptorTraitKey;
// https://developer.apple.com/documentation/uikit/uifontweightultralight
declare const UIFontWeightUltraLight: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightthin
declare const UIFontWeightThin: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightlight
declare const UIFontWeightLight: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightregular
declare const UIFontWeightRegular: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightmedium
declare const UIFontWeightMedium: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightsemibold
declare const UIFontWeightSemibold: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightbold
declare const UIFontWeightBold: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightheavy
declare const UIFontWeightHeavy: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontweightblack
declare const UIFontWeightBlack: cocoascript.UIFontWeight;
// https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignmonospaced
declare const UIFontDescriptorSystemDesignMonospaced: cocoascript.UIFontDescriptorSystemDesign;
// https://developer.apple.com/documentation/uikit/uifontdescriptornameattribute
declare const UIFontDescriptorNameAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptormatrixattribute
declare const UIFontDescriptorMatrixAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorsizeattribute
declare const UIFontDescriptorSizeAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesigndefault
declare const UIFontDescriptorSystemDesignDefault: cocoascript.UIFontDescriptorSystemDesign;
// https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignserif
declare const UIFontDescriptorSystemDesignSerif: cocoascript.UIFontDescriptorSystemDesign;
// https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignrounded
declare const UIFontDescriptorSystemDesignRounded: cocoascript.UIFontDescriptorSystemDesign;
// https://developer.apple.com/documentation/uikit/uifontdescriptorcascadelistattribute
declare const UIFontDescriptorCascadeListAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorcharactersetattribute
declare const UIFontDescriptorCharacterSetAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorfaceattribute
declare const UIFontDescriptorFaceAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorfamilyattribute
declare const UIFontDescriptorFamilyAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorfeaturesettingsattribute
declare const UIFontDescriptorFeatureSettingsAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorfixedadvanceattribute
declare const UIFontDescriptorFixedAdvanceAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptortextstyleattribute
declare const UIFontDescriptorTextStyleAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptortraitsattribute
declare const UIFontDescriptorTraitsAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontdescriptorvisiblenameattribute
declare const UIFontDescriptorVisibleNameAttribute: cocoascript.UIFontDescriptorAttributeName;
// https://developer.apple.com/documentation/uikit/uifontfeaturetypeidentifierkey
declare const UIFontFeatureTypeIdentifierKey: cocoascript.UIFontDescriptorFeatureKey;
// https://developer.apple.com/documentation/uikit/uifontfeatureselectoridentifierkey
declare const UIFontFeatureSelectorIdentifierKey: cocoascript.UIFontDescriptorFeatureKey;
// https://developer.apple.com/documentation/uikit/uifontslanttrait
declare const UIFontSlantTrait: cocoascript.UIFontDescriptorTraitKey;
// https://developer.apple.com/documentation/uikit/uifontsymbolictrait
declare const UIFontSymbolicTrait: cocoascript.UIFontDescriptorTraitKey;
// https://developer.apple.com/documentation/uikit/uifontwidthtrait
declare const UIFontWidthTrait: cocoascript.UIFontDescriptorTraitKey;
// https://developer.apple.com/documentation/uikit/uitextwritingdirectionnatural
declare const UITextWritingDirectionNatural: cocoascript.UITextWritingDirection;
// https://developer.apple.com/documentation/uikit/uitextwritingdirectionlefttoright
declare const UITextWritingDirectionLeftToRight: cocoascript.UITextWritingDirection;
// https://developer.apple.com/documentation/uikit/uitextwritingdirectionrighttoleft
declare const UITextWritingDirectionRightToLeft: cocoascript.UITextWritingDirection;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeurl
declare const UITextContentTypeURL: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypenameprefix
declare const UITextContentTypeNamePrefix: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypename
declare const UITextContentTypeName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypenamesuffix
declare const UITextContentTypeNameSuffix: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypegivenname
declare const UITextContentTypeGivenName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypemiddlename
declare const UITextContentTypeMiddleName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypefamilyname
declare const UITextContentTypeFamilyName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypenickname
declare const UITextContentTypeNickname: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeorganizationname
declare const UITextContentTypeOrganizationName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypejobtitle
declare const UITextContentTypeJobTitle: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypelocation
declare const UITextContentTypeLocation: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypefullstreetaddress
declare const UITextContentTypeFullStreetAddress: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypestreetaddressline1
declare const UITextContentTypeStreetAddressLine1: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypestreetaddressline2
declare const UITextContentTypeStreetAddressLine2: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeaddresscity
declare const UITextContentTypeAddressCity: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeaddresscityandstate
declare const UITextContentTypeAddressCityAndState: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeaddressstate
declare const UITextContentTypeAddressState: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypepostalcode
declare const UITextContentTypePostalCode: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypesublocality
declare const UITextContentTypeSublocality: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypecountryname
declare const UITextContentTypeCountryName: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeusername
declare const UITextContentTypeUsername: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypepassword
declare const UITextContentTypePassword: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypenewpassword
declare const UITextContentTypeNewPassword: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeonetimecode
declare const UITextContentTypeOneTimeCode: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypetelephonenumber
declare const UITextContentTypeTelephoneNumber: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypecreditcardnumber
declare const UITextContentTypeCreditCardNumber: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypedatetime
declare const UITextContentTypeDateTime: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeflightnumber
declare const UITextContentTypeFlightNumber: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uitextcontenttypeshipmenttrackingnumber
declare const UITextContentTypeShipmentTrackingNumber: cocoascript.UITextContentType;
// https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutautomaticsize
declare const UICollectionViewFlowLayoutAutomaticSize: cocoascript.CGSize;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutsectioninsetreference
  type UICollectionViewFlowLayoutSectionInsetReference = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationmetadatakeytitle
declare const UIActivityItemsConfigurationMetadataKeyTitle: cocoascript.UIActivityItemsConfigurationMetadataKey;
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationmetadatakeymessagebody
declare const UIActivityItemsConfigurationMetadataKeyMessageBody: cocoascript.UIActivityItemsConfigurationMetadataKey;
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationmetadatakeylinkpresentationmetadata
declare const UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata: cocoascript.UIActivityItemsConfigurationMetadataKey;
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteractionshare
declare const UIActivityItemsConfigurationInteractionShare: cocoascript.UIActivityItemsConfigurationInteraction;
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationpreviewintentfullsize
declare const UIActivityItemsConfigurationPreviewIntentFullSize: cocoascript.UIActivityItemsConfigurationPreviewIntent;
// https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationpreviewintentthumbnail
declare const UIActivityItemsConfigurationPreviewIntentThumbnail: cocoascript.UIActivityItemsConfigurationPreviewIntent;
// https://developer.apple.com/documentation/uikit/uitransitioncontextfromviewcontrollerkey
declare const UITransitionContextFromViewControllerKey: cocoascript.UITransitionContextViewControllerKey;
// https://developer.apple.com/documentation/uikit/uitransitioncontexttoviewcontrollerkey
declare const UITransitionContextToViewControllerKey: cocoascript.UITransitionContextViewControllerKey;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionupdateaction
  type UICollectionUpdateAction = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uitransitioncontextfromviewkey
declare const UITransitionContextFromViewKey: cocoascript.UITransitionContextViewKey;
// https://developer.apple.com/documentation/uikit/uitransitioncontexttoviewkey
declare const UITransitionContextToViewKey: cocoascript.UITransitionContextViewKey;
// https://developer.apple.com/documentation/uikit/uiwindowscenesessionroleapplication
declare const UIWindowSceneSessionRoleApplication: cocoascript.UISceneSessionRole;
// https://developer.apple.com/documentation/uikit/uiwindowscenesessionroleexternaldisplay
declare const UIWindowSceneSessionRoleExternalDisplay: cocoascript.UISceneSessionRole;
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewcellregistrationconfigurationhandler
  type UICollectionViewCellRegistrationConfigurationHandler = cocoascript.id;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistrationconfigurationhandler
  type UICollectionViewSupplementaryRegistrationConfigurationHandler = cocoascript.NSIndexPath;
}
declare namespace cocoascript {
  // https://developer.apple.com/documentation/uikit/uicellaccessoryoutlinedisclosurestyle
  type UICellAccessoryOutlineDisclosureStyle = cocoascript.NSInteger;
}
// https://developer.apple.com/documentation/uikit/uifloatrangezero
declare const UIFloatRangeZero: cocoascript.UIFloatRange;
// https://developer.apple.com/documentation/uikit/uifloatrangeinfinite
declare const UIFloatRangeInfinite: cocoascript.UIFloatRange;
