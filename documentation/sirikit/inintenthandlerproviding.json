{
  "abstract": [
    {
      "type": "text",
      "text": "The interface for dispatching intents to the custom objects that handle those intents. "
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/sirikit"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/sirikit",
        "doc://com.apple.documentation/documentation/sirikit/intents_and_related_classes"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1638630,
  "kind": "symbol",
  "metadata": {
    "title": "INIntentHandlerProviding",
    "role": "symbol",
    "roleHeading": "Protocol",
    "modules": [
      {
        "name": "Intents"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "10.0",
        "current": "14.3"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "14.3"
      },
      {
        "name": "tvOS",
        "introducedAt": "14.0",
        "current": "14.3"
      },
      {
        "name": "watchOS",
        "introducedAt": "3.2",
        "current": "7.2"
      }
    ],
    "externalID": "c:objc(pl)INIntentHandlerProviding",
    "symbolKind": "intf"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/sirikit/inintenthandlerproviding"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/sirikit/inintenthandlerproviding"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/sirikit": {
      "title": "SiriKit",
      "identifier": "doc://com.apple.documentation/documentation/sirikit",
      "url": "/documentation/sirikit",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/sirikit/intents_and_related_classes": {
      "title": "Intents and Related Classes",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/intents_and_related_classes",
      "kind": "article",
      "role": "collectionGroup",
      "url": "/documentation/sirikit/intents_and_related_classes",
      "abstract": [
        {
          "type": "text",
          "text": "Learn about the classes you use to build your Intents extension."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/inextension": {
      "title": "INExtension",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/inextension",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/sirikit/inextension"
    },
    "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding/1638898-handlerforintent": {
      "title": "handlerForIntent:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding/1638898-handlerforintent",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/sirikit/inintenthandlerproviding/1638898-handlerforintent",
      "required": true,
      "abstract": [
        {
          "type": "text",
          "text": "Returns the object capable of handling the specified intent in an extension."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "handlerForIntent:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/objectivec/1418956-nsobject": {
      "title": "NSObject",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/objectivec/1418956-nsobject",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/objectivec/1418956-nsobject"
    },
    "doc://com.apple.documentation/documentation/sirikit/creating_an_intents_app_extension": {
      "title": "Creating an Intents App Extension",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/creating_an_intents_app_extension",
      "kind": "article",
      "role": "article",
      "url": "/documentation/sirikit/creating_an_intents_app_extension",
      "abstract": [
        {
          "type": "text",
          "text": "Add and configure an Intents app extension in your Xcode project."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/structuring_your_code_to_support_app_extensions": {
      "title": "Structuring Your Code to Support App Extensions",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/structuring_your_code_to_support_app_extensions",
      "kind": "article",
      "role": "article",
      "url": "/documentation/sirikit/structuring_your_code_to_support_app_extensions",
      "abstract": [
        {
          "type": "text",
          "text": "Move your back-end services to a private framework so your app and app extensions can use them."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/dispatching_intents_to_handler_objects": {
      "title": "Dispatching Intents to Handler Objects",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/dispatching_intents_to_handler_objects",
      "kind": "article",
      "role": "article",
      "url": "/documentation/sirikit/dispatching_intents_to_handler_objects",
      "abstract": [
        {
          "type": "text",
          "text": "Provide SiriKit with an object capable of handling a given intent."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/resolving_and_handling_intents": {
      "title": "Resolving and Handling Intents",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/resolving_and_handling_intents",
      "kind": "article",
      "role": "article",
      "url": "/documentation/sirikit/resolving_and_handling_intents",
      "abstract": [
        {
          "type": "text",
          "text": "Resolve, confirm, and handle user requests for your appâ€™s services."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding": {
      "title": "INIntentHandlerProviding",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/sirikit/inintenthandlerproviding",
      "abstract": [
        {
          "type": "text",
          "text": "The interface for dispatching intents to the custom objects that handle those intents. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/sirikit/providing_hands-free_app_control_with_intents": {
      "title": "Providing Hands-Free App Control with Intents",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/sirikit/providing_hands-free_app_control_with_intents",
      "kind": "article",
      "role": "sampleCode",
      "url": "/documentation/sirikit/providing_hands-free_app_control_with_intents",
      "abstract": [
        {
          "type": "text",
          "text": "Resolve, confirm, and handle intents without an extension."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "relationshipsSections": [
    {
      "kind": "relationships",
      "title": "Inherits From",
      "type": "inheritsFrom",
      "identifiers": [
        "doc://com.apple.documentation/documentation/objectivec/1418956-nsobject"
      ]
    },
    {
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes",
      "identifiers": [
        "doc://com.apple.documentation/documentation/sirikit/inextension"
      ]
    }
  ],
  "topicSections": [
    {
      "kind": "taskGroup",
      "title": "Providing Handlers for Intents",
      "identifiers": [
        "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding/1638898-handlerforintent"
      ]
    }
  ],
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/sirikit/creating_an_intents_app_extension",
        "doc://com.apple.documentation/documentation/sirikit/structuring_your_code_to_support_app_extensions",
        "doc://com.apple.documentation/documentation/sirikit/dispatching_intents_to_handler_objects",
        "doc://com.apple.documentation/documentation/sirikit/resolving_and_handling_intents",
        "doc://com.apple.documentation/documentation/sirikit/intents_and_related_classes",
        "doc://com.apple.documentation/documentation/sirikit/providing_hands-free_app_control_with_intents"
      ],
      "title": "Siri Intents",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "@protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "INIntentHandlerProviding"
            }
          ],
          "platforms": [
            "iOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The "
            },
            {
              "type": "codeVoice",
              "code": "INIntentHandlerProviding"
            },
            {
              "type": "text",
              "text": " protocol defines the method for routing SiriKit requests to the appropriate objects of your Intents extension. The method in this protocol acts as a dispatcher, returning an object capable of resolving, confirming, and handling a specific intent object. This protocol is adopted by the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/sirikit/inextension"
            },
            {
              "type": "text",
              "text": " class and you must provide a custom implementation. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "When you add an Intents extension to your project, Xcode automatically creates a default "
            },
            {
              "type": "reference",
              "isActive": false,
              "identifier": "doc://com.apple.documentation/documentation/sirikit/inextension"
            },
            {
              "type": "text",
              "text": " subclass that adopts this protocol. Modify the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/sirikit/inintenthandlerproviding/1638898-handlerforintent"
            },
            {
              "type": "text",
              "text": " method in that subclass and use it to create your handler objects. You can use the same class to handle multiple intents or you can use different classes for each intent. "
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}