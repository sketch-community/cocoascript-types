{
  "abstract": [
    {
      "type": "text",
      "text": "Returns the minimum size, in bytes, for the temporary buffer that the caller supplies to any of the convolution functions. "
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/convolution"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/vimage",
        "doc://com.apple.documentation/documentation/accelerate/vimage/vimage_operations",
        "doc://com.apple.documentation/documentation/accelerate/convolution"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/accelerate/convolution/1807059-vimagegetminimumtempbuffersizefo",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1807059,
  "kind": "symbol",
  "metadata": {
    "title": "vImageGetMinimumTempBufferSizeForConvolution",
    "role": "pseudoSymbol",
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "symbolKind": "func"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/accelerate/convolution/1807059-vimagegetminimumtempbuffersizefo",
        "documentation/accelerate/vimage/vimage_operations/convolution/1807059-vimagegetminimumtempbuffersizefo"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/accelerate": {
      "title": "Accelerate",
      "identifier": "doc://com.apple.documentation/documentation/accelerate",
      "url": "/documentation/accelerate",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/accelerate/convolution": {
      "title": "Convolution",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/convolution",
      "url": "/documentation/accelerate/convolution",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/vimage": {
      "title": "vImage",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/vimage",
      "url": "/documentation/accelerate/vimage",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/vimage/vimage_operations": {
      "title": "vImage Operations",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/vimage/vimage_operations",
      "url": "/documentation/accelerate/vimage/vimage_operations",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/convolution/1807059-vimagegetminimumtempbuffersizefo": {
      "title": "vImageGetMinimumTempBufferSizeForConvolution",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/convolution/1807059-vimagegetminimumtempbuffersizefo",
      "kind": "symbol",
      "role": "pseudoSymbol",
      "url": "/documentation/accelerate/convolution/1807059-vimagegetminimumtempbuffersizefo",
      "abstract": [
        {
          "type": "text",
          "text": "Returns the minimum size, in bytes, for the temporary buffer that the caller supplies to any of the convolution functions. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "deprecationSummary": [
    {
      "type": "paragraph",
      "inlineContent": [
        {
          "type": "text",
          "text": "Use the "
        },
        {
          "type": "codeVoice",
          "code": "kvImageGetTempBufferSize"
        },
        {
          "type": "text",
          "text": " flag with the appropriate convolution  function instead of calling this function."
        }
      ]
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "size_t vImageGetMinimumTempBufferSizeForConvolution ("
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   const vImage_Buffer *src,"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   const vImage_Buffer *dest,"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   uint32_t kernel_height,"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   uint32_t kernel_width,"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   vImage_Flags flags,"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": "   size_t bytesPerPixel"
            },
            {
              "kind": "text",
              "text": "\n"
            },
            {
              "kind": "text",
              "text": ");"
            }
          ],
          "platforms": []
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "src",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A pointer to the vImage buffer structure that you plan to pass to the convolution function."
                }
              ]
            }
          ]
        },
        {
          "name": "dest",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A pointer to the vImage buffer structure that you plan to pass to the convolution function."
                }
              ]
            }
          ]
        },
        {
          "name": "kernel_height",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The height, in pixels, of the kernel that you plan to use in the convolution function."
                }
              ]
            }
          ]
        },
        {
          "name": "kernel_width",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The width, in pixels, of the kernel that you plan to use in the convolution function."
                }
              ]
            }
          ]
        },
        {
          "name": "flags",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The flags that you plan to pass to the convolution function."
                }
              ]
            }
          ]
        },
        {
          "name": "bytesPerPixel",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The number of bytes in a pixel. Make sure to pass the value appropriate for the format of the pixel."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The minimum size, in bytes, of the temporary buffer."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "This function does not depend on the "
            },
            {
              "type": "codeVoice",
              "code": "data"
            },
            {
              "type": "text",
              "text": " or "
            },
            {
              "type": "codeVoice",
              "code": "rowBytes"
            },
            {
              "type": "text",
              "text": " fields of the "
            },
            {
              "type": "codeVoice",
              "code": "src"
            },
            {
              "type": "text",
              "text": " or "
            },
            {
              "type": "codeVoice",
              "code": "dest"
            },
            {
              "type": "text",
              "text": " parameters; it only uses the "
            },
            {
              "type": "codeVoice",
              "code": "height"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "width"
            },
            {
              "type": "text",
              "text": " fields from those parameters. If the size of the images you are processing stay the same, then the required size of the buffer also stays the same. More specifically, if, between two calls to "
            },
            {
              "type": "codeVoice",
              "code": "vImageGetMinimumTempBufferSizeForConvolution"
            },
            {
              "type": "text",
              "text": ", the "
            },
            {
              "type": "codeVoice",
              "code": "height"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "width"
            },
            {
              "type": "text",
              "text": " of the "
            },
            {
              "type": "codeVoice",
              "code": "src"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "dest"
            },
            {
              "type": "text",
              "text": " parameters do not increase, and the other parameters remain the same, then the result of the "
            },
            {
              "type": "codeVoice",
              "code": "vImageGetMinimumTempBufferSizeForConvolution"
            },
            {
              "type": "text",
              "text": " does not increase. This makes it easy to reuse the same temporary buffer when you are processing a number of images of the same size, as in tiling. "
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}