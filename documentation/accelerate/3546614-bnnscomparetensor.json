{
  "abstract": [
    {
      "type": "text",
      "text": "Returns a tensor of Boolean type by comparing or performing a logical operation between two inputs."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/bnns"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 3546614,
  "kind": "symbol",
  "metadata": {
    "title": "BNNSCompareTensor",
    "role": "symbol",
    "roleHeading": "Function",
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "14.0",
        "current": "14.3"
      },
      {
        "name": "macOS",
        "introducedAt": "11.0",
        "current": "11.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "14.0",
        "current": "14.3"
      },
      {
        "name": "tvOS",
        "introducedAt": "14.0",
        "current": "14.3"
      },
      {
        "name": "watchOS",
        "introducedAt": "7.0",
        "current": "7.2"
      }
    ],
    "externalID": "c:@F@BNNSCompareTensor",
    "symbolKind": "func"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/accelerate/3546614-bnnscomparetensor"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/accelerate/3546614-bnnscomparetensor"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/accelerate": {
      "title": "Accelerate",
      "identifier": "doc://com.apple.documentation/documentation/accelerate",
      "url": "/documentation/accelerate",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnns": {
      "title": "BNNS",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnns",
      "url": "/documentation/accelerate/bnns",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorgreater": {
      "title": "BNNSRelationalOperatorGreater",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorgreater",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorgreater"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorless": {
      "title": "BNNSRelationalOperatorLess",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorless",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorless"
    },
    "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor#3561615": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor#3561615",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3546614-bnnscomparetensor#3561615"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicaland": {
      "title": "BNNSRelationalOperatorLogicalAND",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicaland",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicaland"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicalor": {
      "title": "BNNSRelationalOperatorLogicalOR",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicalor",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicalor"
    },
    "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor#3561616": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor#3561616",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3546614-bnnscomparetensor#3561616"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor": {
      "title": "BNNSNDArrayDescriptor",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsndarraydescriptor"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator": {
      "title": "BNNSRelationalOperator",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsrelationaloperator",
      "abstract": [
        {
          "type": "text",
          "text": "Constants that describe relational operations."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor": {
      "title": "BNNSCompareTensor",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3546614-bnnscomparetensor",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/3546614-bnnscomparetensor",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a tensor of Boolean type by comparing or performing a logical operation between two inputs."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator"
      ],
      "title": "Tensor Comparison Layers",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "int"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "BNNSCompareTensor"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNDArrayDescriptor",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": " *in0, "
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNDArrayDescriptor",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": " *in1, "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSRelationalOperator",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator",
              "text": "BNNSRelationalOperator"
            },
            {
              "kind": "text",
              "text": " op, "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNDArrayDescriptor",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": " *out);"
            }
          ],
          "platforms": [
            "iOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "in0  ",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The descriptor of the first input."
                }
              ]
            }
          ]
        },
        {
          "name": "in1 ",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The descriptor of the second input."
                }
              ]
            }
          ]
        },
        {
          "name": "op  ",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The operator for comparison."
                }
              ]
            }
          ]
        },
        {
          "name": "out  ",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The descriptor of the output."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use relational operators, for example "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorgreater"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorless"
            },
            {
              "type": "text",
              "text": ", to compare floating-point elements. The following code compares the elements of two arrays of single-precision values for equality:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let a: [Float] = [1, 2, 3, 4]",
            "let b: [Float] = [5, 4, 3, 2]",
            "",
            "let size = (a.count, 0, 0, 0, 0, 0, 0, 0)",
            "let stride = (0, 0, 0, 0, 0, 0, 0, 0)",
            "",
            "var destination = [Bool](repeating: false,",
            "                         count: size.0)",
            "",
            "a.withUnsafeBufferPointer { aPtr in",
            "    b.withUnsafeBufferPointer { bPtr in",
            "        destination.withUnsafeMutableBufferPointer { destinationPtr in",
            "            var aDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                     layout: BNNSDataLayoutVector,",
            "                                                     size: size,",
            "                                                     stride: stride,",
            "                                                     data: UnsafeMutableRawPointer(mutating: aPtr.baseAddress!),",
            "                                                     data_type: .float,",
            "                                                     table_data: nil,",
            "                                                     table_data_type: .float,",
            "                                                     data_scale: 1,",
            "                                                     data_bias: 0)",
            "            ",
            "            var bDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                     layout: BNNSDataLayoutVector,",
            "                                                     size: size,",
            "                                                     stride: stride,",
            "                                                     data: UnsafeMutableRawPointer(mutating: bPtr.baseAddress!),",
            "                                                     data_type: .float,",
            "                                                     table_data: nil,",
            "                                                     table_data_type: .float,",
            "                                                     data_scale: 1,",
            "                                                     data_bias: 0)",
            "            ",
            "            var destinationDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                               layout: BNNSDataLayoutVector,",
            "                                                               size: size,",
            "                                                               stride: stride,",
            "                                                               data: destinationPtr.baseAddress!,",
            "                                                               data_type: BNNSDataTypeBoolean,",
            "                                                               table_data: nil,",
            "                                                               table_data_type: BNNSDataTypeBoolean,",
            "                                                               data_scale: 1,",
            "                                                               data_bias: 0)",
            "            ",
            "            BNNSCompareTensor(&aDescription,",
            "                              &bDescription,",
            "                              BNNSRelationalOperatorEqual,",
            "                              &destinationDescription)",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3561615",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "On return, "
            },
            {
              "type": "codeVoice",
              "code": "destination"
            },
            {
              "type": "text",
              "text": " contains the values "
            },
            {
              "type": "codeVoice",
              "code": "[false, false, true, false]"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use logical operators, for example "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicaland"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsrelationaloperator/bnnsrelationaloperatorlogicalor"
            },
            {
              "type": "text",
              "text": ", to compare Boolean elements. The following code performs a logical AND operation on the elements of two arrays of Boolean values:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "",
            "let a: [Bool] = [ true, false, false, true]",
            "let b: [Bool] = [false, false,  true, true]",
            "",
            "let size = (a.count, 0, 0, 0, 0, 0, 0, 0)",
            "let stride = (0, 0, 0, 0, 0, 0, 0, 0)",
            "",
            "var destination = [Bool](repeating: false,",
            "                         count: size.0)",
            "",
            "a.withUnsafeBufferPointer { aPtr in",
            "    b.withUnsafeBufferPointer { bPtr in",
            "        destination.withUnsafeMutableBufferPointer { destinationPtr in",
            "            var aDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                     layout: BNNSDataLayoutVector,",
            "                                                     size: size,",
            "                                                     stride: stride,",
            "                                                     data: UnsafeMutableRawPointer(mutating: aPtr.baseAddress!),",
            "                                                     data_type: BNNSDataTypeBoolean,",
            "                                                     table_data: nil,",
            "                                                     table_data_type: BNNSDataTypeBoolean,",
            "                                                     data_scale: 1,",
            "                                                     data_bias: 0)",
            "            ",
            "            var bDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                     layout: BNNSDataLayoutVector,",
            "                                                     size: size,",
            "                                                     stride: stride,",
            "                                                     data: UnsafeMutableRawPointer(mutating: bPtr.baseAddress!),",
            "                                                     data_type: BNNSDataTypeBoolean,",
            "                                                     table_data: nil,",
            "                                                     table_data_type: BNNSDataTypeBoolean,",
            "                                                     data_scale: 1,",
            "                                                     data_bias: 0)",
            "            ",
            "            var destinationDescription = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                                               layout: BNNSDataLayoutVector,",
            "                                                               size: size,",
            "                                                               stride: stride,",
            "                                                               data: destinationPtr.baseAddress!,",
            "                                                               data_type: BNNSDataTypeBoolean,",
            "                                                               table_data: nil,",
            "                                                               table_data_type: BNNSDataTypeBoolean,",
            "                                                               data_scale: 1,",
            "                                                               data_bias: 0)",
            "            ",
            "            BNNSCompareTensor(&aDescription,",
            "                              &bDescription,",
            "                              BNNSRelationalOperatorLogicalAND,",
            "                              &destinationDescription)",
            "            ",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3561616",
            "title": "Listing 2"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "On return, "
            },
            {
              "type": "codeVoice",
              "code": "destination"
            },
            {
              "type": "text",
              "text": " contains the values "
            },
            {
              "type": "codeVoice",
              "code": "[false, false, false, true]"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}