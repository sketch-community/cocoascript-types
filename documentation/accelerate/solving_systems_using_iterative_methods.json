{
  "abstract": [
    {
      "type": "text",
      "text": "Use iterative methods to solve systems of equations where the coefficient matrix is sparse. "
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/sparse_solvers"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 2878005,
  "kind": "article",
  "metadata": {
    "title": "Solving Systems Using Iterative Methods",
    "role": "article",
    "roleHeading": "Article",
    "modules": [
      {
        "name": "Accelerate"
      }
    ]
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/accelerate/solving_systems_using_iterative_methods",
        "documentation/accelerate/sparse_solvers/solving_systems_using_iterative_methods"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/accelerate/solving_systems_using_iterative_methods",
        "documentation/accelerate/sparse_solvers/solving_systems_using_iterative_methods"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/accelerate": {
      "title": "Accelerate",
      "identifier": "doc://com.apple.documentation/documentation/accelerate",
      "url": "/documentation/accelerate",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/accelerate/sparse_solvers": {
      "title": "Sparse Solvers",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/sparse_solvers",
      "kind": "article",
      "role": "collectionGroup",
      "url": "/documentation/accelerate/sparse_solvers",
      "abstract": [
        {
          "type": "text",
          "text": "Solve systems of equations where the coefficient matrix is sparse. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/creating_sparse_matrices": {
      "title": "Creating Sparse Matrices",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/creating_sparse_matrices",
      "kind": "article",
      "role": "article",
      "url": "/documentation/accelerate/creating_sparse_matrices",
      "abstract": [
        {
          "type": "text",
          "text": "Create sparse matrices for factorization and solving systems."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880977": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880977",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/solving_systems_using_iterative_methods#2880977"
    },
    "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880982": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880982",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/solving_systems_using_iterative_methods#2880982"
    },
    "doc://com.apple.documentation/documentation/accelerate/2879258-sparsesolve": {
      "title": "SparseSolve",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/2879258-sparsesolve",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/2879258-sparsesolve"
    },
    "doc://com.apple.documentation/documentation/accelerate/sparseiterativestatus_t/sparseiterativeconverged": {
      "title": "SparseIterativeConverged",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/sparseiterativestatus_t/sparseiterativeconverged",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/sparseiterativestatus_t/sparseiterativeconverged"
    },
    "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880983": {
      "title": "Listing 3",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods#2880983",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/solving_systems_using_iterative_methods#2880983"
    },
    "link-media-2904629": {
      "identifier": "link-media-2904629",
      "type": "link",
      "title": "Figure 1",
      "url": "/documentation/accelerate/solving_systems_using_iterative_methods#2904629"
    },
    "media-2904629": {
      "identifier": "media-2904629",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 252,
            "height": 92
          },
          "url": "https://docs-assets.developer.apple.com/published/ab65d5da7e/e141fd08-c867-46cd-9b4b-e5d09376990f.png"
        }
      ],
      "alt": "Equation to solve using the iterative method Least Squares Minimum Residual (LSMR).",
      "title": "Figure 1"
    },
    "doc://com.apple.documentation/documentation/accelerate/implementing_iterative_methods": {
      "title": "Implementing Iterative Methods",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/implementing_iterative_methods",
      "kind": "article",
      "role": "article",
      "url": "/documentation/accelerate/implementing_iterative_methods",
      "abstract": [
        {
          "type": "text",
          "text": "Use iterative methods to solve large problems faster and with a lower memory overhead than with direct methods.  "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_direct_methods": {
      "title": "Solving Systems Using Direct Methods",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_direct_methods",
      "kind": "article",
      "role": "article",
      "url": "/documentation/accelerate/solving_systems_using_direct_methods",
      "abstract": [
        {
          "type": "text",
          "text": "Use direct methods to solve systems of equations where the coefficient matrix is sparse."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods": {
      "title": "Solving Systems Using Iterative Methods",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_iterative_methods",
      "kind": "article",
      "role": "article",
      "url": "/documentation/accelerate/solving_systems_using_iterative_methods",
      "abstract": [
        {
          "type": "text",
          "text": "Use iterative methods to solve systems of equations where the coefficient matrix is sparse. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/creating_a_sparse_matrix_from_coordinate_format_arrays": {
      "title": "Creating a Sparse Matrix from Coordinate Format Arrays",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/creating_a_sparse_matrix_from_coordinate_format_arrays",
      "kind": "article",
      "role": "article",
      "url": "/documentation/accelerate/creating_a_sparse_matrix_from_coordinate_format_arrays",
      "abstract": [
        {
          "type": "text",
          "text": "Use separate coordinate format arrays to create sparse matrices."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/accelerate/creating_sparse_matrices",
        "doc://com.apple.documentation/documentation/accelerate/implementing_iterative_methods",
        "doc://com.apple.documentation/documentation/accelerate/solving_systems_using_direct_methods",
        "doc://com.apple.documentation/documentation/accelerate/creating_a_sparse_matrix_from_coordinate_format_arrays",
        "doc://com.apple.documentation/documentation/accelerate/sparse_solvers"
      ],
      "title": "Sparse Matrices",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "content",
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The code discussed here solves the following equation by using the iterative method "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "Least Squares Minimum Residual"
                }
              ]
            },
            {
              "type": "text",
              "text": " (LSMR) to find the solution to this equation:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-2904629",
              "metadata": {
                "anchor": "2904629",
                "title": "Figure 1"
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "In the equation above, "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "text",
              "text": " refers to the 4 x 3 matrix, and "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "b"
                }
              ]
            },
            {
              "type": "text",
              "text": " to the right-hand-side vector. The code in this article solves the equation "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "Ax = b"
                }
              ]
            },
            {
              "type": "text",
              "text": " by finding "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "x"
                }
              ]
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Because "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "text",
              "text": " is overdetermined (it has more rows than columns), for most right-hand sides there will not be an exact solution. In this case, it is normally required to find the closest solution, in the sense that it minimizes the 2-norm of the error. That is, it solves the optimization "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "min ‖ Ax - b ‖"
                }
              ]
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "₂."
                }
              ]
            },
            {
              "type": "text",
              "text": " This is known as the least-squares problem."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You could solve this problem through a direct method such as Sparse QR; however, for some problems, a faster method that provides a \"good enough\" solution is the iterative method LSMR. Unlike direct methods that factorize the matrix "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "text",
              "text": ", iterative methods only require the ability to multiply by the matrix (and its transpose, "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "ᵀ"
                }
              ]
            },
            {
              "type": "text",
              "text": "). They move through a sequence of approximate solutions, converging to the correct answer. However, these methods run into numerical difficulties more often than direct methods. Resolving these issues requires expert knowledge, and is sometimes impossible. The most common method to improve and accelerate convergence is to use a preconditioner—an operator that approximates "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "⁻"
                }
              ]
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "¹"
                }
              ]
            },
            {
              "type": "text",
              "text": ", and is hence problem specific. For least-squares problems, just using a diagonal matrix with entries equal to the 2-norm of each column is often sufficient, and is the method discussed here."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Although you do not need the matrix explicitly to use iterative methods, the Accelerate framework offers the ability to supply a matrix explicitly if it is available, reducing the code required. The example takes advantage of this ability. "
            }
          ]
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Create the Matrix",
          "anchor": "2880974"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use the code below—which is discussed in detail in "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/creating_sparse_matrices"
            },
            {
              "type": "text",
              "text": "—to define the unsymmetric matrix "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A"
                }
              ]
            },
            {
              "type": "text",
              "text": ":"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "int rowIndices[]    = {   0,    1,   3,   0,   1,    2,   3,   1,   2 };",
            "double values[]     = { 2.0, -0.2, 2.5, 1.0, 3.2, -0.1, 1.1, 1.4, 0.5 };",
            " ",
            "long columnStarts[] = {   0,              3,                   7,        9};",
            " ",
            "  SparseMatrix_Double A = {",
            "    .structure = {",
            "      .rowCount     = 4,",
            "      .columnCount  = 3,",
            "      .columnStarts = columnStarts,",
            "      .rowIndices   = rowIndices,",
            "      // Matrix meta-data",
            "      .attributes = {",
            "        .kind = SparseOrdinary,          ",
            "      },",
            "      .blockSize = 1",
            "    },",
            "    .data = values",
            "  };"
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2880977",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Solve the Equation",
          "anchor": "2880975"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You define the right-hand-side and solution vectors as arrays wrapped in flexible data types. The initial values of "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "x"
                }
              ]
            },
            {
              "type": "text",
              "text": " are used as an initial guess of the solution. If no good estimate is known, initialize all the values to zero:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "double bValues[] = { 1.200, 1.013, 0.205, -0.172 };",
            "DenseVector_Double b = {",
            "    .count = 4,    ",
            "    .data = bValues ",
            "  };",
            " ",
            "double xValues[] = {   0.0,   0.0,   0.0 };",
            "DenseVector_Double x = {",
            "    .count = 3,     ",
            "    .data = xValues ",
            "  };"
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2880982",
            "title": "Listing 2"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "With the matrix and vectors created, you are ready to perform the full LSMR iteration and iterate over the results in "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "x"
                }
              ]
            },
            {
              "type": "text",
              "text": ". "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/2879258-sparsesolve"
            },
            {
              "type": "text",
              "text": " returns a status which, if equal to "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/sparseiterativestatus_t/sparseiterativeconverged"
            },
            {
              "type": "text",
              "text": ", indicates that the vector, "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "x"
                }
              ]
            },
            {
              "type": "text",
              "text": ", contains the solution. "
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "__auto_type status = SparseSolve( SparseLSMR(), A, b, x, SparsePreconditionerDiagScaling);",
            "if(status!=SparseIterativeConverged) {    ",
            "    printf(\"Failed to converge. Returned with error %d\\n\", status);}",
            "else {",
            "    printf(\"x = \"); ",
            "    for(int i=0; i<x.count; i++) ",
            "        printf(\" %.2f\", x.data[i]); printf(\"\\n\");",
            "}"
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2880983",
            "title": "Listing 3"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You should get this output: "
            },
            {
              "type": "codeVoice",
              "code": "x = 0.10 0.20 0.30"
            },
            {
              "type": "text",
              "text": ". "
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}