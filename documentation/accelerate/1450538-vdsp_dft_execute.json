{
  "abstract": [
    {
      "type": "text",
      "text": "Calculates the discrete single-precision Fourier transform for a vector."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/discrete_fourier_transforms"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/vdsp",
        "doc://com.apple.documentation/documentation/accelerate/discrete_fourier_transforms"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1450538,
  "kind": "symbol",
  "metadata": {
    "title": "vDSP_DFT_Execute",
    "role": "symbol",
    "roleHeading": "Function",
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "4.0",
        "current": "14.3"
      },
      {
        "name": "macOS",
        "introducedAt": "10.7",
        "current": "11.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "14.3"
      },
      {
        "name": "tvOS",
        "introducedAt": "9.0",
        "current": "14.3"
      },
      {
        "name": "watchOS",
        "introducedAt": "2.0",
        "current": "7.2"
      }
    ],
    "externalID": "c:@F@vDSP_DFT_Execute",
    "symbolKind": "func"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/accelerate/1450538-vdsp_dft_execute"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/accelerate/1450538-vdsp_dft_execute"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/accelerate": {
      "title": "Accelerate",
      "identifier": "doc://com.apple.documentation/documentation/accelerate",
      "url": "/documentation/accelerate",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/accelerate/discrete_fourier_transforms": {
      "title": "Discrete Fourier Transforms",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/discrete_fourier_transforms",
      "url": "/documentation/accelerate/discrete_fourier_transforms",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/vdsp": {
      "title": "vDSP",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/vdsp",
      "url": "/documentation/accelerate/vdsp",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup": {
      "title": "vDSP_DFT_zop_CreateSetup",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450061-vdsp_dft_zop_createsetup",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a data structure for use with "
        },
        {
          "type": "reference",
          "isActive": true,
          "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "reference",
          "isActive": true,
          "identifier": "doc://com.apple.documentation/documentation/accelerate/1450016-vdsp_dct_execute"
        },
        {
          "type": "text",
          "text": " to perform a complex-to-complex discrete Fourier transform, forward or inverse."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup": {
      "title": "vDSP_DFT_zrop_CreateSetup",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a data structure for use with "
        },
        {
          "type": "reference",
          "isActive": true,
          "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
        },
        {
          "type": "text",
          "text": " to perform a single-precision discrete Fourier transform, forward (real to complex) or inverse (complex to real)."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute": {
      "title": "vDSP_DFT_Execute",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute",
      "abstract": [
        {
          "type": "text",
          "text": "Calculates the discrete single-precision Fourier transform for a vector."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557694": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557694",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557694"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557695": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557695",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557695"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557696": {
      "title": "Listing 3",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557696",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557696"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557697": {
      "title": "Listing 4",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557697",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557697"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557698": {
      "title": "Listing 5",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557698",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557698"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557699": {
      "title": "Listing 6",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute#2557699",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/1450538-vdsp_dft_execute#2557699"
    },
    "doc://com.apple.documentation/documentation/accelerate/1450016-vdsp_dct_execute": {
      "title": "vDSP_DCT_Execute",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450016-vdsp_dct_execute",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450016-vdsp_dct_execute"
    },
    "doc://com.apple.documentation/documentation/accelerate/1449812-vdsp_dft_executed": {
      "title": "vDSP_DFT_ExecuteD",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1449812-vdsp_dft_executed",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1449812-vdsp_dft_executed",
      "abstract": [
        {
          "type": "text",
          "text": "Calculates the discrete double-precision Fourier transform for a vector."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1450730-vdsp_dft_zop_createsetupd": {
      "title": "vDSP_DFT_zop_CreateSetupD",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450730-vdsp_dft_zop_createsetupd",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450730-vdsp_dft_zop_createsetupd",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a data structure for use with "
        },
        {
          "type": "reference",
          "isActive": true,
          "identifier": "doc://com.apple.documentation/documentation/accelerate/1449812-vdsp_dft_executed"
        },
        {
          "type": "text",
          "text": " to perform a double-precision, complex-to-complex discrete Fourier transform, forward or inverse."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1449790-vdsp_dft_zrop_createsetupd": {
      "title": "vDSP_DFT_zrop_CreateSetupD",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1449790-vdsp_dft_zrop_createsetupd",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1449790-vdsp_dft_zrop_createsetupd",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a data structure for use with "
        },
        {
          "type": "reference",
          "isActive": true,
          "identifier": "doc://com.apple.documentation/documentation/accelerate/1449812-vdsp_dft_executed"
        },
        {
          "type": "text",
          "text": " to perform a double-precision discrete Fourier transform, forward (real to complex) or inverse (complex to real)."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1450791-vdsp_dft_destroysetup": {
      "title": "vDSP_DFT_DestroySetup",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450791-vdsp_dft_destroysetup",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450791-vdsp_dft_destroysetup",
      "abstract": [
        {
          "type": "text",
          "text": "Releases a single-precision setup object."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/1450367-vdsp_dft_destroysetupd": {
      "title": "vDSP_DFT_DestroySetupD",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450367-vdsp_dft_destroysetupd",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/1450367-vdsp_dft_destroysetupd",
      "abstract": [
        {
          "type": "text",
          "text": "Releases a double-precision setup object."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup",
        "doc://com.apple.documentation/documentation/accelerate/1450730-vdsp_dft_zop_createsetupd",
        "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup",
        "doc://com.apple.documentation/documentation/accelerate/1449790-vdsp_dft_zrop_createsetupd",
        "doc://com.apple.documentation/documentation/accelerate/1450791-vdsp_dft_destroysetup",
        "doc://com.apple.documentation/documentation/accelerate/1450367-vdsp_dft_destroysetupd",
        "doc://com.apple.documentation/documentation/accelerate/1449812-vdsp_dft_executed"
      ],
      "title": "Discrete Fourier Transforms",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "vDSP_DFT_Execute"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "struct"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "text": "vDSP_DFT_SetupStruct"
            },
            {
              "kind": "text",
              "text": " *__Setup, "
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "float"
            },
            {
              "kind": "text",
              "text": " *__Ir, "
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "float"
            },
            {
              "kind": "text",
              "text": " *__Ii, "
            },
            {
              "kind": "keyword",
              "text": "float"
            },
            {
              "kind": "text",
              "text": " *__Or, "
            },
            {
              "kind": "keyword",
              "text": "float"
            },
            {
              "kind": "text",
              "text": " *__Oi);"
            }
          ],
          "platforms": [
            "iOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "__Setup",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A DFT setup object returned by a call to "
                },
                {
                  "type": "reference",
                  "isActive": true,
                  "identifier": "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup"
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "reference",
                  "isActive": true,
                  "identifier": "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "name": "__Ir",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A single-precision vector containing the real parts of the input values."
                }
              ]
            }
          ]
        },
        {
          "name": "__Ii",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A single-precision vector containing the imaginary parts of the input values."
                }
              ]
            }
          ]
        },
        {
          "name": "__Or",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A single-precision vector where the real parts of the results are stored on return."
                }
              ]
            }
          ]
        },
        {
          "name": "__Oi",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A single-precision vector where the imaginary parts of the results are stored on return."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "This function calculates either a real or complex discrete Fourier transform, depending on whether the setup object was created with a call to "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup"
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup"
            },
            {
              "type": "text",
              "text": " or "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "aside",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "For best performance, make sure the four vector addresses passed to this function are 16-byte-aligned. "
                }
              ]
            }
          ],
          "style": "important"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For a complex DFT, the way the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
            },
            {
              "type": "text",
              "text": " function works is fairly straightforward: it works on real/imaginary inputs specified by "
            },
            {
              "type": "codeVoice",
              "code": "Ir"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Ii"
            },
            {
              "type": "text",
              "text": ", and leaves real/imaginary outputs specified by "
            },
            {
              "type": "codeVoice",
              "code": "Or"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Oi"
            },
            {
              "type": "text",
              "text": "; the transform is either forward or inverse according to the "
            },
            {
              "type": "codeVoice",
              "code": "Direction"
            },
            {
              "type": "text",
              "text": " flag specified in the setup. Given "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " as the length specified in the setup, each array should contain "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " elements"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For a real-to-complex DFT, there are some complications: forward means real-to-complex, inverse is complex-to-real. In either direction, the data for the real side of the transform is stored alternately in the real and imaginary arrays (even-indexed elements in the real array, odd-indexed in the imaginary array). Given "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " as the length specified in the setup, each array should contain "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": "/2 elements"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "When the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
            },
            {
              "type": "text",
              "text": " function is called with a setup returned from the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1450061-vdsp_dft_zop_createsetup"
            },
            {
              "type": "text",
              "text": " function, it performs a complex-to-complex transform on inputs specified by "
            },
            {
              "type": "codeVoice",
              "code": "Ir"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Ii"
            },
            {
              "type": "text",
              "text": " and stores results in "
            },
            {
              "type": "codeVoice",
              "code": "Or"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Oi"
            },
            {
              "type": "text",
              "text": ". The transform is forward or inverse according to the "
            },
            {
              "type": "codeVoice",
              "code": "Direction"
            },
            {
              "type": "text",
              "text": " flag specified in the setup. Given "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " as the length specified in the setup, each array should contain "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " elements:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "for 0 <= k < Length,",
            "  H[k] = sum(1**(S * j*k/Length) * h[j], 0 <= j < Length) (see Note below),",
            "  H[k] = sum(e**(2*pi*i*(S * j*k/Length)) * h[j], 0 <= j < Length),"
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2557694",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "where:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "Length"
                    },
                    {
                      "type": "text",
                      "text": " is the length given in the setup."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "h"
                    },
                    {
                      "type": "text",
                      "text": " is the input array of complex numbers specified by "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ir"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ii"
                    },
                    {
                      "type": "text",
                      "text": " when the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "vDSP_DFT_Execute"
                    },
                    {
                      "type": "text",
                      "text": " function is called:"
                    }
                  ]
                },
                {
                  "type": "codeListing",
                  "code": [
                    "for 0 <= j < Length,",
                    "  h[j] = Ir[j] + i * Ii[j];"
                  ],
                  "syntax": "occ",
                  "metadata": {
                    "anchor": "2557695",
                    "title": "Listing 2"
                  }
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "H"
                    },
                    {
                      "type": "text",
                      "text": " is the output array of complex numbers specified by "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Or"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Oi"
                    },
                    {
                      "type": "text",
                      "text": " when the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "vDSP_DFT_Execute"
                    },
                    {
                      "type": "text",
                      "text": " function returns:"
                    }
                  ]
                },
                {
                  "type": "codeListing",
                  "code": [
                    "for 0 <= k < Length,",
                    "  H[k] = Or[k] + i * Oi[k];"
                  ],
                  "syntax": "occ",
                  "metadata": {
                    "anchor": "2557696",
                    "title": "Listing 3"
                  }
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "S"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is -1 for a forward transform and +1 for an inverse transform."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "aside",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The notation "
                },
                {
                  "type": "codeVoice",
                  "code": "1**x"
                },
                {
                  "type": "text",
                  "text": " is an abbreviation for "
                },
                {
                  "type": "codeVoice",
                  "code": "e**(2*pi*i*x)"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ],
          "style": "note",
          "name": "Note"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "When the "
            },
            {
              "type": "codeVoice",
              "code": "vDSP_DFT_Execute"
            },
            {
              "type": "text",
              "text": " function is called with a setup returned from the "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/accelerate/1449739-vdsp_dft_zrop_createsetup"
            },
            {
              "type": "text",
              "text": " function, it performs a real-to-complex transform if the direction specified in the setup is forward and a complex-to-real transform if the direction is inverse. In either direction, the data for the real side is stored alternately in the real and imaginary arrays (even-indexed elements in the real array, odd-indexed elements in the imaginary array). Given "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": " as the length specified in the setup, each array should contain "
            },
            {
              "type": "codeVoice",
              "code": "Length"
            },
            {
              "type": "text",
              "text": "/2 elements:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "for 0 <= k < Length,",
            "   H[k] = C * sum(1**(S * j*k/Length) * h[j], 0 <= j < Length) (see Note above)"
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2557697",
            "title": "Listing 4"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "where:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "Length"
                    },
                    {
                      "type": "text",
                      "text": " is the length given in the setup."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "h"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is the input array of numbers specified by "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ir"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ii"
                    },
                    {
                      "type": "text",
                      "text": " when the "
                    },
                    {
                      "type": "reference",
                      "isActive": true,
                      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
                    },
                    {
                      "type": "text",
                      "text": " is called (see \"Data Layout\" below)."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "H"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is the output array of numbers specified by "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Or"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Oi"
                    },
                    {
                      "type": "text",
                      "text": " when the "
                    },
                    {
                      "type": "reference",
                      "isActive": true,
                      "identifier": "doc://com.apple.documentation/documentation/accelerate/1450538-vdsp_dft_execute"
                    },
                    {
                      "type": "text",
                      "text": " function returns (see \"Data Layout\", below.)"
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "S"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is -1 for a forward transform and +1 for an inverse transform."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Data Layout for Real-to-Complex and Complex-to-Real Transforms:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For a forward transform:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "h"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is an array of real numbers, with its even-index elements stored in "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ir"
                    },
                    {
                      "type": "text",
                      "text": " and its odd-index elements stored in "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Ii"
                    },
                    {
                      "type": "text",
                      "text": ":"
                    }
                  ]
                },
                {
                  "type": "codeListing",
                  "code": [
                    "for 0 <= j < Length/2,",
                    "   h[2*j+0] = Ir[j], and",
                    "   h[2*j+1] = Ii[j]"
                  ],
                  "syntax": "occ",
                  "metadata": {
                    "anchor": "2557698",
                    "title": "Listing 5"
                  }
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "H"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is an array of complex numbers, stored in "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Or"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Oi"
                    },
                    {
                      "type": "text",
                      "text": ":"
                    }
                  ]
                },
                {
                  "type": "codeListing",
                  "code": [
                    "H[0  ] = Or[0].  // (H[0  ] is pure real.)",
                    "H[Length/2] = Oi[0].  // (H[Length/2] is pure real.)",
                    "for 1 < k < Length/2",
                    "   H[k] = Or[k] + i * Oi[k]"
                  ],
                  "syntax": "occ",
                  "metadata": {
                    "anchor": "2557699",
                    "title": "Listing 6"
                  }
                },
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "For "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Length"
                    },
                    {
                      "type": "text",
                      "text": "/2 < "
                    },
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "k"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " < "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Length"
                    },
                    {
                      "type": "text",
                      "text": ", "
                    },
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "H[k]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": " is not explicitly stored in memory but is known because it necessarily equals the conjugate of "
                    },
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "H["
                        }
                      ]
                    },
                    {
                      "type": "codeVoice",
                      "code": "Length"
                    },
                    {
                      "type": "emphasis",
                      "inlineContent": [
                        {
                          "type": "text",
                          "text": "-k]"
                        }
                      ]
                    },
                    {
                      "type": "text",
                      "text": ", which is stored as described above."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For an inverse transformation, the layouts of the input and output arrays are swapped.  "
            },
            {
              "type": "codeVoice",
              "code": "Ir"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Ii"
            },
            {
              "type": "text",
              "text": " describe an input array with complex elements laid out as for "
            },
            {
              "type": "codeVoice",
              "code": "Or"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Oi"
            },
            {
              "type": "text",
              "text": ".  When the "
            },
            {
              "type": "codeVoice",
              "code": "vDSP_DFT_Execute"
            },
            {
              "type": "text",
              "text": " function returns, "
            },
            {
              "type": "codeVoice",
              "code": "Or"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "Oi"
            },
            {
              "type": "text",
              "text": " contain a pure real array, with its even-indexed elements stored in "
            },
            {
              "type": "codeVoice",
              "code": "Or"
            },
            {
              "type": "text",
              "text": " and its odd-indexed elements in "
            },
            {
              "type": "codeVoice",
              "code": "Oi"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}