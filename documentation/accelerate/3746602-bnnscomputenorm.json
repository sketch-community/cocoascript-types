{
  "abstract": [
    {
      "type": "text",
      "text": "Computes the specified norm over an entire tensor or the specified axes."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/accelerate",
        "doc://com.apple.documentation/documentation/accelerate/bnns"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 3746602,
  "kind": "symbol",
  "metadata": {
    "title": "BNNSComputeNorm",
    "role": "symbol",
    "roleHeading": "Function",
    "modules": [
      {
        "name": "Accelerate"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "12.0",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "8.0",
        "current": "8.3"
      }
    ],
    "externalID": "c:@F@BNNSComputeNorm",
    "symbolKind": "func"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/accelerate/3746602-bnnscomputenorm"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/accelerate/3746602-bnnscomputenorm"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/accelerate": {
      "title": "Accelerate",
      "identifier": "doc://com.apple.documentation/documentation/accelerate",
      "url": "/documentation/accelerate",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnns": {
      "title": "BNNS",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnns",
      "url": "/documentation/accelerate/bnns",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype/bnnsl2norm": {
      "title": "BNNSL2Norm",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype/bnnsl2norm",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsnormtype/bnnsl2norm"
    },
    "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761086": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761086",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761086"
    },
    "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761085": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761085",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761085"
    },
    "link-media-3761084": {
      "identifier": "link-media-3761084",
      "type": "link",
      "title": "Figure 1",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761084"
    },
    "media-3761084": {
      "identifier": "media-3761084",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 680,
            "height": 344
          },
          "url": "https://docs-assets.developer.apple.com/published/23d39ccb3f/rendered2x-1617798945.png"
        }
      ],
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates a single value for the norm of the entire tensor.",
      "title": "Figure 1"
    },
    "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761080": {
      "title": "Listing 3",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761080",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761080"
    },
    "link-media-3761079": {
      "identifier": "link-media-3761079",
      "type": "link",
      "title": "Figure 2",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761079"
    },
    "media-3761079": {
      "identifier": "media-3761079",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 680,
            "height": 255
          },
          "url": "https://docs-assets.developer.apple.com/published/c887fde614/rendered2x-1617798939.png"
        }
      ],
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates separate norms for the six 4-element vectors along the channel axis.",
      "title": "Figure 2"
    },
    "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761083": {
      "title": "Listing 4",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm#3761083",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761083"
    },
    "link-media-3761082": {
      "identifier": "link-media-3761082",
      "type": "link",
      "title": "Figure 3",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm#3761082"
    },
    "media-3761082": {
      "identifier": "media-3761082",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 680,
            "height": 348
          },
          "url": "https://docs-assets.developer.apple.com/published/46b5e74eea/rendered2x-1617798950.png"
        }
      ],
      "alt": "A diagram that depicts a 3D tensor as four 2D planes along the channel axis. Each plane is two elements high and three elements wide. The compute norm operation calculates separate norms for the pair of three-by-four matrices defined by the channel axis and the width axis.",
      "title": "Figure 3"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor": {
      "title": "BNNSNDArrayDescriptor",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsndarraydescriptor"
    },
    "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype": {
      "title": "BNNSNormType",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/bnnsnormtype",
      "abstract": [
        {
          "type": "text",
          "text": "Constants that describe norm types."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm": {
      "title": "BNNSComputeNorm",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746602-bnnscomputenorm",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/3746602-bnnscomputenorm",
      "abstract": [
        {
          "type": "text",
          "text": "Computes the specified norm over an entire tensor or the specified axes."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/accelerate/3746603-bnnscomputenormbackward": {
      "title": "BNNSComputeNormBackward",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/accelerate/3746603-bnnscomputenormbackward",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/accelerate/3746603-bnnscomputenormbackward",
      "abstract": [
        {
          "type": "text",
          "text": "Backpropogates gradients for the compute norm function."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/accelerate/3746603-bnnscomputenormbackward",
        "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype"
      ],
      "title": "Compute Norm Functions",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "int"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "BNNSComputeNorm"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNDArrayDescriptor",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": " *dest, "
            },
            {
              "kind": "keyword",
              "text": "const"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNDArrayDescriptor",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsndarraydescriptor",
              "text": "BNNSNDArrayDescriptor"
            },
            {
              "kind": "text",
              "text": " *src, "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@BNNSNormType",
              "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype",
              "text": "BNNSNormType"
            },
            {
              "kind": "text",
              "text": " norm_type, "
            },
            {
              "kind": "keyword",
              "text": "uint32_t"
            },
            {
              "kind": "text",
              "text": " axis_flags);"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "dest",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The descriptor of the output."
                }
              ]
            }
          ]
        },
        {
          "name": "src",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The descriptor of the input."
                }
              ]
            }
          ]
        },
        {
          "name": "norm_type",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The type of the norm. This function supports only "
                },
                {
                  "type": "reference",
                  "isActive": true,
                  "identifier": "doc://com.apple.documentation/documentation/accelerate/bnnsnormtype/bnnsl2norm"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "name": "axis_flags",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The dimensions that the function uses to compute the norm. Set to "
                },
                {
                  "type": "codeVoice",
                  "code": "0"
                },
                {
                  "type": "text",
                  "text": " to specify that the function computes the norm over all dimensions."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use this function to compute the norm of either an entire tensor or the axis or axes of a tensor."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For example, the following code defines a 3D tensor:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let inputData = UnsafeMutableBufferPointer<Float>.allocate(capacity: 24)",
            "_ = inputData.initialize(from: [1, 2, 3,",
            "                                4, 5, 6,",
            "                                ",
            "                                10, 20, 30,",
            "                                40, 50, 60,",
            "                                ",
            "                                100, 200, 300,",
            "                                400, 500, 600,",
            "                                ",
            "                                1000, 2000, 3000,",
            "                                4000, 5000, 6000])",
            "var inputDescriptor = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                            layout: BNNSDataLayoutImageCHW,",
            "                                            size: (3, 2, 4, 0, 0, 0, 0, 0),",
            "                                            stride: (0, 0, 0, 0, 0, 0, 0, 0),",
            "                                            data: inputData.baseAddress!,",
            "                                            data_type: BNNSDataType.float,",
            "                                            table_data: nil,",
            "                                            table_data_type: BNNSDataType.float,",
            "                                            data_scale: 1, data_bias: 0)"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3761086",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Define the "
            },
            {
              "type": "codeVoice",
              "code": "axis_flags"
            },
            {
              "type": "text",
              "text": " parameter as either "
            },
            {
              "type": "codeVoice",
              "code": "0b111"
            },
            {
              "type": "text",
              "text": " or "
            },
            {
              "type": "codeVoice",
              "code": "0"
            },
            {
              "type": "text",
              "text": " to specify that the operation computes the norm of the entire tensor. In this case, the norm is a scalar value, and the destination’s data layout must be a "
            },
            {
              "type": "codeVoice",
              "code": "BNNSDataLayoutVector"
            },
            {
              "type": "text",
              "text": " with a size of "
            },
            {
              "type": "codeVoice",
              "code": "1"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let outputData = UnsafeMutableBufferPointer<Float>.allocate(capacity: 1)",
            "var outputDescriptor = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                             layout: BNNSDataLayoutVector,",
            "                                             size: (1, 0, 0, 0, 0, 0, 0, 0),",
            "                                             stride: (0, 0, 0, 0, 0, 0, 0, 0),",
            "                                             data: outputData.baseAddress!,",
            "                                             data_type: BNNSDataType.float,",
            "                                             table_data: nil,",
            "                                             table_data_type: BNNSDataType.float,",
            "                                             data_scale: 1, data_bias: 0)",
            "",
            "BNNSComputeNorm(&outputDescriptor,",
            "                 &inputDescriptor,",
            "                 BNNSL2Norm,",
            "                 0b111)",
            "",
            "// Prints `[9587.45]`",
            "print(Array(outputData))"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3761085",
            "title": "Listing 2"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "On return, the output descriptor contains a single value that is the square root of the sum of squares of each element in the tensor:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-3761084",
              "metadata": {
                "anchor": "3761084",
                "title": "Figure 1"
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Specify an "
            },
            {
              "type": "codeVoice",
              "code": "axis_flags"
            },
            {
              "type": "text",
              "text": " of "
            },
            {
              "type": "codeVoice",
              "code": "0b100"
            },
            {
              "type": "text",
              "text": " to compute the norm along the second axis. In this case, the destination should be a matrix with a size that matches the zeroth and first dimensions of the source tensor:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let outputData = UnsafeMutableBufferPointer<Float>.allocate(capacity: 6)",
            "var outputDescriptor = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                             layout: BNNSDataLayoutColumnMajorMatrix,",
            "                                             size: (3, 2, 0, 0, 0, 0, 0, 0),",
            "                                             stride: (0, 0, 0, 0, 0, 0, 0, 0),",
            "                                             data: outputData.baseAddress!,",
            "                                             data_type: BNNSDataType.float,",
            "                                             table_data: nil,",
            "                                             table_data_type: BNNSDataType.float,",
            "                                             data_scale: 1, data_bias: 0)",
            "",
            "BNNSComputeNorm(&outputDescriptor,",
            "                 &inputDescriptor,",
            "                 BNNSL2Norm,",
            "                 0b100)",
            "",
            "// Prints",
            "//      [1005.0378, 2010.075, 3015.113,",
            "//       4020.1511, 5025.189, 6030.227]",
            "print(Array(outputData))"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3761080",
            "title": "Listing 3"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "On return, the output descriptor contains six values that are the norms of the slices along the second axis of the input tensor:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-3761079",
              "metadata": {
                "anchor": "3761079",
                "title": "Figure 2"
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To compute the norm along more that one dimension, define the destination tensor with a size of the dimensions you’re not calculating over. For example, the following code defines an "
            },
            {
              "type": "codeVoice",
              "code": "axis_flags"
            },
            {
              "type": "text",
              "text": " with a value of "
            },
            {
              "type": "codeVoice",
              "code": "0b101"
            },
            {
              "type": "text",
              "text": " to compute the norm of dimensions zero and two:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let outputData = UnsafeMutableBufferPointer<Float>.allocate(capacity: 2)",
            "var outputDescriptor = BNNSNDArrayDescriptor(flags: BNNSNDArrayFlags(0),",
            "                                             layout: BNNSDataLayoutVector,",
            "                                             size: (2, 0, 0, 0, 0, 0, 0, 0),",
            "                                             stride: (0, 0, 0, 0, 0, 0, 0, 0),",
            "                                             data: outputData.baseAddress!,",
            "                                             data_type: BNNSDataType.float,",
            "                                             table_data: nil,",
            "                                             table_data_type: BNNSDataType.float,",
            "                                             data_scale: 1, data_bias: 0)",
            "",
            "BNNSComputeNorm(&outputDescriptor,",
            "                 &inputDescriptor,",
            "                 BNNSL2Norm,",
            "                 0b101)",
            "",
            "// Prints `[3760.507, 8819.171]`",
            "print(Array(outputData))"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3761083",
            "title": "Listing 4"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "On return, the output descriptor contains two values that are the norms of the top and bottom slices of the input tensor:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-3761082",
              "metadata": {
                "anchor": "3761082",
                "title": "Figure 3"
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": []
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}