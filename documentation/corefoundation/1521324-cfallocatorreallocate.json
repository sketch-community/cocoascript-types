{
  "abstract": [
    {
      "type": "text",
      "text": "Reallocates memory using the specified allocator."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/corefoundation",
        "doc://com.apple.documentation/documentation/corefoundation/cfallocator"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1521324,
  "kind": "symbol",
  "metadata": {
    "title": "CFAllocatorReallocate",
    "role": "symbol",
    "roleHeading": "Function",
    "modules": [
      {
        "name": "Core Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "2.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "2.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.0",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "9.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "2.0",
        "current": "8.3"
      }
    ],
    "externalID": "c:@F@CFAllocatorReallocate",
    "symbolKind": "func"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/corefoundation/1521324-cfallocatorreallocate"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/corefoundation/1521324-cfallocatorreallocate"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/corefoundation": {
      "title": "Core Foundation",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation",
      "url": "/documentation/corefoundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfallocator": {
      "title": "CFAllocator",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocator",
      "url": "/documentation/corefoundation/cfallocator",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfallocatorref": {
      "title": "CFAllocatorRef",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocatorref",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/cfallocatorref"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfindex": {
      "title": "CFIndex",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfindex",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/cfindex"
    },
    "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags": {
      "title": "CFOptionFlags",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/cfoptionflags"
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate": {
      "title": "CFAllocatorAllocate",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/1521250-cfallocatorallocate",
      "abstract": [
        {
          "type": "text",
          "text": "Allocates memory using the specified allocator."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate": {
      "title": "CFAllocatorDeallocate",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/1521299-cfallocatordeallocate",
      "abstract": [
        {
          "type": "text",
          "text": "Deallocates a block of memory with a given allocator."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi": {
      "title": "CFAllocatorGetPreferredSizeForSize",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi",
      "abstract": [
        {
          "type": "text",
          "text": "Obtains the number of bytes likely to be allocated upon a specific request."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate": {
      "title": "CFAllocatorReallocate",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/corefoundation/1521324-cfallocatorreallocate",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/corefoundation/1521324-cfallocatorreallocate",
      "abstract": [
        {
          "type": "text",
          "text": "Reallocates memory using the specified allocator."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/corefoundation/1521250-cfallocatorallocate",
        "doc://com.apple.documentation/documentation/corefoundation/1521299-cfallocatordeallocate",
        "doc://com.apple.documentation/documentation/corefoundation/1521138-cfallocatorgetpreferredsizeforsi"
      ],
      "title": "Managing Memory with an Allocator",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "identifier",
              "text": "CFAllocatorReallocate"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFAllocatorRef",
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfallocatorref",
              "text": "CFAllocatorRef"
            },
            {
              "kind": "text",
              "text": " allocator, "
            },
            {
              "kind": "keyword",
              "text": "void"
            },
            {
              "kind": "text",
              "text": " *ptr, "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFIndex",
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfindex",
              "text": "CFIndex"
            },
            {
              "kind": "text",
              "text": " newsize, "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CFOptionFlags",
              "identifier": "doc://com.apple.documentation/documentation/corefoundation/cfoptionflags",
              "text": "CFOptionFlags"
            },
            {
              "kind": "text",
              "text": " hint);"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "allocator",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The allocator to use for reallocating memory. Pass "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": " to request the default allocator. "
                }
              ]
            }
          ]
        },
        {
          "name": "ptr",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "An untyped pointer to a block of memory to reallocate to a new size. If "
                },
                {
                  "type": "codeVoice",
                  "code": "ptr"
                },
                {
                  "type": "text",
                  "text": " is "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "codeVoice",
                  "code": "newsize"
                },
                {
                  "type": "text",
                  "text": " is greater than 0, memory is allocated (using the "
                },
                {
                  "type": "codeVoice",
                  "code": "allocate"
                },
                {
                  "type": "text",
                  "text": " function callback of the allocator's context). If "
                },
                {
                  "type": "codeVoice",
                  "code": "ptr"
                },
                {
                  "type": "text",
                  "text": " is "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "codeVoice",
                  "code": "newsize"
                },
                {
                  "type": "text",
                  "text": " is 0, the result is "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "name": "newsize",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The number of bytes to allocate. If you pass "
                },
                {
                  "type": "codeVoice",
                  "code": "0"
                },
                {
                  "type": "text",
                  "text": " and the "
                },
                {
                  "type": "codeVoice",
                  "code": "ptr"
                },
                {
                  "type": "text",
                  "text": " parameter is non-"
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": ", the block of memory that "
                },
                {
                  "type": "codeVoice",
                  "code": "ptr"
                },
                {
                  "type": "text",
                  "text": " points to is typically deallocated. If you pass 0 for this parameter and the "
                },
                {
                  "type": "codeVoice",
                  "code": "ptr"
                },
                {
                  "type": "text",
                  "text": " parameter is "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": ", nothing happens and the result returned is "
                },
                {
                  "type": "codeVoice",
                  "code": "NULL"
                },
                {
                  "type": "text",
                  "text": ". "
                }
              ]
            }
          ]
        },
        {
          "name": "hint",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A bitfield of type "
                },
                {
                  "type": "codeVoice",
                  "code": "CFOptionsFlags"
                },
                {
                  "type": "text",
                  "text": ". Pass flags to the allocator that suggest how memory is to be allocated. Zero indicates no hints. No hints are currently defined, only "
                },
                {
                  "type": "codeVoice",
                  "code": "0"
                },
                {
                  "type": "text",
                  "text": " should be passed for this argument."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The "
            },
            {
              "type": "codeVoice",
              "code": "CFAllocatorReallocate"
            },
            {
              "type": "text",
              "text": " function's primary purpose is to reallocate a block of memory to a new (and usually larger) size. However, based on the values passed in certain of the parameters, this function can also allocate memory afresh or deallocate a given block of memory. The following summarizes the semantic combinations:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "If the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ptr"
                    },
                    {
                      "type": "text",
                      "text": " parameter is non- "
                    },
                    {
                      "type": "codeVoice",
                      "code": "NULL"
                    },
                    {
                      "type": "text",
                      "text": " and the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "newsize"
                    },
                    {
                      "type": "text",
                      "text": " parameter is greater than "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": ", the behavior is to reallocate."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "If the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ptr"
                    },
                    {
                      "type": "text",
                      "text": " parameter is "
                    },
                    {
                      "type": "codeVoice",
                      "code": "NULL"
                    },
                    {
                      "type": "text",
                      "text": " and the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "newsize"
                    },
                    {
                      "type": "text",
                      "text": " parameter is greater than "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": ", the behavior is to allocate."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "If the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ptr"
                    },
                    {
                      "type": "text",
                      "text": " parameter is non- "
                    },
                    {
                      "type": "codeVoice",
                      "code": "NULL"
                    },
                    {
                      "type": "text",
                      "text": " and the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "newsize"
                    },
                    {
                      "type": "text",
                      "text": " parameter is "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": ", the behavior is to deallocate."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The result of the "
            },
            {
              "type": "codeVoice",
              "code": "CFAllocatorReallocate"
            },
            {
              "type": "text",
              "text": " function is either an untyped pointer to a block of memory or "
            },
            {
              "type": "codeVoice",
              "code": "NULL"
            },
            {
              "type": "text",
              "text": ". A "
            },
            {
              "type": "codeVoice",
              "code": "NULL"
            },
            {
              "type": "text",
              "text": " result indicates either a failure to allocate memory or some other outcome, the precise interpretation of which is determined by the values of certain parameters and the presence or absence of callbacks in the allocator context. To summarize, a "
            },
            {
              "type": "codeVoice",
              "code": "NULL"
            },
            {
              "type": "text",
              "text": " result can mean one of the following:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "An error occurred in the attempt to allocate memory, such as insufficient free space."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "No "
                    },
                    {
                      "type": "codeVoice",
                      "code": "allocate"
                    },
                    {
                      "type": "text",
                      "text": ", "
                    },
                    {
                      "type": "codeVoice",
                      "code": "reallocate"
                    },
                    {
                      "type": "text",
                      "text": ", or "
                    },
                    {
                      "type": "codeVoice",
                      "code": "deallocate"
                    },
                    {
                      "type": "text",
                      "text": " function callback (depending on parameters) was defined in the allocator context."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "The semantic operation is \"deallocate\" (that is, there is no need to return anything). "
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "The "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ptr"
                    },
                    {
                      "type": "text",
                      "text": " parameter is "
                    },
                    {
                      "type": "codeVoice",
                      "code": "NULL"
                    },
                    {
                      "type": "text",
                      "text": " and the requested size is 0. "
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}