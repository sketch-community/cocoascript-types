{
  "abstract": [
    {
      "type": "text",
      "text": "The target property’s rate of change at the start of a spring animation, enabling a smooth transition into the animation."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/uikit",
        "doc://com.apple.documentation/documentation/uikit/animation_and_haptics",
        "doc://com.apple.documentation/documentation/uikit/animation_and_haptics/property-based_animations",
        "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1649909,
  "kind": "symbol",
  "metadata": {
    "title": "initialVelocity",
    "role": "symbol",
    "roleHeading": "Instance Property",
    "modules": [
      {
        "name": "UIKit"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "10.0",
        "current": "14.3"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "14.3"
      },
      {
        "name": "tvOS",
        "introducedAt": "10.0",
        "current": "14.3"
      }
    ],
    "externalID": "c:objc(cs)UISpringTimingParameters(py)initialVelocity",
    "symbolKind": "instp"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/uikit/uispringtimingparameters/1649909-initialvelocity"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/uikit/uispringtimingparameters/1649909-initialvelocity"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/uikit": {
      "title": "UIKit",
      "identifier": "doc://com.apple.documentation/documentation/uikit",
      "url": "/documentation/uikit",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/uikit/animation_and_haptics": {
      "title": "Animation and Haptics",
      "identifier": "doc://com.apple.documentation/documentation/uikit/animation_and_haptics",
      "url": "/documentation/uikit/animation_and_haptics",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/uikit/animation_and_haptics/property-based_animations": {
      "title": "Property-Based Animations",
      "identifier": "doc://com.apple.documentation/documentation/uikit/animation_and_haptics/property-based_animations",
      "url": "/documentation/uikit/animation_and_haptics/property-based_animations",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters": {
      "title": "UISpringTimingParameters",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/uikit/uispringtimingparameters",
      "abstract": [
        {
          "type": "text",
          "text": "The timing information for animations that mimics the behavior of a spring. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer": {
      "title": "UIPanGestureRecognizer",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/uikit/uipangesturerecognizer"
    },
    "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer/1621209-velocityinview": {
      "title": "velocityInView:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer/1621209-velocityinview",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/uikit/uipangesturerecognizer/1621209-velocityinview",
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "velocityInView:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526629": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526629",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526629"
    },
    "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526628": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526628",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/uikit/uispringtimingparameters/1649909-initialvelocity#3526628"
    },
    "doc://com.apple.documentation/documentation/coregraphics/cgvector": {
      "title": "CGVector",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgvector",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/coregraphics/cgvector"
    },
    "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity": {
      "title": "initialVelocity",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/uikit/uispringtimingparameters/1649909-initialvelocity",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/uikit/uispringtimingparameters/1649909-initialvelocity",
      "abstract": [
        {
          "type": "text",
          "text": "The target property’s rate of change at the start of a spring animation, enabling a smooth transition into the animation."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "@property"
            },
            {
              "kind": "text",
              "text": "(nonatomic, readonly) "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@CGVector",
              "identifier": "doc://com.apple.documentation/documentation/coregraphics/cgvector",
              "text": "CGVector"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "initialVelocity"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ],
          "platforms": [
            "iOS",
            "Mac Catalyst",
            "tvOS"
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To create a smooth transition from an object in motion into a spring animation, initialize the spring timing parameters with an initial velocity. One common use of this property is to animate a view to a final resting position at the end of a pan gesture. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For view position animations, both components of the initial velocity vector are considered. Each component specifies the initial rate of change along the respective "
            },
            {
              "type": "codeVoice",
              "code": "x"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "y"
            },
            {
              "type": "text",
              "text": " axes, normalized to the total distance of the animation. To calculate an initial velocity vector:"
            }
          ]
        },
        {
          "type": "orderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Start with a velocity of the view in points per second. For example, when moving a view using a "
                    },
                    {
                      "type": "reference",
                      "isActive": true,
                      "identifier": "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer"
                    },
                    {
                      "type": "text",
                      "text": ", you can use "
                    },
                    {
                      "type": "reference",
                      "isActive": true,
                      "identifier": "doc://com.apple.documentation/documentation/uikit/uipangesturerecognizer/1621209-velocityinview"
                    },
                    {
                      "type": "text",
                      "text": " for this starting value. "
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Calculate the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "x"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "y"
                    },
                    {
                      "type": "text",
                      "text": " distance, in points, from the view’s current position to the final position."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Set the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "dx"
                    },
                    {
                      "type": "text",
                      "text": " component of the initial velocity vector to the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "x"
                    },
                    {
                      "type": "text",
                      "text": " velocity divided by the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "x"
                    },
                    {
                      "type": "text",
                      "text": " distance. If the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "x"
                    },
                    {
                      "type": "text",
                      "text": " distance is "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": ", set "
                    },
                    {
                      "type": "codeVoice",
                      "code": "dx"
                    },
                    {
                      "type": "text",
                      "text": " to "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Set the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "dy"
                    },
                    {
                      "type": "text",
                      "text": " component to the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "y"
                    },
                    {
                      "type": "text",
                      "text": " velocity divided by the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "y"
                    },
                    {
                      "type": "text",
                      "text": " distance. If the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "y"
                    },
                    {
                      "type": "text",
                      "text": " distance is "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": ", set "
                    },
                    {
                      "type": "codeVoice",
                      "code": "dy"
                    },
                    {
                      "type": "text",
                      "text": " to "
                    },
                    {
                      "type": "codeVoice",
                      "code": "0"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The following example shows a function that performs this calculation using a velocity from the pan gesture recognizer and the view’s current and final positions."
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "func initialAnimationVelocity(for gestureVelocity: CGPoint, from currentPosition: CGPoint, to finalPosition: CGPoint) -> CGVector {",
            "    var animationVelocity = CGVector.zero",
            "    let xDistance = finalPosition.x - currentPosition.x",
            "    let yDistance = finalPosition.y - currentPosition.y",
            "    if xDistance != 0 {",
            "        animationVelocity.dx = gestureVelocity.x / xDistance",
            "    }",
            "    if yDistance != 0 {",
            "        animationVelocity.dy = gestureVelocity.y / yDistance",
            "    }",
            "    return animationVelocity",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3526629",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The following example shows how a view controller can create a property animator with spring timing parameters. The view controller passes the result of "
            },
            {
              "type": "codeVoice",
              "code": "initialAnimationVelocity"
            },
            {
              "type": "text",
              "text": " to the spring timing parameters’ initializer. In this example, "
            },
            {
              "type": "codeVoice",
              "code": "draggedView"
            },
            {
              "type": "text",
              "text": " is an outlet of the view controller. The value of "
            },
            {
              "type": "codeVoice",
              "code": "destination"
            },
            {
              "type": "text",
              "text": " is the final resting position of "
            },
            {
              "type": "codeVoice",
              "code": "draggedView"
            },
            {
              "type": "text",
              "text": ". "
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let panRecognizer: UIPanGestureRecognizer = ... // pan recognizer attached to draggedView",
            "let velocity = panRecognizer.velocity(in: view)",
            "let initialVelocity = initialAnimationVelocity(for: velocity, from: draggedView.center, to: destination)",
            "",
            "let parameters = UISpringTimingParameters(dampingRatio: dampingRatio, initialVelocity: initialVelocity)",
            "let animator = UIViewPropertyAnimator(duration: animationDuration, timingParameters: parameters)",
            "",
            "animator.addAnimations {",
            "    self.draggedView.center = destination",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3526628",
            "title": "Listing 2"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "For other types of animations where the property value has a single dimension, such as a view’s "
            },
            {
              "type": "codeVoice",
              "code": "alpha"
            },
            {
              "type": "text",
              "text": ", only the "
            },
            {
              "type": "codeVoice",
              "code": "dx"
            },
            {
              "type": "text",
              "text": " component is considered."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}