{
  "abstract": [
    {
      "type": "text",
      "text": "Creates a single kernel object using a Metal Shading Language (MSL) kernel function."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/coreimage",
        "doc://com.apple.documentation/documentation/coreimage/cikernel"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/coreimage/cikernel/2880194-kernelwithfunctionname",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 2880194,
  "kind": "symbol",
  "metadata": {
    "title": "kernelWithFunctionName:fromMetalLibraryData:error:",
    "role": "symbol",
    "roleHeading": "Type Method",
    "modules": [
      {
        "name": "Core Image"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "11.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "11.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.13",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "11.0",
        "current": "15.2"
      }
    ],
    "externalID": "c:objc(cs)CIKernel(cm)kernelWithFunctionName:fromMetalLibraryData:error:",
    "parent": {
      "title": "CIKernel"
    },
    "symbolKind": "clm"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/coreimage/cikernel/2880194-kernelwithfunctionname"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/coreimage/cikernel/2880194-init"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/coreimage": {
      "title": "Core Image",
      "identifier": "doc://com.apple.documentation/documentation/coreimage",
      "url": "/documentation/coreimage",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/coreimage/cikernel": {
      "title": "CIKernel",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/coreimage/cikernel",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/coreimage/cikernel"
    },
    "link-media-2929842": {
      "identifier": "link-media-2929842",
      "type": "link",
      "title": "Figure 1",
      "url": "/documentation/coreimage/cikernel/2880194-kernelwithfunctionname#2929842"
    },
    "media-2929842": {
      "identifier": "media-2929842",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 504,
            "height": 174
          },
          "url": "https://docs-assets.developer.apple.com/published/2f2d4199d4/15241eb8-8ec6-4d66-a6ad-5d97105475ab.png"
        }
      ],
      "title": "Figure 1",
      "abstract": [
        {
          "type": "text",
          "text": "Specifying Compiler and Linker Options in Xcode."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/coreimage/cikernel/2880194-kernelwithfunctionname#2922589": {
      "title": "Table 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/coreimage/cikernel/2880194-kernelwithfunctionname#2922589",
      "kind": "article",
      "role": "table",
      "url": "/documentation/coreimage/cikernel/2880194-kernelwithfunctionname#2922589"
    },
    "doc://com.apple.documentation/documentation/foundation/nsstring": {
      "title": "NSString",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsstring",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nsstring"
    },
    "doc://com.apple.documentation/documentation/foundation/nsdata": {
      "title": "NSData",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nsdata"
    },
    "doc://com.apple.documentation/documentation/foundation/nserror": {
      "title": "NSError",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nserror"
    },
    "doc://com.apple.documentation/documentation/coreimage/cikernel/2880194-kernelwithfunctionname": {
      "title": "kernelWithFunctionName:fromMetalLibraryData:error:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/coreimage/cikernel/2880194-kernelwithfunctionname",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/coreimage/cikernel/2880194-kernelwithfunctionname",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a single kernel object using a Metal Shading Language (MSL) kernel function."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "kernelWithFunctionName:fromMetalLibraryData:error:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/coreimage/cikernel/2880195-kernelwithfunctionname": {
      "title": "kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/coreimage/cikernel/2880195-kernelwithfunctionname",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/coreimage/cikernel/2880195-kernelwithfunctionname",
      "abstract": [
        {
          "type": "text",
          "text": "Creates a single kernel object using a Metal Shading Language kernel function with optional pixel format."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "+ "
        },
        {
          "kind": "identifier",
          "text": "kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/coreimage/cikernel/2880195-kernelwithfunctionname"
      ],
      "title": "Creating a Kernel Using Metal Shading Language",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "+ ("
            },
            {
              "kind": "keyword",
              "text": "instancetype"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "identifier",
              "text": "kernelWithFunctionName:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSString",
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsstring",
              "text": "NSString"
            },
            {
              "kind": "text",
              "text": " *"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "name"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "fromMetalLibraryData:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSData",
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsdata",
              "text": "NSData"
            },
            {
              "kind": "text",
              "text": " *"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "data"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "error:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSError",
              "identifier": "doc://com.apple.documentation/documentation/foundation/nserror",
              "text": "NSError"
            },
            {
              "kind": "text",
              "text": " * "
            },
            {
              "kind": "keyword",
              "text": "_Nullable"
            },
            {
              "kind": "text",
              "text": " *"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "error"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "functionName",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The name of the function in the Metal shading language."
                }
              ]
            }
          ]
        },
        {
          "name": "fromMetalLibraryData",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A metallib file compiled with the Core Image Standard Library."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "This method allows you to use MSL as the shader language for a Core Image kernel. Since MSL based kernels are precompiled, initializing them is faster than their than Core Image Kernel Language (CIKL) counterparts and Xcode can provide error diagnostics during development rather than at runtime. MSL is a more modern language than CIKL, and you can write shader code that uses arrays, structs and matrices. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "MSL based kernels still support concatenation and tiling and can work in the same filter graph as traditional CIKL kernels. "
            }
          ]
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Specifying Compiler and Linker Options",
          "anchor": "2923853"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To use MSL as the shader language for a "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/coreimage/cikernel"
            },
            {
              "type": "text",
              "text": ", you must specify some options in Xcode under the "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "Build Settings"
                }
              ]
            },
            {
              "type": "text",
              "text": " tab of your project's target. The first option you need to specify is an "
            },
            {
              "type": "codeVoice",
              "code": "-fcikernel"
            },
            {
              "type": "text",
              "text": " flag in the Other Metal Compiler Flags option. The second is to add a user-defined setting with a key called "
            },
            {
              "type": "codeVoice",
              "code": "MTLLINKER_FLAGS"
            },
            {
              "type": "text",
              "text": " with a value of "
            },
            {
              "type": "codeVoice",
              "code": "-cikernel:"
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-2929842",
              "metadata": {
                "anchor": "2929842",
                "title": "Figure 1",
                "abstract": [
                  {
                    "type": "text",
                    "text": "Specifying Compiler and Linker Options in Xcode."
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Metal Shading Language Extensions",
          "anchor": "2922588"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Core Image provides a set of language extensions to MSL in "
            },
            {
              "type": "codeVoice",
              "code": "CIKernelMetalLib.h"
            },
            {
              "type": "text",
              "text": ". These extensions include three new data types for working with images: "
            },
            {
              "type": "codeVoice",
              "code": "sampler"
            },
            {
              "type": "text",
              "text": " (for accessing the input image), "
            },
            {
              "type": "codeVoice",
              "code": "sample_t"
            },
            {
              "type": "text",
              "text": " (represents a single color sample from the input image), and "
            },
            {
              "type": "codeVoice",
              "code": "destination "
            },
            {
              "type": "text",
              "text": "(for accessing the output image). The extensions also include convenience functions such as color conversion and premultiply / unpremultiply. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Whereas in CIKL, you typically called global functions when working with, for example, coordinates and samples, these functions are implemented as member functions on the new types."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The following table shows a summary of CIKL global functions and their equivalent MSL functions."
            }
          ]
        },
        {
          "type": "table",
          "header": "both",
          "rows": [
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": []
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Core Image Kernel Language"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Metal Shading Language"
                    }
                  ]
                }
              ]
            ],
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Get destination coordinate"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "destCoord()"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "dest.coord()"
                    }
                  ]
                }
              ]
            ],
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Transform coordinate to sampler space"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "samplerTransform(src, p)"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "src.transform(p)"
                    }
                  ]
                }
              ]
            ],
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Get destination coordinate in sampler space"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "samplerCoord(src)"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "src.coord()"
                    }
                  ]
                }
              ]
            ],
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Sample from source image"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "sample(src, p)"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "src.sample(p)"
                    }
                  ]
                }
              ]
            ],
            [
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Get extent of source image"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "samplerExtent(src)"
                    }
                  ]
                }
              ],
              [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "src.extent()"
                    }
                  ]
                }
              ]
            ]
          ],
          "metadata": {
            "anchor": "2922589",
            "title": "Table 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": []
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}