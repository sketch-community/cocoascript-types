{
  "abstract": [
    {
      "type": "text",
      "text": "Observe the playback time for an asset in order to update the player’s state."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/avfoundation",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 2948357,
  "kind": "article",
  "metadata": {
    "title": "Observing the Playback Time",
    "role": "article",
    "roleHeading": "Article",
    "modules": [
      {
        "name": "AVFoundation"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/avfoundation/media_playback_and_selection/observing_the_playback_time"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/avfoundation/media_playback_and_selection/observing_the_playback_time"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/avfoundation": {
      "title": "AVFoundation",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation",
      "url": "/documentation/avfoundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection": {
      "title": "Media Playback and Selection",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection",
      "url": "/documentation/avfoundation/media_playback_and_selection",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/avfoundation/avplayer/1385829-addperiodictimeobserverforinterv": {
      "title": "addPeriodicTimeObserverForInterval:queue:usingBlock:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer/1385829-addperiodictimeobserverforinterv",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/avfoundation/avplayer/1385829-addperiodictimeobserverforinterv",
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "addPeriodicTimeObserverForInterval:queue:usingBlock:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/coremedia/cmtime-u58": {
      "title": "CMTime",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/coremedia/cmtime-u58",
      "kind": "article",
      "role": "collectionGroup",
      "url": "/documentation/coremedia/cmtime-u58"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948358": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948358",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948358"
    },
    "doc://com.apple.documentation/documentation/avfoundation/avplayer/1388027-addboundarytimeobserverfortimes": {
      "title": "addBoundaryTimeObserverForTimes:queue:usingBlock:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer/1388027-addboundarytimeobserverfortimes",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/avfoundation/avplayer/1388027-addboundarytimeobserverfortimes",
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "addBoundaryTimeObserverForTimes:queue:usingBlock:"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/nsvalue": {
      "title": "NSValue",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsvalue",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nsvalue"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948360": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948360",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time#2948360"
    },
    "doc://com.apple.documentation/documentation/avfoundation/avplayer": {
      "title": "AVPlayer",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/avfoundation/avplayer",
      "abstract": [
        {
          "type": "text",
          "text": "An object that provides the interface to control the player’s transport behavior."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/seeking_through_media": {
      "title": "Seeking Through Media",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/seeking_through_media",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/seeking_through_media",
      "abstract": [
        {
          "type": "text",
          "text": "Seek or scrub across a media item to quickly access a specific time point."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_playback_state": {
      "title": "Observing Playback State",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_playback_state",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/observing_playback_state",
      "abstract": [
        {
          "type": "text",
          "text": "Respond to changes in a player’s playback state."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time": {
      "title": "Observing the Playback Time",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/observing_the_playback_time",
      "abstract": [
        {
          "type": "text",
          "text": "Observe the playback time for an asset in order to update the player’s state."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/presenting_chapter_markers": {
      "title": "Presenting Chapter Markers",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/presenting_chapter_markers",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/presenting_chapter_markers",
      "abstract": [
        {
          "type": "text",
          "text": "Add chapter markers to enable users to quickly navigate your content."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_movie_player_app_with_basic_playback_controls": {
      "title": "Creating a Movie Player App with Basic Playback Controls",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_movie_player_app_with_basic_playback_controls",
      "kind": "article",
      "role": "sampleCode",
      "url": "/documentation/avfoundation/media_playback_and_selection/creating_a_movie_player_app_with_basic_playback_controls",
      "abstract": [
        {
          "type": "text",
          "text": "Play movies using a custom interface that implements simple playback functionality."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/avqueueplayer": {
      "title": "AVQueuePlayer",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/avqueueplayer",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/avfoundation/avqueueplayer",
      "abstract": [
        {
          "type": "text",
          "text": "An object that plays a sequence of player items."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/avplayerlooper": {
      "title": "AVPlayerLooper",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayerlooper",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/avfoundation/avplayerlooper",
      "abstract": [
        {
          "type": "text",
          "text": "An object that loops media content using a queue player."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/seeking_through_media",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/observing_playback_state",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/presenting_chapter_markers",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_movie_player_app_with_basic_playback_controls",
        "doc://com.apple.documentation/documentation/avfoundation/avplayer",
        "doc://com.apple.documentation/documentation/avfoundation/avqueueplayer",
        "doc://com.apple.documentation/documentation/avfoundation/avplayerlooper"
      ],
      "title": "Players",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "content",
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You’ll commonly want to observe an asset's playback time as it progresses so you can update the playback position or otherwise synchronize the state of your user interface. Although key-value observing (KVO) works well for general state observations, it's not the right choice for observing player timing because it’s not well suited for observing continuous state changes. Instead, "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer"
            },
            {
              "type": "text",
              "text": " provides two different ways for you to observe player time changes: "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "periodic observations"
                }
              ]
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "boundary observations"
                }
              ]
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Observe Periodic Timing",
          "anchor": "2948356"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You can observe time ticking by at some regular, periodic interval. If you’re building a custom player, the most common use case for periodic observation is to update the time display in your user interface."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To observe periodic timing, use the player’s "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer/1385829-addperiodictimeobserverforinterv"
            },
            {
              "type": "text",
              "text": " method. This method takes a "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/coremedia/cmtime-u58"
            },
            {
              "type": "text",
              "text": " value representing the time interval, a serial dispatch queue, and a callback block to be invoked at the specified time interval. The following example shows how to set up a block to be called every half-second during normal playback:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "var player: AVPlayer!",
            "var playerItem: AVPlayerItem!",
            "var timeObserverToken: Any?",
            "",
            "func addPeriodicTimeObserver() {",
            "    // Notify every half second",
            "    let timeScale = CMTimeScale(NSEC_PER_SEC)",
            "    let time = CMTime(seconds: 0.5, preferredTimescale: timeScale)",
            "",
            "    timeObserverToken = player.addPeriodicTimeObserver(forInterval: time,",
            "                                                      queue: .main) {",
            "        [weak self] time in",
            "        // update player transport UI",
            "    }",
            "}",
            "",
            "func removePeriodicTimeObserver() {",
            "    if let timeObserverToken = timeObserverToken {",
            "        player.removeTimeObserver(timeObserverToken)",
            "        self.timeObserverToken = nil",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "2948358",
            "title": "Listing 1"
          }
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Observe Boundary Timing",
          "anchor": "2948359"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The other way you can observe time is by boundary. You define various points of interest within the media’s timeline, and the framework calls you back as those times are traversed during normal playback. Boundary observations are used less frequently than periodic observations, but can still prove useful in certain situations. For instance, you might use boundary observations if you're presenting a video with no playback controls and want to synchronize elements of the display or present supplemental content as those times are traversed."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To observe boundary times, use the player’s "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/avfoundation/avplayer/1388027-addboundarytimeobserverfortimes"
            },
            {
              "type": "text",
              "text": " method. This method takes an array of "
            },
            {
              "type": "reference",
              "isActive": true,
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsvalue"
            },
            {
              "type": "text",
              "text": " objects wrapping the "
            },
            {
              "type": "codeVoice",
              "code": "CMTime"
            },
            {
              "type": "text",
              "text": " values that define your boundary times, a serial dispatch queue, and a callback block. The following example shows how to define boundary times for each quarter of playback:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "var asset: AVAsset!",
            "var player: AVPlayer!",
            "var playerItem: AVPlayerItem!",
            "var timeObserverToken: Any?",
            "",
            "func addBoundaryTimeObserver() {",
            "",
            "    // Divide the asset's duration into quarters.",
            "    let interval = CMTimeMultiplyByFloat64(asset.duration, 0.25)",
            "    var currentTime = kCMTimeZero",
            "    var times = [NSValue]()",
            "",
            "    // Calculate boundary times",
            "    while currentTime < asset.duration {",
            "        currentTime = currentTime + interval",
            "        times.append(NSValue(time:currentTime))",
            "    }",
            "",
            "    timeObserverToken = player.addBoundaryTimeObserver(forTimes: times,",
            "                                                       queue: .main) {",
            "        // Update UI",
            "    }",
            "}",
            "",
            "func removeBoundaryTimeObserver() {",
            "    if let timeObserverToken = timeObserverToken {",
            "        player.removeTimeObserver(timeObserverToken)",
            "        self.timeObserverToken = nil",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "2948360",
            "title": "Listing 2"
          }
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}