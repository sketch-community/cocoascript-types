{
  "abstract": [
    {
      "type": "text",
      "text": "Build a simple video playback app with built-in controls by using minimal code and effort."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/avfoundation",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 2943572,
  "kind": "article",
  "metadata": {
    "title": "Creating a Basic Video Player (macOS)",
    "role": "article",
    "roleHeading": "Article",
    "modules": [
      {
        "name": "AVFoundation"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/avfoundation": {
      "title": "AVFoundation",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation",
      "url": "/documentation/avfoundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection": {
      "title": "Media Playback and Selection",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection",
      "url": "/documentation/avfoundation/media_playback_and_selection",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "link-media-2943573": {
      "identifier": "link-media-2943573",
      "type": "link",
      "title": "Figure 1",
      "url": "/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos#2943573"
    },
    "media-2943573": {
      "identifier": "media-2943573",
      "type": "image",
      "variants": [
        {
          "traits": [
            "2x"
          ],
          "size": {
            "width": 367,
            "height": 504
          },
          "url": "https://docs-assets.developer.apple.com/published/174f7cdc51/2943573@2x.png"
        },
        {
          "traits": [
            "dark",
            "2x"
          ],
          "size": {
            "width": 367,
            "height": 504
          },
          "url": "https://docs-assets.developer.apple.com/published/2c69701e7c/2943573~dark@2x.png"
        }
      ],
      "alt": "Xcode constraints window with pinning and aspect ratio options added. The “Spacing to nearest neighbor” is set to zero in all directions. The width is set to 480, and the height is 270. The Aspect Ratio box is checked.",
      "title": "Figure 1"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos#2943575": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos#2943575",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos#2943575"
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos": {
      "title": "Creating a Basic Video Player (macOS)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_macos",
      "abstract": [
        {
          "type": "text",
          "text": "Build a simple video playback app with built-in controls by using minimal code and effort."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_ios_and_tvos": {
      "title": "Creating a Basic Video Player (iOS and tvOS)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_ios_and_tvos",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_ios_and_tvos",
      "abstract": [
        {
          "type": "text",
          "text": "Create a simple video playback app with built-in controls."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/configuring_the_audio_playback_of_ios_and_tvos_apps": {
      "title": "Configuring the Audio Playback of iOS and tvOS Apps",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/configuring_the_audio_playback_of_ios_and_tvos_apps",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/configuring_the_audio_playback_of_ios_and_tvos_apps",
      "abstract": [
        {
          "type": "text",
          "text": "Customize your app’s audio playback capabilities by configuring its audio session and background modes."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/guidelines_for_apple_tv_4k_development": {
      "title": "Guidelines for Apple TV 4K Development",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/guidelines_for_apple_tv_4k_development",
      "kind": "article",
      "role": "article",
      "url": "/documentation/avfoundation/media_playback_and_selection/guidelines_for_apple_tv_4k_development",
      "abstract": [
        {
          "type": "text",
          "text": "Follow these guidelines when developing for Apple TV 4K."
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/creating_a_basic_video_player_ios_and_tvos",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/configuring_the_audio_playback_of_ios_and_tvos_apps",
        "doc://com.apple.documentation/documentation/avfoundation/media_playback_and_selection/guidelines_for_apple_tv_4k_development"
      ],
      "title": "Essentials",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "content",
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Quickly create a simple video playback app using AVKit and AVFoundation. Interface Builder enables you to easily incorporate the "
            },
            {
              "type": "codeVoice",
              "code": "AVPlayerView"
            },
            {
              "type": "text",
              "text": " control into your app with drag and drop. This control displays the video content from a player object along with the system-supplied playback controls, such as play and pause. It also supports a standard set of keyboard shortcuts to control playback. Add a few lines of code to associate a player object with the player view to complete the app."
            }
          ]
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Set Up and Configure the User Interface",
          "anchor": "2943578"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Begin by creating the user interface for the player."
            }
          ]
        },
        {
          "type": "orderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Open the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Main.storyboard"
                    },
                    {
                      "type": "text",
                      "text": " file and drag an AVKit player view object onto the storyboard."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Add pinning constraints to the player view to pin it to its superview’s edges and maintain its aspect ratio, as shown below."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Select the player view. In the Attributes inspector, change the Controls Style selection to Floating. This style presents controls matching the ones found in the QuickTime Player app."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "image",
              "identifier": "media-2943573",
              "metadata": {
                "anchor": "2943573",
                "title": "Figure 1"
              }
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Implement Playback Behavior",
          "anchor": "2943574"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Now that you’ve created the user interface, it’s time to add the code required to play a video."
            }
          ]
        },
        {
          "type": "orderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Open the assistant editor from the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "Main.storyboard"
                    },
                    {
                      "type": "text",
                      "text": " file, Control-drag the player view object to the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ViewController.swift"
                    },
                    {
                      "type": "text",
                      "text": " class, and add a new "
                    },
                    {
                      "type": "codeVoice",
                      "code": "@IBOutlet"
                    },
                    {
                      "type": "text",
                      "text": " called "
                    },
                    {
                      "type": "codeVoice",
                      "code": "playerView"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Add the AVKit and AVFoundation frameworks to the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "ViewController.swift"
                    },
                    {
                      "type": "text",
                      "text": " class."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "In the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "viewDidLoad"
                    },
                    {
                      "type": "text",
                      "text": " method, add the following code, making sure to replace the URL with one that points to a real video file available on the public internet:"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "override func viewDidLoad() {",
            "    super.viewDidLoad()",
            "    guard let url = URL(string: \"https://example.com/my-example-video.m3u8\") else { return }",
            "    ",
            "    // Create a new AVPlayer and associate it with the player view.",
            "    let player = AVPlayer(url: url)",
            "    playerView.player = player",
            "}"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "2943575",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "type": "paragraph",
          "inlineContent": []
        },
        {
          "level": 3,
          "type": "heading",
          "text": "Add the Entitlement for Outgoing Connections (Client)",
          "anchor": "3783242"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Build and run the app. The window opens, but the video doesn’t play because your app doesn’t have the required permissions to create an outgoing network connection. To resolve such situations, add the specific entitlements in Xcode that correspond to the capabilities that your app requires."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "In the Signing & Capabilities tab of the target editor, within the App Sandbox section, select the entitlement that corresponds to Outgoing Connections (Client). Doing so applies a "
            },
            {
              "type": "codeVoice",
              "code": "TRUE"
            },
            {
              "type": "text",
              "text": " value for the needed entitlement to the Xcode project by modifying the "
            },
            {
              "type": "codeVoice",
              "code": ".entitlements"
            },
            {
              "type": "text",
              "text": " property list file."
            }
          ]
        },
        {
          "type": "aside",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "Network entitlements are specified in terms of who establishes the connection, not the primary direction of data flow. In this example, you need the Outbound Connection capability because the app is initiating the connection. An app acting as a server would require the Inbound Connection entitlement."
                }
              ]
            }
          ],
          "style": "note",
          "name": "Note"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Your app is complete, and you can build and run it on your macOS device."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}