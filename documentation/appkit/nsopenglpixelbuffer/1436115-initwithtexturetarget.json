{
  "abstract": [
    {
      "type": "text",
      "text": "Returns an "
    },
    {
      "type": "codeVoice",
      "code": "NSOpenGLPixelBuffer"
    },
    {
      "type": "text",
      "text": " object initialized with the specified parameters. "
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/appkit",
        "doc://com.apple.documentation/documentation/appkit/drawing",
        "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436115-initwithtexturetarget",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1436115,
  "kind": "symbol",
  "metadata": {
    "title": "initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:",
    "role": "symbol",
    "roleHeading": "Instance Method",
    "modules": [
      {
        "name": "AppKit"
      }
    ],
    "platforms": [
      {
        "name": "macOS",
        "introducedAt": "10.2",
        "deprecatedAt": "10.7",
        "current": "12.1",
        "deprecated": true
      }
    ],
    "externalID": "c:objc(cs)NSOpenGLPixelBuffer(im)initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:",
    "parent": {
      "title": "NSOpenGLPixelBuffer"
    },
    "symbolKind": "instm"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/appkit/nsopenglpixelbuffer/1436115-initwithtexturetarget"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/appkit": {
      "title": "AppKit",
      "identifier": "doc://com.apple.documentation/documentation/appkit",
      "url": "/documentation/appkit",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/appkit/drawing": {
      "title": "Drawing",
      "identifier": "doc://com.apple.documentation/documentation/appkit/drawing",
      "url": "/documentation/appkit/drawing",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer": {
      "title": "NSOpenGLPixelBuffer",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/appkit/nsopenglpixelbuffer",
      "abstract": [
        {
          "type": "text",
          "text": "An object that provides access to accelerated offscreen rendering. "
        }
      ]
    },
    "devLink-1728991": {
      "identifier": "devLink-1728991",
      "type": "link",
      "title": "Cocoa Drawing Guide",
      "url": "https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CocoaDrawingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40003290"
    },
    "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436115-initwithtexturetarget": {
      "title": "initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436115-initwithtexturetarget",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/appkit/nsopenglpixelbuffer/1436115-initwithtexturetarget",
      "abstract": [
        {
          "type": "text",
          "text": "Returns an "
        },
        {
          "type": "codeVoice",
          "code": "NSOpenGLPixelBuffer"
        },
        {
          "type": "text",
          "text": " object initialized with the specified parameters. "
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:"
        }
      ],
      "deprecated": true
    },
    "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436176-initwithcglpbufferobj": {
      "title": "initWithCGLPBufferObj:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436176-initwithcglpbufferobj",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/appkit/nsopenglpixelbuffer/1436176-initwithcglpbufferobj",
      "abstract": [
        {
          "type": "text",
          "text": "Initializes and returns an OpenGL pixel buffer object that encapsulates an existing CGL pixel buffer object."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "initWithCGLPBufferObj:"
        }
      ],
      "deprecated": true
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/appkit/nsopenglpixelbuffer/1436176-initwithcglpbufferobj"
      ],
      "title": "Initializing an OpenGL Pixel Buffer",
      "generated": true
    },
    {
      "title": "Related Documentation",
      "generated": false,
      "identifiers": [
        "devLink-1728991"
      ]
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "keyword",
              "text": "instancetype"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "identifier",
              "text": "initWithTextureTarget:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@GLenum",
              "text": "GLenum"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "target"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "textureInternalFormat:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@GLenum",
              "text": "GLenum"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "format"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "textureMaxMipMapLevel:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@GLint",
              "text": "GLint"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "maxLevel"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "pixelsWide:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@GLsizei",
              "text": "GLsizei"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "pixelsWide"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "pixelsHigh:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@GLsizei",
              "text": "GLsizei"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "pixelsHigh"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ],
          "platforms": [
            "macOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "target",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The texture object. This value should be one of the following:  "
                },
                {
                  "type": "codeVoice",
                  "code": "GL_TEXTURE_2D"
                },
                {
                  "type": "text",
                  "text": ","
                },
                {
                  "type": "codeVoice",
                  "code": "GL_TEXTURE_CUBE_MAP"
                },
                {
                  "type": "text",
                  "text": ", or "
                },
                {
                  "type": "codeVoice",
                  "code": "GL_TEXTURE_RECTANGLE_EXT"
                },
                {
                  "type": "text",
                  "text": ". "
                }
              ]
            }
          ]
        },
        {
          "name": "format",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The base internal format of the texture. This value should be "
                },
                {
                  "type": "codeVoice",
                  "code": "GL_RGB"
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "codeVoice",
                  "code": "GL_RGBA"
                },
                {
                  "type": "text",
                  "text": ", or "
                },
                {
                  "type": "codeVoice",
                  "code": "GL_DEPTH_COMPONENT"
                },
                {
                  "type": "text",
                  "text": ".  "
                }
              ]
            }
          ]
        },
        {
          "name": "maxLevel",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The desired maximum mipmap level of the structure, starting with zero."
                }
              ]
            }
          ]
        },
        {
          "name": "pixelsWide",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The width of the texture (in pixels) in the pixel buffer."
                }
              ]
            }
          ]
        },
        {
          "name": "pixelsHigh",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The height of the texture (in pixels) in the pixel buffer."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "An initialized "
            },
            {
              "type": "codeVoice",
              "code": "NSOpenGLPixelBuffer"
            },
            {
              "type": "text",
              "text": " object or "
            },
            {
              "type": "codeVoice",
              "code": "nil"
            },
            {
              "type": "text",
              "text": " if the initialization failed. Initialization can fail if there is inconsistency among the parameter values. See the OpenGL documentation for "
            },
            {
              "type": "codeVoice",
              "code": "glTexImage2D"
            },
            {
              "type": "text",
              "text": " for more information.  "
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The value you pass to the "
            },
            {
              "type": "codeVoice",
              "code": "target"
            },
            {
              "type": "text",
              "text": " parameter defines several other constraints that are then applied to the remaining parameters. The list below gives the values you can pass to "
            },
            {
              "type": "codeVoice",
              "code": "target"
            },
            {
              "type": "text",
              "text": " and the additional constraints. "
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "GL_TEXTURE_2D"
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "GL_TEXTURE_CUBE_MAP"
                    },
                    {
                      "type": "text",
                      "text": " - the values in "
                    },
                    {
                      "type": "codeVoice",
                      "code": "pixelsWide"
                    },
                    {
                      "type": "text",
                      "text": " and "
                    },
                    {
                      "type": "codeVoice",
                      "code": "pixelsHigh"
                    },
                    {
                      "type": "text",
                      "text": " must be equal."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "codeVoice",
                      "code": "GL_TEXTURE_RECTANGLE_EXT"
                    },
                    {
                      "type": "text",
                      "text": " - "
                    },
                    {
                      "type": "codeVoice",
                      "code": "maxLevel"
                    },
                    {
                      "type": "text",
                      "text": " must be zero. "
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Normally, when using the "
            },
            {
              "type": "codeVoice",
              "code": "GL_TEXTURE_2D"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "GL_TEXTURE_CUBE_MAP"
            },
            {
              "type": "text",
              "text": " targets, you must specify width and height values that are powers of two. When the "
            },
            {
              "type": "codeVoice",
              "code": "ARB_texture_non_power_of_two"
            },
            {
              "type": "text",
              "text": " extension is present, however, some types of hardware can support values that are not powers of two. You should check for the presence of this extension before specifying non power-of-two values. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "If the texture map cannot be created, you can use the "
            },
            {
              "type": "codeVoice",
              "code": "glGetError"
            },
            {
              "type": "text",
              "text": " function to get the error code. "
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}