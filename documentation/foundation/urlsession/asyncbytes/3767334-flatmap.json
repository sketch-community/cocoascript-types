{
  "abstract": [
    {
      "type": "text",
      "text": "Creates an asynchronous sequence that concatenates the results of calling the given error-throwing transformation with each element of this sequence."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/url_loading_system",
        "doc://com.apple.documentation/documentation/foundation/urlsession",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767334-flatmap",
    "interfaceLanguage": "swift"
  },
  "legacy_identifier": 3767334,
  "kind": "symbol",
  "metadata": {
    "title": "flatMap(_:)",
    "role": "symbol",
    "roleHeading": "Generic Instance Method",
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.15",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "6.0",
        "current": "8.3"
      },
      {
        "name": "Xcode",
        "introducedAt": "13.0",
        "current": "13.2"
      }
    ],
    "externalID": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:So12NSURLSessionC10FoundationE10AsyncBytesV",
    "parent": {
      "title": "URLSession.AsyncBytes"
    },
    "symbolKind": "structm",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "flatMap"
      },
      {
        "kind": "text",
        "text": "<SegmentOfResult>((UInt8) -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<URLSession.AsyncBytes, SegmentOfResult>"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/foundation/urlsession/asyncbytes/3767334-flatmap"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation": {
      "title": "Foundation",
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "url": "/documentation/foundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/foundation/url_loading_system": {
      "title": "URL Loading System",
      "identifier": "doc://com.apple.documentation/documentation/foundation/url_loading_system",
      "url": "/documentation/foundation/url_loading_system",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession": {
      "title": "URLSession",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes": {
      "title": "URLSession.AsyncBytes",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767334-flatmap#3839841": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767334-flatmap#3839841",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767334-flatmap#3839841"
    },
    "doc://com.apple.documentation/documentation/swift/uint8": {
      "title": "UInt8",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/uint8",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/uint8"
    },
    "doc://com.apple.documentation/documentation/swift/asyncthrowingflatmapsequence": {
      "title": "AsyncThrowingFlatMapSequence",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/asyncthrowingflatmapsequence",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/asyncthrowingflatmapsequence"
    },
    "doc://com.apple.documentation/documentation/swift/asyncsequence": {
      "title": "AsyncSequence",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/asyncsequence",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/asyncsequence"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767338-map": {
      "title": "map(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767338-map",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767338-map",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that maps the given error-throwing closure over the asynchronous sequence’s elements."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "map"
        },
        {
          "kind": "text",
          "text": "<Transformed>((UInt8) -> Transformed) -> AsyncThrowingMapSequence<URLSession.AsyncBytes, Transformed>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767339-map": {
      "title": "map(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767339-map",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767339-map",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that maps the given closure over the asynchronous sequence’s elements."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "map"
        },
        {
          "kind": "text",
          "text": "<Transformed>((UInt8) -> Transformed) -> AsyncMapSequence<URLSession.AsyncBytes, Transformed>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767326-compactmap": {
      "title": "compactMap(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767326-compactmap",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767326-compactmap",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that maps an error-throwing closure over the base sequence’s elements, omitting results that don’t return a value."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<ElementOfResult>((UInt8) -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<URLSession.AsyncBytes, ElementOfResult>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767327-compactmap": {
      "title": "compactMap(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767327-compactmap",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767327-compactmap",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that maps the given closure over the asynchronous sequence’s elements, omitting results that don’t return a value."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "compactMap"
        },
        {
          "kind": "text",
          "text": "<ElementOfResult>((UInt8) -> ElementOfResult?) -> AsyncCompactMapSequence<URLSession.AsyncBytes, ElementOfResult>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767334-flatmap": {
      "title": "flatMap(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767334-flatmap",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767334-flatmap",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that concatenates the results of calling the given error-throwing transformation with each element of this sequence."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<SegmentOfResult>((UInt8) -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<URLSession.AsyncBytes, SegmentOfResult>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767335-flatmap": {
      "title": "flatMap(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767335-flatmap",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767335-flatmap",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that concatenates the results of calling the given transformation with each element of this sequence."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "flatMap"
        },
        {
          "kind": "text",
          "text": "<SegmentOfResult>((UInt8) -> SegmentOfResult) -> AsyncFlatMapSequence<URLSession.AsyncBytes, SegmentOfResult>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767346-reduce": {
      "title": "reduce(_:_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767346-reduce",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767346-reduce",
      "abstract": [
        {
          "type": "text",
          "text": "Returns the result of combining the elements of the asynchronous sequence using the given closure."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<Result>(Result, (Result, UInt8) -> Result) -> Result"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767347-reduce": {
      "title": "reduce(into:_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767347-reduce",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/urlsession/asyncbytes/3767347-reduce",
      "abstract": [
        {
          "type": "text",
          "text": "Returns the result of combining the elements of the asynchronous sequence using the given closure, given a mutable initial value."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "reduce"
        },
        {
          "kind": "text",
          "text": "<Result>("
        },
        {
          "kind": "identifier",
          "text": "into"
        },
        {
          "kind": "text",
          "text": ": Result, (inout Result, UInt8) -> Void) -> Result"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "diffAvailability": {
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.1",
        "13.2 beta 1"
      ]
    },
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.0",
        "13.2 beta 1"
      ]
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767338-map",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767339-map",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767326-compactmap",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767327-compactmap",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767335-flatmap",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767346-reduce",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes/3767347-reduce"
      ],
      "title": "Transforming a Sequence",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "flatMap"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF15SegmentOfResultL_qd__mfp",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": ">("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "transform"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s5UInt8V",
              "identifier": "doc://com.apple.documentation/documentation/swift/uint8",
              "text": "UInt8"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "throws"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF15SegmentOfResultL_qd__mfp",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency28AsyncThrowingFlatMapSequenceV",
              "identifier": "doc://com.apple.documentation/documentation/swift/asyncthrowingflatmapsequence",
              "text": "AsyncThrowingFlatMapSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSURLSession",
              "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession",
              "text": "URLSession"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:So12NSURLSessionC10FoundationE10AsyncBytesV",
              "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes",
              "text": "AsyncBytes"
            },
            {
              "kind": "text",
              "text": ", "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF15SegmentOfResultL_qd__mfp",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": ">"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF15SegmentOfResultL_qd__mfp",
              "text": "SegmentOfResult"
            },
            {
              "kind": "text",
              "text": " : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sci",
              "identifier": "doc://com.apple.documentation/documentation/swift/asyncsequence",
              "text": "AsyncSequence"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "name": "transform",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "An error-throwing mapping closure. "
                },
                {
                  "type": "codeVoice",
                  "code": "transform"
                },
                {
                  "type": "text",
                  "text": " accepts an element of this sequence as its parameter and returns an "
                },
                {
                  "type": "codeVoice",
                  "code": "AsyncSequence"
                },
                {
                  "type": "text",
                  "text": ". If "
                },
                {
                  "type": "codeVoice",
                  "code": "transform"
                },
                {
                  "type": "text",
                  "text": " throws an error, the sequence ends."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "A single, flattened asynchronous sequence that contains all elements in all the asychronous sequences produced by "
            },
            {
              "type": "codeVoice",
              "code": "transform"
            },
            {
              "type": "text",
              "text": ". The sequence ends either when the the last sequence created from the last element from base sequence ends, or when "
            },
            {
              "type": "codeVoice",
              "code": "transform"
            },
            {
              "type": "text",
              "text": " throws an error."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use this method to receive a single-level asynchronous sequence when your transformation produces an asynchronous sequence for each element."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "In this example, an asynchronous sequence called "
            },
            {
              "type": "codeVoice",
              "code": "Counter"
            },
            {
              "type": "text",
              "text": " produces "
            },
            {
              "type": "codeVoice",
              "code": "Int"
            },
            {
              "type": "text",
              "text": " values from "
            },
            {
              "type": "codeVoice",
              "code": "1"
            },
            {
              "type": "text",
              "text": " to "
            },
            {
              "type": "codeVoice",
              "code": "5"
            },
            {
              "type": "text",
              "text": ". The transforming closure takes the received "
            },
            {
              "type": "codeVoice",
              "code": "Int"
            },
            {
              "type": "text",
              "text": " and returns a new "
            },
            {
              "type": "codeVoice",
              "code": "Counter"
            },
            {
              "type": "text",
              "text": " that counts that high. For example, when the transform receives "
            },
            {
              "type": "codeVoice",
              "code": "3"
            },
            {
              "type": "text",
              "text": " from the base sequence, it creates a new "
            },
            {
              "type": "codeVoice",
              "code": "Counter"
            },
            {
              "type": "text",
              "text": " that produces the values "
            },
            {
              "type": "codeVoice",
              "code": "1"
            },
            {
              "type": "text",
              "text": ", "
            },
            {
              "type": "codeVoice",
              "code": "2"
            },
            {
              "type": "text",
              "text": ", and "
            },
            {
              "type": "codeVoice",
              "code": "3"
            },
            {
              "type": "text",
              "text": ". The "
            },
            {
              "type": "codeVoice",
              "code": "flatMap(_:)"
            },
            {
              "type": "text",
              "text": " method “flattens” the resulting sequence-of-sequences into a single "
            },
            {
              "type": "codeVoice",
              "code": "AsyncSequence"
            },
            {
              "type": "text",
              "text": ". However, when the closure receives "
            },
            {
              "type": "codeVoice",
              "code": "4"
            },
            {
              "type": "text",
              "text": ", it throws an error, terminating the sequence."
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "do {",
            "    let stream = Counter(howHigh: 5)",
            "        .flatMap { (value) -> Counter in",
            "            if value == 4 {",
            "                throw MyError()",
            "            }",
            "            return Counter(howHigh: value)",
            "        }",
            "    for try await number in stream {",
            "        print (\"\\(number)\", terminator: \" \")",
            "    }",
            "} catch {",
            "    print(error)",
            "}",
            "// Prints: 1 1 2 1 2 3 MyError()"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3839841",
            "title": "Listing 1"
          }
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}