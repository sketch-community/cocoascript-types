{
  "abstract": [
    {
      "type": "text",
      "text": "Creates an asynchronous sequence that contains, in order, the elements of the base sequence that satisfy the given predicate."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/file_system",
        "doc://com.apple.documentation/documentation/foundation/filehandle",
        "doc://com.apple.documentation/documentation/foundation/filehandle/asyncbytes",
        "doc://com.apple.documentation/documentation/foundation/asynccharactersequence"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/url_loading_system",
        "doc://com.apple.documentation/documentation/foundation/urlsession",
        "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes",
        "doc://com.apple.documentation/documentation/foundation/asynccharactersequence"
      ],
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/swift",
        "doc://com.apple.documentation/documentation/swift/swift_standard_library",
        "doc://com.apple.documentation/documentation/swift/swift_standard_library/concurrency",
        "doc://com.apple.documentation/documentation/swift/asyncsequence",
        "doc://com.apple.documentation/documentation/foundation/asynccharactersequence"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764472-filter",
    "interfaceLanguage": "swift"
  },
  "legacy_identifier": 3764472,
  "kind": "symbol",
  "metadata": {
    "title": "filter(_:)",
    "role": "symbol",
    "roleHeading": "Instance Method",
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.15",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "6.0",
        "current": "8.3"
      },
      {
        "name": "Xcode",
        "introducedAt": "13.0",
        "current": "13.2"
      }
    ],
    "externalID": "s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:10Foundation22AsyncCharacterSequenceV",
    "parent": {
      "title": "AsyncCharacterSequence"
    },
    "symbolKind": "structm",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "filter"
      },
      {
        "kind": "text",
        "text": "((Character) -> Bool) -> AsyncFilterSequence<AsyncCharacterSequence<Base>>"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/foundation/asynccharactersequence/3764472-filter"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation": {
      "title": "Foundation",
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "url": "/documentation/foundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/foundation/file_system": {
      "title": "File System",
      "identifier": "doc://com.apple.documentation/documentation/foundation/file_system",
      "url": "/documentation/foundation/file_system",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/filehandle": {
      "title": "FileHandle",
      "identifier": "doc://com.apple.documentation/documentation/foundation/filehandle",
      "url": "/documentation/foundation/filehandle",
      "type": "topic",
      "kind": "symbol",
      "role": "symbol"
    },
    "doc://com.apple.documentation/documentation/foundation/filehandle/asyncbytes": {
      "title": "AsyncBytes",
      "identifier": "doc://com.apple.documentation/documentation/foundation/filehandle/asyncbytes",
      "url": "/documentation/foundation/filehandle/asyncbytes",
      "type": "topic",
      "kind": "symbol",
      "role": "symbol"
    },
    "doc://com.apple.documentation/documentation/foundation/asynccharactersequence": {
      "title": "AsyncCharacterSequence",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/asynccharactersequence"
    },
    "doc://com.apple.documentation/documentation/foundation/url_loading_system": {
      "title": "URL Loading System",
      "identifier": "doc://com.apple.documentation/documentation/foundation/url_loading_system",
      "url": "/documentation/foundation/url_loading_system",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession": {
      "title": "URLSession",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession",
      "url": "/documentation/foundation/urlsession",
      "type": "topic",
      "kind": "symbol",
      "role": "symbol"
    },
    "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes": {
      "title": "AsyncBytes",
      "identifier": "doc://com.apple.documentation/documentation/foundation/urlsession/asyncbytes",
      "url": "/documentation/foundation/urlsession/asyncbytes",
      "type": "topic",
      "kind": "symbol",
      "role": "symbol"
    },
    "doc://com.apple.documentation/documentation/swift": {
      "title": "Swift",
      "identifier": "doc://com.apple.documentation/documentation/swift",
      "url": "/documentation/swift",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/swift/swift_standard_library": {
      "title": "Swift Standard Library",
      "identifier": "doc://com.apple.documentation/documentation/swift/swift_standard_library",
      "url": "/documentation/swift/swift_standard_library",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/swift/swift_standard_library/concurrency": {
      "title": "Concurrency",
      "identifier": "doc://com.apple.documentation/documentation/swift/swift_standard_library/concurrency",
      "url": "/documentation/swift/swift_standard_library/concurrency",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/swift/asyncsequence": {
      "title": "AsyncSequence",
      "identifier": "doc://com.apple.documentation/documentation/swift/asyncsequence",
      "url": "/documentation/swift/asyncsequence",
      "type": "topic",
      "kind": "symbol",
      "role": "symbol"
    },
    "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764472-filter#3839661": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764472-filter#3839661",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/asynccharactersequence/3764472-filter#3839661"
    },
    "doc://com.apple.documentation/documentation/swift/character": {
      "title": "Character",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/character",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/character"
    },
    "doc://com.apple.documentation/documentation/swift/bool": {
      "title": "Bool",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/bool",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.documentation/documentation/swift/asyncfiltersequence": {
      "title": "AsyncFilterSequence",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/asyncfiltersequence",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/asyncfiltersequence"
    },
    "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764471-dropfirst": {
      "title": "dropFirst(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764471-dropfirst",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/asynccharactersequence/3764471-dropfirst",
      "abstract": [
        {
          "type": "text",
          "text": "Omits a specified number of elements from the base asynchronous sequence, then passes through all remaining elements."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "dropFirst"
        },
        {
          "kind": "text",
          "text": "(Int) -> AsyncDropFirstSequence<AsyncCharacterSequence<Base>>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764470-drop": {
      "title": "drop(while:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764470-drop",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/asynccharactersequence/3764470-drop",
      "abstract": [
        {
          "type": "text",
          "text": "Omits elements from the base asynchronous sequence until a given closure returns false, after which it passes through all remaining elements."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "drop"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "identifier",
          "text": "while"
        },
        {
          "kind": "text",
          "text": ": (Character) -> Bool) -> AsyncDropWhileSequence<AsyncCharacterSequence<Base>>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764472-filter": {
      "title": "filter(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764472-filter",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/asynccharactersequence/3764472-filter",
      "abstract": [
        {
          "type": "text",
          "text": "Creates an asynchronous sequence that contains, in order, the elements of the base sequence that satisfy the given predicate."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "func "
        },
        {
          "kind": "identifier",
          "text": "filter"
        },
        {
          "kind": "text",
          "text": "((Character) -> Bool) -> AsyncFilterSequence<AsyncCharacterSequence<Base>>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "diffAvailability": {
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.1",
        "13.2 beta 1"
      ]
    },
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.0",
        "13.2 beta 1"
      ]
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764471-dropfirst",
        "doc://com.apple.documentation/documentation/foundation/asynccharactersequence/3764470-drop"
      ],
      "title": "Excluding Elements",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "filter"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "_"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "isIncluded"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SJ",
              "identifier": "doc://com.apple.documentation/documentation/swift/character",
              "text": "Character"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "identifier": "doc://com.apple.documentation/documentation/swift/bool",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency19AsyncFilterSequenceV",
              "identifier": "doc://com.apple.documentation/documentation/swift/asyncfiltersequence",
              "text": "AsyncFilterSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation22AsyncCharacterSequenceV",
              "identifier": "doc://com.apple.documentation/documentation/foundation/asynccharactersequence",
              "text": "AsyncCharacterSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation22AsyncCharacterSequenceV4Basexmfp",
              "text": "Base"
            },
            {
              "kind": "text",
              "text": ">>"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "name": "isIncluded",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A closure that takes an element of the asynchronous sequence as its argument and returns a Boolean value that indicates whether to include the element in the filtered sequence."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "An asynchronous sequence that contains, in order, the elements of the base sequence that satisfy the given predicate."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "In this example, an asynchronous sequence called "
            },
            {
              "type": "codeVoice",
              "code": "Counter"
            },
            {
              "type": "text",
              "text": " produces "
            },
            {
              "type": "codeVoice",
              "code": "Int"
            },
            {
              "type": "text",
              "text": " values from "
            },
            {
              "type": "codeVoice",
              "code": "1"
            },
            {
              "type": "text",
              "text": " to "
            },
            {
              "type": "codeVoice",
              "code": "10"
            },
            {
              "type": "text",
              "text": ". The "
            },
            {
              "type": "codeVoice",
              "code": "filter(_:)"
            },
            {
              "type": "text",
              "text": " method returns "
            },
            {
              "type": "codeVoice",
              "code": "true"
            },
            {
              "type": "text",
              "text": " for even values and "
            },
            {
              "type": "codeVoice",
              "code": "false"
            },
            {
              "type": "text",
              "text": " for odd values, thereby filtering out the odd values:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let stream = Counter(howHigh: 10)",
            "    .filter { $0 % 2 == 0 }",
            "for await number in stream {",
            "    print(\"\\(number) \", terminator: \" \")",
            "}",
            "// Prints: 2  4  6  8  10"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3839661",
            "title": "Listing 1"
          }
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}