{
  "abstract": [
    {
      "type": "text",
      "text": "Returns a random element of the collection, using the given generator as a source for randomness."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/collections",
        "doc://com.apple.documentation/documentation/foundation/indexset"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/foundation/indexset/2994574-randomelement",
    "interfaceLanguage": "swift"
  },
  "legacy_identifier": 2994574,
  "kind": "symbol",
  "metadata": {
    "title": "randomElement(using:)",
    "role": "symbol",
    "roleHeading": "Generic Instance Method",
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "7.0",
        "current": "14.3"
      },
      {
        "name": "macOS",
        "introducedAt": "10.9",
        "current": "11.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "14.3"
      },
      {
        "name": "tvOS",
        "introducedAt": "9.0",
        "current": "14.3"
      },
      {
        "name": "watchOS",
        "introducedAt": "2.0",
        "current": "7.2"
      },
      {
        "name": "Xcode",
        "introducedAt": "10.0",
        "current": "12.3"
      }
    ],
    "externalID": "s:SlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF::SYNTHESIZED::s:10Foundation8IndexSetV",
    "symbolKind": "structm",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "randomElement"
      },
      {
        "kind": "text",
        "text": "<T>("
      },
      {
        "kind": "identifier",
        "text": "using"
      },
      {
        "kind": "text",
        "text": ": inout T) -> Int?"
      }
    ]
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/foundation/indexset/2994574-randomelement"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation": {
      "title": "Foundation",
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "url": "/documentation/foundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/foundation/collections": {
      "title": "Collections",
      "identifier": "doc://com.apple.documentation/documentation/foundation/collections",
      "url": "/documentation/foundation/collections",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/indexset": {
      "title": "IndexSet",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/indexset",
      "abstract": [
        {
          "type": "text",
          "text": "A collection of unique integer values that represent the indexes of elements in another collection. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/indexset/2994574-randomelement#3003421": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/indexset/2994574-randomelement#3003421",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/indexset/2994574-randomelement#3003421"
    },
    "doc://com.apple.documentation/documentation/swift/int": {
      "title": "Int",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/int",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/int"
    },
    "doc://com.apple.documentation/documentation/swift/randomnumbergenerator": {
      "title": "RandomNumberGenerator",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/randomnumbergenerator",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/randomnumbergenerator"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "randomElement"
            },
            {
              "kind": "text",
              "text": "<T>("
            },
            {
              "kind": "externalParam",
              "text": "using"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "generator"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "inout"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "T"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Si",
              "identifier": "doc://com.apple.documentation/documentation/swift/int",
              "text": "Int"
            },
            {
              "kind": "text",
              "text": "?"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "where"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "T : "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:SG",
              "identifier": "doc://com.apple.documentation/documentation/swift/randomnumbergenerator",
              "text": "RandomNumberGenerator"
            }
          ],
          "platforms": [
            "iOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "name": "generator",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The random number generator to use when choosing a random element."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "A random element from the collection. If the collection is empty, the method returns "
            },
            {
              "type": "codeVoice",
              "code": "nil"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Call "
            },
            {
              "type": "codeVoice",
              "code": "randomElement(using:)"
            },
            {
              "type": "text",
              "text": " to select a random element from an array or another collection when you are using a custom random number generator. This example picks a name at random from an array:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let names = [\"Zoey\", \"Chloe\", \"Amani\", \"Amaia\"]",
            "let randomName = names.randomElement(using: &myGenerator)!",
            "// randomName == \"Amani\""
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3003421",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Complexity: O(1) if the collection conforms to "
            },
            {
              "type": "codeVoice",
              "code": "RandomAccessCollection"
            },
            {
              "type": "text",
              "text": "; otherwise, O("
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "n"
                }
              ]
            },
            {
              "type": "text",
              "text": "), where "
            },
            {
              "type": "emphasis",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "n"
                }
              ]
            },
            {
              "type": "text",
              "text": " is the length of the collection."
            }
          ]
        },
        {
          "type": "aside",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The algorithm used to select a random element may change in a future version of Swift. If you’re passing a generator that results in the same sequence of elements each time you run your program, that sequence may change when your program is compiled using a different version of Swift."
                }
              ]
            }
          ],
          "style": "note",
          "name": "Note"
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}