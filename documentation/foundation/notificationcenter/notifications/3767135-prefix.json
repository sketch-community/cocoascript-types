{
  "abstract": [
    {
      "type": "text",
      "text": "Returns an asynchronous sequence, containing the initial, consecutive elements of the base sequence that satisfy the given predicate."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/notifications",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter",
        "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767135-prefix",
    "interfaceLanguage": "swift"
  },
  "legacy_identifier": 3767135,
  "kind": "symbol",
  "metadata": {
    "title": "prefix(while:)",
    "role": "symbol",
    "roleHeading": "Instance Method",
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.15",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "15.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "6.0",
        "current": "8.3"
      },
      {
        "name": "Xcode",
        "introducedAt": "13.0",
        "current": "13.2"
      }
    ],
    "externalID": "s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:So20NSNotificationCenterC10FoundationE13NotificationsC",
    "parent": {
      "title": "NotificationCenter.Notifications"
    },
    "symbolKind": "instm",
    "fragments": [
      {
        "kind": "text",
        "text": "func "
      },
      {
        "kind": "identifier",
        "text": "prefix"
      },
      {
        "kind": "text",
        "text": "("
      },
      {
        "kind": "identifier",
        "text": "while"
      },
      {
        "kind": "text",
        "text": ": (Notification) -> Bool) -> AsyncPrefixWhileSequence<NotificationCenter.Notifications>"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/foundation/notificationcenter/notifications/3767135-prefix"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation": {
      "title": "Foundation",
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "url": "/documentation/foundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/foundation/notifications": {
      "title": "Notifications",
      "identifier": "doc://com.apple.documentation/documentation/foundation/notifications",
      "url": "/documentation/foundation/notifications",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter": {
      "title": "NotificationCenter",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/notificationcenter"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications": {
      "title": "NotificationCenter.Notifications",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/notificationcenter/notifications"
    },
    "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767135-prefix#3839770": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications/3767135-prefix#3839770",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/notificationcenter/notifications/3767135-prefix#3839770"
    },
    "doc://com.apple.documentation/documentation/foundation/notification": {
      "title": "Notification",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/notification",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/notification"
    },
    "doc://com.apple.documentation/documentation/swift/bool": {
      "title": "Bool",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/bool",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/bool"
    },
    "doc://com.apple.documentation/documentation/swift/asyncprefixwhilesequence": {
      "title": "AsyncPrefixWhileSequence",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/asyncprefixwhilesequence",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/asyncprefixwhilesequence"
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "diffAvailability": {
    "minor": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.1",
        "13.2 beta 1"
      ]
    },
    "major": {
      "change": "modified",
      "platform": "Xcode",
      "versions": [
        "13.0",
        "13.2 beta 1"
      ]
    }
  },
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "prefix"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "externalParam",
              "text": "while"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "internalParam",
              "text": "predicate"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "keyword",
              "text": "@escaping"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:10Foundation12NotificationV",
              "identifier": "doc://com.apple.documentation/documentation/foundation/notification",
              "text": "Notification"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "async"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:Sb",
              "identifier": "doc://com.apple.documentation/documentation/swift/bool",
              "text": "Bool"
            },
            {
              "kind": "text",
              "text": ") "
            },
            {
              "kind": "keyword",
              "text": "rethrows"
            },
            {
              "kind": "text",
              "text": " -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:12_Concurrency24AsyncPrefixWhileSequenceV",
              "identifier": "doc://com.apple.documentation/documentation/swift/asyncprefixwhilesequence",
              "text": "AsyncPrefixWhileSequence"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSNotificationCenter",
              "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter",
              "text": "NotificationCenter"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:So20NSNotificationCenterC10FoundationE13NotificationsC",
              "identifier": "doc://com.apple.documentation/documentation/foundation/notificationcenter/notifications",
              "text": "Notifications"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "name": "predicate",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "A closure that takes an element as a parameter and returns a Boolean value indicating whether the element should be included in the modified sequence."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "An asynchronous sequence of the initial, consecutive elements that satisfy "
            },
            {
              "type": "codeVoice",
              "code": "predicate"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use "
            },
            {
              "type": "codeVoice",
              "code": "prefix(while:)"
            },
            {
              "type": "text",
              "text": " to produce values while elements from the base sequence meet a condition you specify. The modified sequence ends when the predicate closure returns "
            },
            {
              "type": "codeVoice",
              "code": "false"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "In this example, an asynchronous sequence called "
            },
            {
              "type": "codeVoice",
              "code": "Counter"
            },
            {
              "type": "text",
              "text": " produces "
            },
            {
              "type": "codeVoice",
              "code": "Int"
            },
            {
              "type": "text",
              "text": " values from "
            },
            {
              "type": "codeVoice",
              "code": "1"
            },
            {
              "type": "text",
              "text": " to "
            },
            {
              "type": "codeVoice",
              "code": "10"
            },
            {
              "type": "text",
              "text": ". The "
            },
            {
              "type": "codeVoice",
              "code": "prefix(while:)"
            },
            {
              "type": "text",
              "text": " method causes the modified sequence to pass along values so long as they aren’t divisible by "
            },
            {
              "type": "codeVoice",
              "code": "2"
            },
            {
              "type": "text",
              "text": " and "
            },
            {
              "type": "codeVoice",
              "code": "3"
            },
            {
              "type": "text",
              "text": ". Upon reaching "
            },
            {
              "type": "codeVoice",
              "code": "6"
            },
            {
              "type": "text",
              "text": ", the sequence ends:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let stream = Counter(howHigh: 10)",
            "    .prefix { $0 % 2 != 0 || $0 % 3 != 0 }",
            "for try await number in stream {",
            "    print(\"\\(number) \", terminator: \" \")",
            "}",
            "// prints \"1  2  3  4  5\""
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3839770",
            "title": "Listing 1"
          }
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}