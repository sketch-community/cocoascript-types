{
  "abstract": [
    {
      "type": "text",
      "text": "Returns a partial range extending upward from a lower bound."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/foundation",
        "doc://com.apple.documentation/documentation/foundation/processes_and_threads",
        "doc://com.apple.documentation/documentation/foundation/runloop",
        "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394",
    "interfaceLanguage": "swift"
  },
  "legacy_identifier": 3329394,
  "kind": "symbol",
  "metadata": {
    "title": "...(_:)",
    "role": "symbol",
    "roleHeading": "Operator",
    "modules": [
      {
        "name": "Foundation"
      }
    ],
    "platforms": [
      {
        "name": "iOS",
        "introducedAt": "7.0",
        "current": "15.2"
      },
      {
        "name": "iPadOS",
        "introducedAt": "7.0",
        "current": "15.2"
      },
      {
        "name": "macOS",
        "introducedAt": "10.9",
        "current": "12.1"
      },
      {
        "name": "Mac Catalyst",
        "introducedAt": "13.0",
        "current": "15.2"
      },
      {
        "name": "tvOS",
        "introducedAt": "9.0",
        "current": "15.2"
      },
      {
        "name": "watchOS",
        "introducedAt": "2.0",
        "current": "8.3"
      },
      {
        "name": "Xcode",
        "introducedAt": "11.0",
        "current": "13.2"
      }
    ],
    "externalID": "s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV",
    "parent": {
      "title": "RunLoop.SchedulerTimeType"
    },
    "symbolKind": "opfunc",
    "fragments": [
      {
        "kind": "text",
        "text": "static func "
      },
      {
        "kind": "identifier",
        "text": "... "
      },
      {
        "kind": "text",
        "text": "(RunLoop.SchedulerTimeType) -> PartialRangeFrom<RunLoop.SchedulerTimeType>"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/foundation/runloop/schedulertimetype/3329394"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/foundation": {
      "title": "Foundation",
      "identifier": "doc://com.apple.documentation/documentation/foundation",
      "url": "/documentation/foundation",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/foundation/processes_and_threads": {
      "title": "Processes and Threads",
      "identifier": "doc://com.apple.documentation/documentation/foundation/processes_and_threads",
      "url": "/documentation/foundation/processes_and_threads",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/foundation/runloop": {
      "title": "RunLoop",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop"
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype": {
      "title": "RunLoop.SchedulerTimeType",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype"
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394#3329395": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394#3329395",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329394#3329395"
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394#3329396": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394#3329396",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329394#3329396"
    },
    "doc://com.apple.documentation/documentation/swift/partialrangefrom": {
      "title": "PartialRangeFrom",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/swift/partialrangefrom",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/swift/partialrangefrom"
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394": {
      "title": "...(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329394",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329394",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a partial range extending upward from a lower bound."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "static func "
        },
        {
          "kind": "identifier",
          "text": "... "
        },
        {
          "kind": "text",
          "text": "(RunLoop.SchedulerTimeType) -> PartialRangeFrom<RunLoop.SchedulerTimeType>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329397": {
      "title": "...(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329397",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329397",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a partial range up to, and including, its upper bound."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "static func "
        },
        {
          "kind": "identifier",
          "text": "... "
        },
        {
          "kind": "text",
          "text": "(RunLoop.SchedulerTimeType) -> PartialRangeThrough<RunLoop.SchedulerTimeType>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329400": {
      "title": "...(_:_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329400",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329400",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a closed range that contains both of its bounds."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "static func "
        },
        {
          "kind": "identifier",
          "text": "... "
        },
        {
          "kind": "text",
          "text": "(RunLoop.SchedulerTimeType, RunLoop.SchedulerTimeType) -> ClosedRange<RunLoop.SchedulerTimeType>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329402": {
      "title": "..<(_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329402",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329402",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a partial range up to, but not including, its upper bound."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "static func "
        },
        {
          "kind": "identifier",
          "text": "..< "
        },
        {
          "kind": "text",
          "text": "(RunLoop.SchedulerTimeType) -> PartialRangeUpTo<RunLoop.SchedulerTimeType>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329405": {
      "title": "..<(_:_:)",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329405",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/runloop/schedulertimetype/3329405",
      "abstract": [
        {
          "type": "text",
          "text": "Returns a half-open range that contains its lower bound but not its upper bound."
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "static func "
        },
        {
          "kind": "identifier",
          "text": "..< "
        },
        {
          "kind": "text",
          "text": "(RunLoop.SchedulerTimeType, RunLoop.SchedulerTimeType) -> Range<RunLoop.SchedulerTimeType>"
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "seeAlsoSections": [
    {
      "identifiers": [
        "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329397",
        "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329400",
        "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329402",
        "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype/3329405"
      ],
      "title": "Creating Ranges",
      "generated": true
    }
  ],
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "postfix"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "static"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "keyword",
              "text": "func"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "... "
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "internalParam",
              "text": "minimum"
            },
            {
              "kind": "text",
              "text": ": "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSRunLoop",
              "identifier": "doc://com.apple.documentation/documentation/foundation/runloop",
              "text": "RunLoop"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV",
              "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype",
              "text": "SchedulerTimeType"
            },
            {
              "kind": "text",
              "text": ") -> "
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:s16PartialRangeFromV",
              "identifier": "doc://com.apple.documentation/documentation/swift/partialrangefrom",
              "text": "PartialRangeFrom"
            },
            {
              "kind": "text",
              "text": "<"
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSRunLoop",
              "identifier": "doc://com.apple.documentation/documentation/foundation/runloop",
              "text": "RunLoop"
            },
            {
              "kind": "text",
              "text": "."
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV",
              "identifier": "doc://com.apple.documentation/documentation/foundation/runloop/schedulertimetype",
              "text": "SchedulerTimeType"
            },
            {
              "kind": "text",
              "text": ">"
            }
          ],
          "platforms": [
            "iOS",
            "iPadOS",
            "macOS",
            "Mac Catalyst",
            "tvOS",
            "watchOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "swift"
      ],
      "parameters": [
        {
          "name": "minimum",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The lower bound for the range."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Use the postfix range operator (postfix "
            },
            {
              "type": "codeVoice",
              "code": "..."
            },
            {
              "type": "text",
              "text": ") to create a partial range of any type that conforms to the "
            },
            {
              "type": "codeVoice",
              "code": "Comparable"
            },
            {
              "type": "text",
              "text": " protocol. This example creates a "
            },
            {
              "type": "codeVoice",
              "code": "PartialRangeFrom<Double>"
            },
            {
              "type": "text",
              "text": " instance that includes any value greater than or equal to "
            },
            {
              "type": "codeVoice",
              "code": "5.0"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let atLeastFive = 5.0...",
            "",
            "atLeastFive.contains(4.0)     // false",
            "atLeastFive.contains(5.0)     // true",
            "atLeastFive.contains(6.0)     // true"
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3329395",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "You can use this type of partial range of a collection’s indices to represent the range from the partial range’s lower bound up to the end of the collection."
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "let numbers = [10, 20, 30, 40, 50, 60, 70]",
            "print(numbers[3...])",
            "// Prints \"[40, 50, 60, 70]\""
          ],
          "syntax": "swift",
          "metadata": {
            "anchor": "3329396",
            "title": "Listing 2"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Precondition: "
            },
            {
              "type": "codeVoice",
              "code": "minimum"
            },
            {
              "type": "text",
              "text": " must compare equal to itself (i.e. cannot be NaN)."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}