{
  "abstract": [
    {
      "type": "text",
      "text": "The code prefers to be denied access to resources if gaining access would invalidate it."
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/security",
        "doc://com.apple.documentation/documentation/security/code_signing_services",
        "doc://com.apple.documentation/documentation/security/seccodestatus"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/security/seccodestatus/kseccodestatushard",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1395917,
  "kind": "symbol",
  "metadata": {
    "title": "kSecCodeStatusHard",
    "role": "symbol",
    "roleHeading": "Enumeration Case",
    "modules": [
      {
        "name": "Security"
      }
    ],
    "platforms": [
      {
        "name": "macOS",
        "introducedAt": "10.6",
        "current": "11.1"
      }
    ],
    "externalID": "c:@E@SecCodeStatus@kSecCodeStatusHard",
    "symbolKind": "econst"
  },
  "schemaVersion": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/security/seccodestatus/kseccodestatushard"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/security/seccodestatus/1395917-hard"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/security": {
      "title": "Security",
      "identifier": "doc://com.apple.documentation/documentation/security",
      "url": "/documentation/security",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/security/code_signing_services": {
      "title": "Code Signing Services",
      "identifier": "doc://com.apple.documentation/documentation/security/code_signing_services",
      "url": "/documentation/security/code_signing_services",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/security/seccodestatus": {
      "title": "SecCodeStatus",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/security/seccodestatus",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/security/seccodestatus",
      "abstract": [
        {
          "type": "text",
          "text": "Operational flags attached by code signing services to running code. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "identifier",
              "text": "kSecCodeStatusHard"
            },
            {
              "kind": "text",
              "text": " = 0x00000100"
            }
          ],
          "platforms": [
            "macOS"
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "This bit can not be cleared on running code; it can only be set. It is undefined whether code that has the hard flag set but that starts out with the valid bit cleared (that is, itâ€™s already invalid) will still be denied access to a resource that would invalidate it if it were still valid. That is, the code may or may not get access to such a resource while being invalid."
            }
          ]
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2020 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}