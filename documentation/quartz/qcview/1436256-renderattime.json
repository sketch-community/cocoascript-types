{
  "abstract": [
    {
      "type": "text",
      "text": "Overrides to perform  your custom operations prior to or after rendering a frame of a composition. "
    }
  ],
  "documentVersion": 0,
  "hierarchy": {
    "paths": [
      [
        "doc://com.apple.documentation/documentation/technologies",
        "doc://com.apple.documentation/documentation/quartz",
        "doc://com.apple.documentation/documentation/quartz/quartz_composer",
        "doc://com.apple.documentation/documentation/quartz/qcview"
      ]
    ]
  },
  "identifier": {
    "url": "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime",
    "interfaceLanguage": "occ"
  },
  "legacy_identifier": 1436256,
  "kind": "symbol",
  "metadata": {
    "title": "renderAtTime:arguments:",
    "role": "symbol",
    "roleHeading": "Instance Method",
    "modules": [
      {
        "name": "Quartz"
      }
    ],
    "platforms": [
      {
        "name": "macOS",
        "introducedAt": "10.5",
        "deprecatedAt": "10.15",
        "current": "12.1",
        "deprecated": true
      }
    ],
    "externalID": "c:objc(cs)QCView(im)renderAtTime:arguments:",
    "parent": {
      "title": "QCView"
    },
    "symbolKind": "instm"
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  },
  "sections": [],
  "variants": [
    {
      "traits": [
        {
          "interfaceLanguage": "occ"
        }
      ],
      "paths": [
        "documentation/quartz/qcview/1436256-renderattime"
      ]
    },
    {
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ],
      "paths": [
        "documentation/quartz/qcview/1436256-render"
      ]
    }
  ],
  "references": {
    "doc://com.apple.documentation/documentation/quartz": {
      "title": "Quartz",
      "identifier": "doc://com.apple.documentation/documentation/quartz",
      "url": "/documentation/quartz",
      "type": "topic",
      "kind": "symbol",
      "role": "collection"
    },
    "doc://com.apple.documentation/documentation/quartz/quartz_composer": {
      "title": "Quartz Composer",
      "identifier": "doc://com.apple.documentation/documentation/quartz/quartz_composer",
      "url": "/documentation/quartz/quartz_composer",
      "type": "topic",
      "kind": "article",
      "role": "collectionGroup"
    },
    "doc://com.apple.documentation/documentation/quartz/qcview": {
      "title": "QCView",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/quartz/qcview",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/quartz/qcview",
      "abstract": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "codeVoice",
          "code": "QCView"
        },
        {
          "type": "text",
          "text": " class is a custom "
        },
        {
          "type": "codeVoice",
          "code": "NSView"
        },
        {
          "type": "text",
          "text": " class that loads, plays, and controls Quartz Composer compositions. It is an autonomous view that is driven by an internal timer running on the main thread. "
        }
      ]
    },
    "doc://com.apple.documentation/documentation/quartz/qcrenderer": {
      "title": "QCRenderer",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/quartz/qcrenderer",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/quartz/qcrenderer"
    },
    "doc://com.apple.documentation/documentation/objectivec/no": {
      "title": "NO",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/objectivec/no",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/objectivec/no"
    },
    "doc://com.apple.documentation/documentation/objectivec/yes": {
      "title": "YES",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/objectivec/yes",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/objectivec/yes"
    },
    "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime#2555906": {
      "title": "Listing 1",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime#2555906",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/quartz/qcview/1436256-renderattime#2555906"
    },
    "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime#2555907": {
      "title": "Listing 2",
      "type": "section",
      "identifier": "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime#2555907",
      "kind": "article",
      "role": "codeListing",
      "url": "/documentation/quartz/qcview/1436256-renderattime#2555907"
    },
    "doc://com.apple.documentation/documentation/foundation/nstimeinterval": {
      "title": "NSTimeInterval",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nstimeinterval",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nstimeinterval"
    },
    "doc://com.apple.documentation/documentation/foundation/nsdictionary": {
      "title": "NSDictionary",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/foundation/nsdictionary",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/foundation/nsdictionary"
    },
    "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime": {
      "title": "renderAtTime:arguments:",
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/quartz/qcview/1436256-renderattime",
      "kind": "symbol",
      "role": "symbol",
      "url": "/documentation/quartz/qcview/1436256-renderattime",
      "abstract": [
        {
          "type": "text",
          "text": "Overrides to perform  your custom operations prior to or after rendering a frame of a composition. "
        }
      ],
      "fragments": [
        {
          "kind": "text",
          "text": "- "
        },
        {
          "kind": "identifier",
          "text": "renderAtTime:arguments:"
        }
      ],
      "deprecated": true
    },
    "doc://com.apple.documentation/documentation/technologies": {
      "type": "topic",
      "identifier": "doc://com.apple.documentation/documentation/technologies",
      "url": "/documentation/technologies",
      "kind": "technologies",
      "title": "Technologies"
    }
  },
  "primaryContentSections": [
    {
      "kind": "declarations",
      "declarations": [
        {
          "languages": [
            "occ"
          ],
          "tokens": [
            {
              "kind": "text",
              "text": "- ("
            },
            {
              "kind": "keyword",
              "text": "BOOL"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "identifier",
              "text": "renderAtTime:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:@T@NSTimeInterval",
              "identifier": "doc://com.apple.documentation/documentation/foundation/nstimeinterval",
              "text": "NSTimeInterval"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "time"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "arguments:"
            },
            {
              "kind": "text",
              "text": "("
            },
            {
              "kind": "typeIdentifier",
              "preciseIdentifier": "c:objc(cs)NSDictionary",
              "identifier": "doc://com.apple.documentation/documentation/foundation/nsdictionary",
              "text": "NSDictionary"
            },
            {
              "kind": "text",
              "text": " *"
            },
            {
              "kind": "text",
              "text": ")"
            },
            {
              "kind": "internalParam",
              "text": "arguments"
            },
            {
              "kind": "text",
              "text": ";"
            }
          ],
          "platforms": [
            "macOS"
          ]
        }
      ]
    },
    {
      "kind": "parameters",
      "languages": [
        "occ"
      ],
      "parameters": [
        {
          "name": "time",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "The rendering time, in seconds, of the composition frame."
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "content": [
            {
              "type": "paragraph",
              "inlineContent": [
                {
                  "type": "text",
                  "text": "An optional dictionary that can contain "
                },
                {
                  "type": "codeVoice",
                  "code": "QCRendererEventKey"
                },
                {
                  "type": "text",
                  "text": " or "
                },
                {
                  "type": "codeVoice",
                  "code": "QCRendererMouseLocationKey"
                },
                {
                  "type": "text",
                  "text": " and the associated values. (See "
                },
                {
                  "type": "reference",
                  "isActive": true,
                  "identifier": "doc://com.apple.documentation/documentation/quartz/qcrenderer"
                },
                {
                  "type": "text",
                  "text": " or more information.)"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "return_value",
          "level": 2,
          "text": "Return Value",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "reference",
              "isActive": false,
              "identifier": "doc://com.apple.documentation/documentation/objectivec/no"
            },
            {
              "type": "text",
              "text": " if your custom rendering fails, otherwise, "
            },
            {
              "type": "reference",
              "isActive": false,
              "identifier": "doc://com.apple.documentation/documentation/objectivec/yes"
            },
            {
              "type": "text",
              "text": "."
            }
          ]
        }
      ]
    },
    {
      "kind": "content",
      "content": [
        {
          "anchor": "discussion",
          "level": 2,
          "text": "Discussion",
          "type": "heading"
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Do not call this method directly. You override this method only for subclasses of the "
            },
            {
              "type": "codeVoice",
              "code": "QCView"
            },
            {
              "type": "text",
              "text": " class and only if you want to perform custom operations or OpenGL rendering before and/or after  Quartz Composer renders a frame of the composition. "
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "The most common reasons to override this method are to: "
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "synchronize communication with the composition. For example, you might want to set input parameters of the composition. By overriding this method, you can set parameters only when necessary and only at a specific time."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "underlay or overlay custom OpenGL rendering."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To synchronize communication between a composition and another part of the application, the implementation looks similar to the following:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            " ",
            "- (BOOL) renderAtTime:(NSTimeInterval)time",
            "            arguments:(NSDictionary*)arguments",
            "{",
            "  // Your code to computer the value of myParameterValue",
            "  [self setValue:myParameterValue forInputKey:@\"myInput\"];",
            " ",
            "  BOOL success = [super renderAtTime:time arguments:arguments];",
            " ",
            "  id result = [self valueForOutputKey:@\"myOutput\"];",
            "  //Your code to perform some operation on the result",
            " ",
            "  return success;",
            "}",
            " "
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2555906",
            "title": "Listing 1"
          }
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "To perform OpenGL drawing in a "
            },
            {
              "type": "codeVoice",
              "code": "QCView"
            },
            {
              "type": "text",
              "text": " object, follow these guidelines:"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": " Use the OpenGL context of the "
                    },
                    {
                      "type": "codeVoice",
                      "code": "QCView"
                    },
                    {
                      "type": "text",
                      "text": " object to do drawing. You can retrieve the OpenGL context by calling "
                    },
                    {
                      "type": "codeVoice",
                      "code": "[self openGLContext]"
                    },
                    {
                      "type": "text",
                      "text": ". Note that this context won't  necessarily be set as the current OpenGL context."
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Use CGL macros instead of managing the current OpenGL context yourself. "
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "OpenGL performs a global context and renderer lookup for each command it executes to ensure that all OpenGL commands are issued to the correct rendering context and renderer. There is significant overhead associated with these lookups that can measurably affect  performance. CGL macros let you provide a local context variable and cache the current renderer in that variable. They are simple to use, taking only a few lines of code to set up. "
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Save and restore all state changes except the ones that are part of "
                    },
                    {
                      "type": "codeVoice",
                      "code": "GL_CURRENT_BIT"
                    },
                    {
                      "type": "text",
                      "text": " (RGBA color, color index, normal vector, texture coordinates, and so forth). "
                    }
                  ]
                }
              ]
            },
            {
              "content": [
                {
                  "type": "paragraph",
                  "inlineContent": [
                    {
                      "type": "text",
                      "text": "Check for OpenGL errors with "
                    },
                    {
                      "type": "codeVoice",
                      "code": "glGetError"
                    },
                    {
                      "type": "text",
                      "text": "."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "paragraph",
          "inlineContent": [
            {
              "type": "text",
              "text": "Here’s an example implementation of this method using OpenGL to draw an overlay:"
            }
          ]
        },
        {
          "type": "codeListing",
          "code": [
            "#import <OpenGL/CGLMacro.h>  // Set up using macros",
            " ",
            "- (BOOL) renderAtTime:(NSTimeInterval)time",
            "            arguments:(NSDictionary*)arguments",
            "{",
            "    BOOL success = [super renderAtTime:time arguments:arguments];",
            " ",
            "    // Use the OpenGL context of the view for drawing.",
            "    CGLContextObj cgl_ctx = [[self openGLContext] CGLContextObj];",
            " ",
            "    // Save and set OpenGL states appropriately.",
            "    glGetIntegerv(GL_MATRIX_MODE, &saveMode);",
            "    glMatrixMode(GL_MODELVIEW);",
            "    glPushMatrix();",
            "    glRotatef(45.0, 0.0, 0.0, 1.0);",
            " ",
            "    // The code that performs OpenGL drawing goes here.",
            "    //After drawing, restore original OpenGL states.",
            "    glPopMatrix();",
            "    glMatrixMode(saveMode);",
            " ",
            "    // Check for errors.",
            "    glGetError();",
            "    return success;",
            "}",
            " "
          ],
          "syntax": "occ",
          "metadata": {
            "anchor": "2555907",
            "title": "Listing 2"
          }
        }
      ]
    }
  ],
  "legalNotices": {
    "copyright": "Copyright &copy; 2021 Apple Inc. All rights reserved.",
    "termsOfUse": "https://www.apple.com/legal/internet-services/terms/site.html",
    "privacyPolicy": "https://www.apple.com/privacy/privacy-policy"
  }
}